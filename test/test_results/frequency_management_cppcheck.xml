<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.13.0"/>
    <errors>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;frequency&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;frequency&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="65" column="9"/>
            <symbol>frequency</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;dialedFRQ&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;dialedFRQ&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="66" column="9"/>
            <symbol>dialedFRQ</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;antenna_type&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;antenna_type&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="81" column="9"/>
            <symbol>antenna_type</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;frequency_band&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;frequency_band&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="82" column="9"/>
            <symbol>frequency_band</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;band&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;band&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="101" column="9"/>
            <symbol>band</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;mode&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;mode&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="102" column="9"/>
            <symbol>mode</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;grid_locator&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;grid_locator&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="103" column="9"/>
            <symbol>grid_locator</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;band&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;band&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.h" line="44" column="9"/>
            <symbol>band</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;mode&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;mode&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.h" line="45" column="9"/>
            <symbol>mode</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;countries&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;countries&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.h" line="49" column="9"/>
            <symbol>countries</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;license_class&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;license_class&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.h" line="50" column="9"/>
            <symbol>license_class</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;notes&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;notes&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.h" line="52" column="9"/>
            <symbol>notes</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;band&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;band&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.h" line="67" column="9"/>
            <symbol>band</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;propagation&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;propagation&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.h" line="70" column="9"/>
            <symbol>propagation</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;name&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;name&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.h" line="86" column="9"/>
            <symbol>name</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;grid&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;grid&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.h" line="98" column="9"/>
            <symbol>grid</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;band&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;band&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.h" line="114" column="9"/>
            <symbol>band</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;mode&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;mode&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.h" line="115" column="9"/>
            <symbol>mode</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;error_message&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;error_message&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.h" line="116" column="9"/>
            <symbol>error_message</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::any_of algorithm instead of a raw loop." verbose="Consider using std::any_of algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp" line="269" column="5"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::find_if algorithm instead of a raw loop." verbose="Consider using std::find_if algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp" line="288" column="48"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::copy_if algorithm instead of a raw loop." verbose="Consider using std::copy_if algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp" line="304" column="32"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::find_if algorithm instead of a raw loop." verbose="Consider using std::find_if algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp" line="318" column="48"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::copy algorithm instead of a raw loop." verbose="Consider using std::copy algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp" line="340" column="25"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::find_if algorithm instead of a raw loop." verbose="Consider using std::find_if algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp" line="354" column="48"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::any_of algorithm instead of a raw loop." verbose="Consider using std::any_of algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp" line="397" column="5"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::copy algorithm instead of a raw loop." verbose="Consider using std::copy algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp" line="421" column="15"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::copy algorithm instead of a raw loop." verbose="Consider using std::copy algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp" line="440" column="15"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::any_of algorithm instead of a raw loop." verbose="Consider using std::any_of algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp" line="505" column="5"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::any_of algorithm instead of a raw loop." verbose="Consider using std::any_of algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp" line="529" column="5"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::any_of algorithm instead of a raw loop." verbose="Consider using std::any_of algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp" line="547" column="5"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::find_if algorithm instead of a raw loop." verbose="Consider using std::find_if algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp" line="574" column="48"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::find_if algorithm instead of a raw loop." verbose="Consider using std::find_if algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/amateur_radio.cpp" line="590" column="48"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;type&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;type&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_ground_system.h" line="41" column="9"/>
            <symbol>type</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;material&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;material&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_ground_system.h" line="49" column="9"/>
            <symbol>material</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;notes&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;notes&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_ground_system.h" line="50" column="9"/>
            <symbol>notes</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;antenna_name&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;antenna_name&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_ground_system.h" line="68" column="9"/>
            <symbol>antenna_name</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;polarization&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;polarization&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_ground_system.h" line="70" column="9"/>
            <symbol>polarization</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;antenna_type&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;antenna_type&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_ground_system.h" line="89" column="9"/>
            <symbol>antenna_type</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;timestamp&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;timestamp&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/solar_data.h" line="46" column="9"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;aircraft_type&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;aircraft_type&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/non_amateur_hf.h" line="67" column="9"/>
            <symbol>aircraft_type</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;callsign&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;callsign&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/non_amateur_hf.h" line="69" column="9"/>
            <symbol>callsign</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;registration&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;registration&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/non_amateur_hf.h" line="70" column="9"/>
            <symbol>registration</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;mwara_region&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;mwara_region&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/non_amateur_hf.h" line="73" column="9"/>
            <symbol>mwara_region</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;vessel_type&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;vessel_type&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/non_amateur_hf.h" line="87" column="9"/>
            <symbol>vessel_type</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;callsign&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;callsign&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/non_amateur_hf.h" line="88" column="9"/>
            <symbol>callsign</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;mmsi&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;mmsi&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/non_amateur_hf.h" line="89" column="9"/>
            <symbol>mmsi</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;flag_state&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;flag_state&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/non_amateur_hf.h" line="90" column="9"/>
            <symbol>flag_state</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;FGCom_radiowaveModel_Amateur&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;FGCom_radiowaveModel_Amateur&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_amateur.h" line="38" column="5"/>
            <symbol>FGCom_radiowaveModel_Amateur</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;FGCom_radiowaveModel_AviationHF&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;FGCom_radiowaveModel_AviationHF&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/non_amateur_hf.h" line="157" column="5"/>
            <symbol>FGCom_radiowaveModel_AviationHF</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;FGCom_radiowaveModel_MaritimeHF&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;FGCom_radiowaveModel_MaritimeHF&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/non_amateur_hf.h" line="180" column="5"/>
            <symbol>FGCom_radiowaveModel_MaritimeHF</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.h" line="40" column="25" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="161" column="25" info="Virtual function in base class"/>
            <symbol>getType</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;conv_chan2freq&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;conv_chan2freq&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.h" line="41" column="25" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="185" column="25" info="Virtual function in base class"/>
            <symbol>conv_chan2freq</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;conv_freq2chan&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;conv_freq2chan&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.h" line="42" column="25" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="194" column="25" info="Virtual function in base class"/>
            <symbol>conv_freq2chan</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getFrqMatch&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getFrqMatch&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.h" line="43" column="19" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="208" column="19" info="Virtual function in base class"/>
            <symbol>getFrqMatch</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;processAudioSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;processAudioSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.h" line="44" column="18" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="217" column="18" info="Virtual function in base class"/>
            <symbol>processAudioSamples</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSignal&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSignal&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.h" line="45" column="36" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="176" column="36" info="Virtual function in base class"/>
            <symbol>getSignal</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_string.h" line="32" column="17" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="161" column="25" info="Virtual function in base class"/>
            <symbol>getType</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSignal&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSignal&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_string.h" line="33" column="28" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="176" column="36" info="Virtual function in base class"/>
            <symbol>getSignal</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;conv_chan2freq&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;conv_chan2freq&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_string.h" line="34" column="17" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="185" column="25" info="Virtual function in base class"/>
            <symbol>conv_chan2freq</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;conv_freq2chan&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;conv_freq2chan&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_string.h" line="35" column="17" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="194" column="25" info="Virtual function in base class"/>
            <symbol>conv_freq2chan</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getFrqMatch&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getFrqMatch&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_string.h" line="36" column="11" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="208" column="19" info="Virtual function in base class"/>
            <symbol>getFrqMatch</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;processAudioSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;processAudioSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_string.h" line="37" column="10" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="217" column="18" info="Virtual function in base class"/>
            <symbol>processAudioSamples</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_amateur.h" line="40" column="17" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="161" column="25" info="Virtual function in base class"/>
            <symbol>getType</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;isCompatible&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;isCompatible&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_amateur.h" line="41" column="10" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="256" column="18" info="Virtual function in base class"/>
            <symbol>isCompatible</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSignal&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSignal&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_amateur.h" line="42" column="28" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="176" column="36" info="Virtual function in base class"/>
            <symbol>getSignal</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;conv_chan2freq&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;conv_chan2freq&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_amateur.h" line="43" column="17" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="185" column="25" info="Virtual function in base class"/>
            <symbol>conv_chan2freq</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;conv_freq2chan&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;conv_freq2chan&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_amateur.h" line="44" column="17" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="194" column="25" info="Virtual function in base class"/>
            <symbol>conv_freq2chan</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getFrqMatch&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getFrqMatch&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_amateur.h" line="45" column="11" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="208" column="19" info="Virtual function in base class"/>
            <symbol>getFrqMatch</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;processAudioSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;processAudioSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_amateur.h" line="46" column="10" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="217" column="18" info="Virtual function in base class"/>
            <symbol>processAudioSamples</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;frq_num&gt;30.0&apos; is always true" verbose="Condition &apos;frq_num&gt;30.0&apos; is always true" cwe="571" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp" line="121" column="21" info="Condition &apos;frq_num&gt;30.0&apos; is always true"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp" line="120" column="21" info="Assuming condition &apos;frq_num&lt;=30.0&apos; is false"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;freq&apos; should be passed by const reference." verbose="Parameter &apos;freq&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.cpp" line="71" column="85" info="Function parameter &apos;freq&apos; should be passed by const reference."/>
            <symbol>freq</symbol>
        </error>
        <error id="checkersReport" severity="information" msg="Active checkers: 161/592 (use --checkers-report=&lt;filename&gt; to see details)" verbose="Active checkers: 161/592 (use --checkers-report=&lt;filename&gt; to see details)"/>
    </errors>
</results>
