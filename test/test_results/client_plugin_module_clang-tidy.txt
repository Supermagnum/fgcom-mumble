error: too many errors emitted, stopping now [clang-diagnostic-error]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/fgcom-mumble.h:21:9: warning: header guard does not follow preferred style [llvm-header-guard]
   21 | #ifndef FGCOM_MUMBLE_H
      |         ^~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_FGCOM_MUMBLE_H
   22 | #define FGCOM_MUMBLE_H
      |         ~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_FGCOM_MUMBLE_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/fgcom-mumble.h:24:1: warning: #includes are not sorted properly [llvm-include-order]
   24 | #include <string>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/fgcom-mumble.h:24:1: warning: system include string not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/fgcom-mumble.h [llvmlibc-restrict-system-libc-headers]
   24 | #include <string>
      | ^~~~~~~~~~~~~~~~~
   25 | #include "lib/radio_model.h"
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/fgcom-mumble.h:28:9: warning: macro 'FGCOM_VERSION_MAJOR' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   28 | #define FGCOM_VERSION_MAJOR 1
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/fgcom-mumble.h:29:9: warning: macro 'FGCOM_VERSION_MINOR' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   29 | #define FGCOM_VERSION_MINOR 1
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/fgcom-mumble.h:30:9: warning: macro 'FGCOM_VERSION_PATCH' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   30 | #define FGCOM_VERSION_PATCH 1
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/fgcom-mumble.h:33:9: warning: macro 'SIGNAL_INTERPOLATE_MS' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   33 | #define SIGNAL_INTERPOLATE_MS  500  // timeframe for signal quality interpolation
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/fgcom-mumble.h:41:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   41 | bool fgcom_isPluginActive();
      | ~~~~ ^                     
      | auto                        -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/fgcom-mumble.h:57:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   57 | bool fgcom_radio_isOperable(fgcom_radio r);
      | ~~~~ ^                                    
      | auto                                       -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/fgcom-mumble.h:57:41: warning: parameter name 'r' is too short, expected at least 3 characters [readability-identifier-length]
   57 | bool fgcom_radio_isOperable(fgcom_radio r);
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_BESSEL_H
      |         ^~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_BESSEL_H
   37 | #define DSPFILTERS_BESSEL_H
      |         ~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_BESSEL_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:39:1: warning: #includes are not sorted properly [llvm-include-order]
   39 | #include "DspFilters/Common.h"
      | ^        ~~~~~~~~~~~~~~~~~~~~~
   40 | #include "DspFilters/Cascade.h"
      |          ~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:46:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
   46 | namespace Dsp {
      | ^~~~~~~~~~~~~~~
   47 | 
   48 | /*
   49 |  * Filters with Bessel response characteristics
   50 |  *
   51 |  */
   52 | 
   53 | namespace Bessel {
      | ~~~~~~~~~~~~~~~~
      | namespace Dsp::Bessel
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:57:8: warning: class 'WorkspaceBase' defines a copy constructor and a copy assignment operator but does not define a destructor, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   57 | struct WorkspaceBase
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:59:3: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
   59 |   WorkspaceBase (RootFinderBase* rootsBase)
      |   ^
      |   explicit 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:59:3: warning: 'WorkspaceBase' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   59 |   WorkspaceBase (RootFinderBase* rootsBase)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:64:19: warning: member 'roots' of type 'RootFinderBase &' is a reference [cppcoreguidelines-avoid-const-or-ref-data-members]
   64 |   RootFinderBase& roots;
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:64:19: warning: member variable 'roots' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:67:3: warning: use '= delete' to prohibit calling of a special member function [hicpp-use-equals-delete,modernize-use-equals-delete]
   67 |   WorkspaceBase (WorkspaceBase&);
      |   ^                             
      |                                  = delete
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:68:18: warning: use '= delete' to prohibit calling of a special member function [hicpp-use-equals-delete,modernize-use-equals-delete]
   68 |   WorkspaceBase& operator= (WorkspaceBase&);
      |                  ^                         
      |                                             = delete
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:68:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   68 |   WorkspaceBase& operator= (WorkspaceBase&);
      |   ~~~~~~~~~~~~~~ ^                         
      |   auto                                      -> WorkspaceBase&
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:74:3: warning: 'Workspace<MaxOrder>' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   74 |   Workspace ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:80:3: error: no template named 'RootFinder'; did you mean 'RootFinderBase::RootFinder'? [clang-diagnostic-error]
   80 |   RootFinder <MaxOrder> m_roots;
      |   ^~~~~~~~~~
      |   RootFinderBase::RootFinder
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:116:8: note: 'RootFinderBase::RootFinder' declared here
  116 | struct RootFinder : RootFinderBase
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:92:16: warning: parameter 'numPoles' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
   92 |   void design (const int numPoles,
      |                ^~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:93:31: warning: parameter name 'w' is too short, expected at least 3 characters [readability-identifier-length]
   93 |                WorkspaceBase* w);
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:108:31: warning: parameter name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  108 |                WorkspaceBase* w);
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:119:8: warning: accessing fields in struct 'LowPassBase' is inefficient due to padding; only needs 1 bytes but is using 88 bytes [altera-struct-pack-align]
  119 | struct LowPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  120 | {
  121 |   void setup (int order,
  122 |               double sampleRate,
  123 |               double cutoffFrequency,
  124 |               WorkspaceBase* w);
  125 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:119:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'LowPassBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:119:8: warning: accessing fields in struct 'LowPassBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  119 | struct LowPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  120 | {
  121 |   void setup (int order,
  122 |               double sampleRate,
  123 |               double cutoffFrequency,
  124 |               WorkspaceBase* w);
  125 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:119:8: note: use "__attribute__((aligned(1)))" to align struct 'LowPassBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:124:30: warning: parameter name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  124 |               WorkspaceBase* w);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:127:8: warning: accessing fields in struct 'HighPassBase' is inefficient due to padding; only needs 1 bytes but is using 88 bytes [altera-struct-pack-align]
  127 | struct HighPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  128 | {
  129 |   void setup (int order,
  130 |               double sampleRate,
  131 |               double cutoffFrequency,
  132 |               WorkspaceBase* w);
  133 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:127:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'HighPassBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:127:8: warning: accessing fields in struct 'HighPassBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  127 | struct HighPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  128 | {
  129 |   void setup (int order,
  130 |               double sampleRate,
  131 |               double cutoffFrequency,
  132 |               WorkspaceBase* w);
  133 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:127:8: note: use "__attribute__((aligned(1)))" to align struct 'HighPassBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:132:30: warning: parameter name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  132 |               WorkspaceBase* w);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:135:8: warning: accessing fields in struct 'BandPassBase' is inefficient due to padding; only needs 1 bytes but is using 88 bytes [altera-struct-pack-align]
  135 | struct BandPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  136 | {
  137 |   void setup (int order,
  138 |               double sampleRate,
  139 |               double centerFrequency,
  140 |               double widthFrequency,
  141 |               WorkspaceBase* w);
  142 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:135:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandPassBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:135:8: warning: accessing fields in struct 'BandPassBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  135 | struct BandPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  136 | {
  137 |   void setup (int order,
  138 |               double sampleRate,
  139 |               double centerFrequency,
  140 |               double widthFrequency,
  141 |               WorkspaceBase* w);
  142 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:135:8: note: use "__attribute__((aligned(1)))" to align struct 'BandPassBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:141:30: warning: parameter name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  141 |               WorkspaceBase* w);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:144:8: warning: accessing fields in struct 'BandStopBase' is inefficient due to padding; only needs 1 bytes but is using 88 bytes [altera-struct-pack-align]
  144 | struct BandStopBase : PoleFilterBase <AnalogLowPass>
      |        ^
  145 | {
  146 |   void setup (int order,
  147 |               double sampleRate,
  148 |               double centerFrequency,
  149 |               double widthFrequency,
  150 |               WorkspaceBase* w);
  151 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:144:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandStopBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:144:8: warning: accessing fields in struct 'BandStopBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  144 | struct BandStopBase : PoleFilterBase <AnalogLowPass>
      |        ^
  145 | {
  146 |   void setup (int order,
  147 |               double sampleRate,
  148 |               double centerFrequency,
  149 |               double widthFrequency,
  150 |               WorkspaceBase* w);
  151 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:144:8: note: use "__attribute__((aligned(1)))" to align struct 'BandStopBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:150:30: warning: parameter name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  150 |               WorkspaceBase* w);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:153:8: warning: accessing fields in struct 'LowShelfBase' is inefficient due to padding; only needs 1 bytes but is using 96 bytes [altera-struct-pack-align]
  153 | struct LowShelfBase : PoleFilterBase <AnalogLowShelf>
      |        ^
  154 | {
  155 |   void setup (int order,
  156 |               double sampleRate,
  157 |               double cutoffFrequency,
  158 |               double gainDb,
  159 |               WorkspaceBase* w);
  160 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:153:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'LowShelfBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:153:8: warning: accessing fields in struct 'LowShelfBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  153 | struct LowShelfBase : PoleFilterBase <AnalogLowShelf>
      |        ^
  154 | {
  155 |   void setup (int order,
  156 |               double sampleRate,
  157 |               double cutoffFrequency,
  158 |               double gainDb,
  159 |               WorkspaceBase* w);
  160 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:153:8: note: use "__attribute__((aligned(1)))" to align struct 'LowShelfBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:159:30: warning: parameter name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  159 |               WorkspaceBase* w);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:171:3: warning: 'setup' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  171 |   void setup (int order,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:175:26: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  175 |     Workspace <MaxOrder> w;
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:186:3: warning: 'setup' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  186 |   void setup (int order,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:190:26: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  190 |     Workspace <MaxOrder> w;
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:201:3: warning: 'setup' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  201 |   void setup (int order,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:206:26: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  206 |     Workspace <MaxOrder> w;
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:218:3: warning: 'setup' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  218 |   void setup (int order,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:223:26: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  223 |     Workspace <MaxOrder> w;
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:235:3: warning: 'setup' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  235 |   void setup (int order,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:240:26: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  240 |     Workspace <MaxOrder> w;
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:259:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:259:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  259 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:264:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  264 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:264:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  264 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:269:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  269 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:269:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  269 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:269:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  269 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:271:12: warning: 'defaultCutoffFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  271 |     return ParamInfo::defaultCutoffFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:213:20: note: resolves to this declaration
  213 |   static ParamInfo defaultCutoffFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:278:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  278 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:280:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  280 |     FilterClass::setup (int(params[1]), params[0], params[2]);
      |                         ^~~
      |                         static_cast<int>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:280:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  280 |     FilterClass::setup (int(params[1]), params[0], params[2]);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:280:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  280 |     FilterClass::setup (int(params[1]), params[0], params[2]);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:280:58: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  280 |     FilterClass::setup (int(params[1]), params[0], params[2]);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:286:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:286:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  286 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:291:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  291 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:291:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  291 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:296:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  296 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:296:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  296 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:296:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  296 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:298:12: warning: 'defaultCenterFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  298 |     return ParamInfo::defaultCenterFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:214:20: note: resolves to this declaration
  214 |   static ParamInfo defaultCenterFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:301:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  301 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:301:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  301 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:301:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  301 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:303:12: warning: 'defaultBandwidthHzParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  303 |     return ParamInfo::defaultBandwidthHzParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:217:20: note: resolves to this declaration
  217 |   static ParamInfo defaultBandwidthHzParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:310:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  310 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:312:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  312 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                         ^~~
      |                         static_cast<int>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:312:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  312 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:312:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  312 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:312:58: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  312 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:312:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  312 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:318:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:318:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  318 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:323:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  323 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:323:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  323 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:328:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  328 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:328:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  328 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:328:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  328 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:330:12: warning: 'defaultCutoffFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  330 |     return ParamInfo::defaultCutoffFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:213:20: note: resolves to this declaration
  213 |   static ParamInfo defaultCutoffFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:333:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  333 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:333:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  333 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:333:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  333 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:335:12: warning: 'defaultGainParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  335 |     return ParamInfo::defaultGainParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:218:20: note: resolves to this declaration
  218 |   static ParamInfo defaultGainParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:342:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  342 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:344:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  344 |     FilterClass::setup (int(params[1]),
      |                         ^~~
      |                         static_cast<int>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:344:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  344 |     FilterClass::setup (int(params[1]),
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:345:31: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  345 |                         params[0],
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:346:31: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  346 |                         params[2],
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:347:31: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  347 |                         params[3]);
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:353:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:353:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  353 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:358:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  358 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:358:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  358 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:360:12: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  360 |     return 5;
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:363:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  363 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:363:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  363 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:363:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  363 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:365:12: warning: 'defaultCenterFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  365 |     return ParamInfo::defaultCenterFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:214:20: note: resolves to this declaration
  214 |   static ParamInfo defaultCenterFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:368:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  368 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:368:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  368 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:368:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  368 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:370:12: warning: 'defaultBandwidthHzParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  370 |     return ParamInfo::defaultBandwidthHzParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:217:20: note: resolves to this declaration
  217 |   static ParamInfo defaultBandwidthHzParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:373:3: warning: 'getParamInfo_4' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  373 |   static const ParamInfo getParamInfo_4 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:373:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  373 |   static const ParamInfo getParamInfo_4 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:373:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  373 |   static const ParamInfo getParamInfo_4 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:375:12: warning: 'defaultGainParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  375 |     return ParamInfo::defaultGainParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:218:20: note: resolves to this declaration
  218 |   static ParamInfo defaultGainParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:382:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  382 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:384:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  384 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                         ^~~
      |                         static_cast<int>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:384:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  384 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:384:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  384 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:384:58: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  384 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:384:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  384 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:384:80: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  384 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:392:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  392 |   static Kind getKind () { return kindLowPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:392:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  392 |   static Kind getKind () { return kindLowPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:393:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  393 |   static const char* getName() { return "Bessel Low Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:393:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  393 |   static const char* getName() { return "Bessel Low Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:398:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  398 |   static Kind getKind () { return kindHighPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:398:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  398 |   static Kind getKind () { return kindHighPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:399:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  399 |   static const char* getName() { return "Bessel High Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:399:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  399 |   static const char* getName() { return "Bessel High Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:404:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  404 |   static Kind getKind () { return kindHighPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:404:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  404 |   static Kind getKind () { return kindHighPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:405:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  405 |   static const char* getName() { return "Bessel Band Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:405:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  405 |   static const char* getName() { return "Bessel Band Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:410:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  410 |   static Kind getKind () { return kindHighPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:410:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  410 |   static Kind getKind () { return kindHighPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:411:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  411 |   static const char* getName() { return "Bessel Band Stop"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:411:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  411 |   static const char* getName() { return "Bessel Band Stop"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:416:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  416 |   static Kind getKind () { return kindLowShelf; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:416:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  416 |   static Kind getKind () { return kindLowShelf; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:417:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  417 |   static const char* getName() { return "Bessel Low Shelf"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:417:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  417 |   static const char* getName() { return "Bessel Low Shelf"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:426:3: warning: 'getParamInfo_1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  426 |   const ParamInfo getParamInfo_1 () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:426:3: warning: function 'getParamInfo_1' should be marked [[nodiscard]] [modernize-use-nodiscard]
  426 |   const ParamInfo getParamInfo_1 () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:426:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  426 |   const ParamInfo getParamInfo_1 () const
      |   ^~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:426:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  426 |   const ParamInfo getParamInfo_1 () const
      |   ~~~~~~~~~~~~~~~ ^                      
      |   auto                                    -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:430:25: warning: 'Int_toControlValue' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  430 |                        &ParamInfo::Int_toControlValue,
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:191:10: note: resolves to this declaration
  191 |   double Int_toControlValue (double nativeValue) const;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:431:25: warning: 'Int_toNativeValue' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  431 |                        &ParamInfo::Int_toNativeValue,
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:192:10: note: resolves to this declaration
  192 |   double Int_toNativeValue (double controlValue) const;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:432:25: warning: 'Int_toString' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  432 |                        &ParamInfo::Int_toString);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:203:15: note: resolves to this declaration
  203 |   std::string Int_toString (double nativeValue) const;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:477:1: warning: namespace 'Design' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  477 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:255:11: note: namespace 'Design' starts here
  255 | namespace Design {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:479:1: warning: namespace 'Bessel' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  479 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:53:11: note: namespace 'Bessel' starts here
   53 | namespace Bessel {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:481:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  481 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Bessel.h:46:11: note: namespace 'Dsp' starts here
   46 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:36:1: warning: #includes are not sorted properly [llvm-include-order]
   36 | #include "DspFilters/Common.h"
      | ^        ~~~~~~~~~~~~~~~~~~~~~
   37 | #include "DspFilters/MathSupplement.h"
      |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   38 | #include "DspFilters/Biquad.h"
      |          ~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:44:16: warning: variable name 'a0' is too short, expected at least 3 characters [readability-identifier-length]
   44 |   const double a0 = s.getA0 ();
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:45:16: warning: variable name 'a1' is too short, expected at least 3 characters [readability-identifier-length]
   45 |   const double a1 = s.getA1 ();
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:46:16: warning: variable name 'a2' is too short, expected at least 3 characters [readability-identifier-length]
   46 |   const double a2 = s.getA2 ();
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:47:16: warning: variable name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
   47 |   const double b0 = s.getB0 ();
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:48:16: warning: variable name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
   48 |   const double b1 = s.getB1 ();
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:49:16: warning: variable name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
   49 |   const double b2 = s.getB2 ();
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:62:23: warning: variable name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   62 |       const complex_t c = sqrt (complex_t (a1 * a1 - 4 * a0 * a2, 0));
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:63:14: warning: variable 'd' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   63 |       double d = 2. * a0;
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:63:14: warning: variable name 'd' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:70:23: warning: variable name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   70 |       const complex_t c = sqrt (complex_t (
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:72:14: warning: variable 'd' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   72 |       double d = 2. * b0;
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:72:14: warning: variable name 'd' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:86:16: warning: variable name 'a0' is too short, expected at least 3 characters [readability-identifier-length]
   86 |   const double a0 = getA0 ();
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:87:16: warning: variable name 'a1' is too short, expected at least 3 characters [readability-identifier-length]
   87 |   const double a1 = getA1 ();
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:88:16: warning: variable name 'a2' is too short, expected at least 3 characters [readability-identifier-length]
   88 |   const double a2 = getA2 ();
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:89:16: warning: variable name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
   89 |   const double b0 = getB0 ();
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:90:16: warning: variable name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
   90 |   const double b1 = getB1 ();
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:91:16: warning: variable name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
   91 |   const double b2 = getB2 ();
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:93:16: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
   93 |   const double w = 2 * doublePi * normalizedFrequency;
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:96:13: warning: initialization of 'ch' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
   96 |   complex_t ch (1);
      |             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:26: note: possibly throwing constructor declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:96:13: warning: variable 'ch' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   96 |   complex_t ch (1);
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:96:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:52: note: default parameter was declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:96:13: warning: variable name 'ch' is too short, expected at least 3 characters [readability-identifier-length]
   96 |   complex_t ch (1);
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:97:13: warning: initialization of 'cbot' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
   97 |   complex_t cbot (1);
      |             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:26: note: possibly throwing constructor declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:97:13: warning: variable 'cbot' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   97 |   complex_t cbot (1);
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:97:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:52: note: default parameter was declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:99:13: warning: variable 'ct' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   99 |   complex_t ct (b0/a0);
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:99:13: warning: variable name 'ct' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:100:13: warning: initialization of 'cb' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  100 |   complex_t cb (1);
      |             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:26: note: possibly throwing constructor declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:100:13: warning: variable 'cb' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  100 |   complex_t cb (1);
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:100:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:52: note: default parameter was declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:100:13: warning: variable name 'cb' is too short, expected at least 3 characters [readability-identifier-length]
  100 |   complex_t cb (1);
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:114:19: warning: variable 'bps' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  114 |   BiquadPoleState bps (*this);
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:135:2: warning: preprocessor condition is always 'false', consider removing both the condition and its contents [readability-avoid-unconditional-preprocessor-if]
  135 | #if 0
      |  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:143:16: warning: variable name 'a0' is too short, expected at least 3 characters [readability-identifier-length]
  143 |   const double a0 = 1;
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:144:16: warning: variable name 'a1' is too short, expected at least 3 characters [readability-identifier-length]
  144 |   const double a1 = -pole.real();
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:145:16: warning: variable name 'a2' is too short, expected at least 3 characters [readability-identifier-length]
  145 |   const double a2 = 0;
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:146:16: warning: variable name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
  146 |   const double b0 = -zero.real();
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:147:16: warning: variable name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
  147 |   const double b1 = 1;
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:148:16: warning: variable name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
  148 |   const double b2 = 0;
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:156:2: warning: preprocessor condition is always 'false', consider removing both the condition and its contents [readability-avoid-unconditional-preprocessor-if]
  156 | #if 0
      |  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:163:16: warning: variable name 'a0' is too short, expected at least 3 characters [readability-identifier-length]
  163 |   const double a0 = 1;
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:164:10: warning: variable 'a1' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  164 |   double a1;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:164:10: warning: variable name 'a1' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:165:10: warning: variable 'a2' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  165 |   double a2;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:165:10: warning: variable name 'a2' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:182:16: warning: variable name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
  182 |   const double b0 = 1;
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:183:10: warning: variable 'b1' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  183 |   double b1;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:183:10: warning: variable name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:184:10: warning: variable 'b2' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  184 |   double b2;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:184:10: warning: variable name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:236:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  236 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.cpp:40:11: note: namespace 'Dsp' starts here
   40 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_BIQUAD_H
      |         ^~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_BIQUAD_H
   37 | #define DSPFILTERS_BIQUAD_H
      |         ~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_BIQUAD_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:61:5: warning: 'process' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   61 |     inline Sample process (const Sample in, const BiquadBase& b)
      |     ^
      |     LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:61:5: warning: function 'process' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   61 |     inline Sample process (const Sample in, const BiquadBase& b)
      |     ^~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:61:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     inline Sample process (const Sample in, const BiquadBase& b)
      |            ~~~~~~ ^                                             
      |            auto                                                  -> Sample
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:61:41: warning: parameter name 'in' is too short, expected at least 3 characters [readability-identifier-length]
   61 |     inline Sample process (const Sample in, const BiquadBase& b)
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:61:63: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
   61 |     inline Sample process (const Sample in, const BiquadBase& b)
      |                                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:67:1: warning: redundant access specifier has the same accessibility as the previous access specifier [readability-redundant-access-specifiers]
   67 | public:
      | ^~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:56:1: note: previously declared here
   56 | public:
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:69:3: warning: function 'response' should be marked [[nodiscard]] [modernize-use-nodiscard]
   69 |   complex_t response (double normalizedFrequency) const;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:69:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   69 |   complex_t response (double normalizedFrequency) const;
      |   ~~~~~~~~~ ^                                          
      |   auto                                                  -> complex_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:71:3: warning: function 'getPoleZeros' should be marked [[nodiscard]] [modernize-use-nodiscard]
   71 |   std::vector<PoleZeroPair> getPoleZeros () const;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:71:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   71 |   std::vector<PoleZeroPair> getPoleZeros () const;
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~ ^                    
      |   auto                                            -> std::vector<PoleZeroPair>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:73:3: warning: 'getA0' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   73 |   double getA0 () const { return m_a0; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:73:3: warning: function 'getA0' should be marked [[nodiscard]] [modernize-use-nodiscard]
   73 |   double getA0 () const { return m_a0; }
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:73:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   73 |   double getA0 () const { return m_a0; }
      |   ~~~~~~ ^
      |   auto                  -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:74:3: warning: 'getA1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   74 |   double getA1 () const { return m_a1*m_a0; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:74:3: warning: function 'getA1' should be marked [[nodiscard]] [modernize-use-nodiscard]
   74 |   double getA1 () const { return m_a1*m_a0; }
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:74:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   74 |   double getA1 () const { return m_a1*m_a0; }
      |   ~~~~~~ ^
      |   auto                  -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:75:3: warning: 'getA2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   75 |   double getA2 () const { return m_a2*m_a0; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:75:3: warning: function 'getA2' should be marked [[nodiscard]] [modernize-use-nodiscard]
   75 |   double getA2 () const { return m_a2*m_a0; }
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:75:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   75 |   double getA2 () const { return m_a2*m_a0; }
      |   ~~~~~~ ^
      |   auto                  -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:76:3: warning: 'getB0' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   76 |   double getB0 () const { return m_b0*m_a0; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:76:3: warning: function 'getB0' should be marked [[nodiscard]] [modernize-use-nodiscard]
   76 |   double getB0 () const { return m_b0*m_a0; }
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:76:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   76 |   double getB0 () const { return m_b0*m_a0; }
      |   ~~~~~~ ^
      |   auto                  -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:77:3: warning: 'getB1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   77 |   double getB1 () const { return m_b1*m_a0; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:77:3: warning: function 'getB1' should be marked [[nodiscard]] [modernize-use-nodiscard]
   77 |   double getB1 () const { return m_b1*m_a0; }
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:77:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   77 |   double getB1 () const { return m_b1*m_a0; }
      |   ~~~~~~ ^
      |   auto                  -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:78:3: warning: 'getB2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   78 |   double getB2 () const { return m_b2*m_a0; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:78:3: warning: function 'getB2' should be marked [[nodiscard]] [modernize-use-nodiscard]
   78 |   double getB2 () const { return m_b2*m_a0; }
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:78:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   78 |   double getB2 () const { return m_b2*m_a0; }
      |   ~~~~~~ ^
      |   auto                  -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:82:3: warning: 'process' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   82 |   void process (int numSamples, Sample* dest, StateType& state) const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:84:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   84 |     while (--numSamples >= 0) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:95:32: warning: parameter name 'a0' is too short, expected at least 3 characters [readability-identifier-length]
   95 |   void setCoefficients (double a0, double a1, double a2,
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:95:43: warning: parameter name 'a1' is too short, expected at least 3 characters [readability-identifier-length]
   95 |   void setCoefficients (double a0, double a1, double a2,
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:95:54: warning: parameter name 'a2' is too short, expected at least 3 characters [readability-identifier-length]
   95 |   void setCoefficients (double a0, double a1, double a2,
      |                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:96:32: warning: parameter name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
   96 |                         double b0, double b1, double b2);
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:96:43: warning: parameter name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
   96 |                         double b0, double b1, double b2);
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:96:54: warning: parameter name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
   96 |                         double b0, double b1, double b2);
      |                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:103:3: warning: 'setPoleZeroPair' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  103 |   void setPoleZeroPair (const PoleZeroPair& pair)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:105:30: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  105 |     if (pair.isSinglePole ())
      |                              ^
      |                               {
  106 |       setOnePole (pair.poles.first, pair.zeros.first);
  107 |     else
      |     } 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:107:9: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  107 |     else
      |         ^
      |          {
  108 |       setTwoPole (pair.poles.first, pair.zeros.first,
  109 |                   pair.poles.second, pair.zeros.second);
      |                                                         
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:119:10: warning: member variable 'm_a0' has public visibility [misc-non-private-member-variables-in-classes]
  119 |   double m_a0;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:120:10: warning: member variable 'm_a1' has public visibility [misc-non-private-member-variables-in-classes]
  120 |   double m_a1;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:121:10: warning: member variable 'm_a2' has public visibility [misc-non-private-member-variables-in-classes]
  121 |   double m_a2;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:122:10: warning: member variable 'm_b1' has public visibility [misc-non-private-member-variables-in-classes]
  122 |   double m_b1;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:123:10: warning: member variable 'm_b2' has public visibility [misc-non-private-member-variables-in-classes]
  123 |   double m_b2;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:124:10: warning: member variable 'm_b0' has public visibility [misc-non-private-member-variables-in-classes]
  124 |   double m_b0;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:131:8: warning: accessing fields in struct 'BiquadPoleState' is inefficient due to padding; only needs 8 bytes but is using 72 bytes [altera-struct-pack-align]
  131 | struct BiquadPoleState : PoleZeroPair
      |        ^
  132 | {
  133 |   BiquadPoleState () { }
  134 | 
  135 |   explicit BiquadPoleState (const BiquadBase& s);
  136 | 
  137 |   double gain;
  138 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:131:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BiquadPoleState'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:133:3: warning: constructor does not initialize these fields: gain [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
  133 |   BiquadPoleState () { }
      |   ^
  134 | 
  135 |   explicit BiquadPoleState (const BiquadBase& s);
  136 | 
  137 |   double gain;
      |              
      |              {}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:133:3: warning: use '= default' to define a trivial default constructor [hicpp-use-equals-default,modernize-use-equals-default]
  133 |   BiquadPoleState () { }
      |   ^                  ~~~
      |                      = default;
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:133:3: warning: 'BiquadPoleState' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  133 |   BiquadPoleState () { }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:135:47: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
  135 |   explicit BiquadPoleState (const BiquadBase& s);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:137:10: warning: member variable 'gain' has public visibility [misc-non-private-member-variables-in-classes]
  137 |   double gain;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:148:1: warning: redundant access specifier has the same accessibility as the previous access specifier [readability-redundant-access-specifiers]
  148 | public:
      | ^~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:143:1: note: previously declared here
  143 | public:
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:154:3: warning: 'smoothProcess1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  154 |   void smoothProcess1 (int numSamples,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:159:5: warning: variable 't' of type 'double' can be declared 'const' [misc-const-correctness]
  159 |     double t = 1. / numSamples;
      |     ^
      |            const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:159:12: warning: variable name 't' is too short, expected at least 3 characters [readability-identifier-length]
  159 |     double t = 1. / numSamples;
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:160:5: warning: variable 'da1' of type 'double' can be declared 'const' [misc-const-correctness]
  160 |     double da1 = (m_a1 - sectionPrev.m_a1) * t;
      |     ^
      |            const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:161:5: warning: variable 'da2' of type 'double' can be declared 'const' [misc-const-correctness]
  161 |     double da2 = (m_a2 - sectionPrev.m_a2) * t;
      |     ^
      |            const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:162:5: warning: variable 'db0' of type 'double' can be declared 'const' [misc-const-correctness]
  162 |     double db0 = (m_b0 - sectionPrev.m_b0) * t;
      |     ^
      |            const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:163:5: warning: variable 'db1' of type 'double' can be declared 'const' [misc-const-correctness]
  163 |     double db1 = (m_b1 - sectionPrev.m_b1) * t;
      |     ^
      |            const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:164:5: warning: variable 'db2' of type 'double' can be declared 'const' [misc-const-correctness]
  164 |     double db2 = (m_b2 - sectionPrev.m_b2) * t;
      |     ^
      |            const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:166:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  166 |     while (--numSamples >= 0)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:183:3: warning: 'smoothProcess2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  183 |   void smoothProcess2 (int numSamples,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:188:5: warning: variable 'z' of type 'BiquadPoleState' can be declared 'const' [misc-const-correctness]
  188 |     BiquadPoleState z (*this);
      |     ^
      |                     const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:188:21: warning: variable name 'z' is too short, expected at least 3 characters [readability-identifier-length]
  188 |     BiquadPoleState z (*this);
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:189:5: warning: variable 't' of type 'double' can be declared 'const' [misc-const-correctness]
  189 |     double t = 1. / numSamples;
      |     ^
      |            const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:189:12: warning: variable name 't' is too short, expected at least 3 characters [readability-identifier-length]
  189 |     double t = 1. / numSamples;
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:190:5: warning: variable 'dp0' of type 'complex_t' (aka 'complex<double>') can be declared 'const' [misc-const-correctness]
  190 |     complex_t dp0 = (z.poles.first  - zPrev.poles.first) * t;
      |     ^
      |               const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:190:37: warning: 'operator-<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  190 |     complex_t dp0 = (z.poles.first  - zPrev.poles.first) * t;
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:365:5: note: resolves to this declaration
  365 |     operator-(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:190:58: warning: 'operator*<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  190 |     complex_t dp0 = (z.poles.first  - zPrev.poles.first) * t;
      |                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:404:5: note: resolves to this declaration
  404 |     operator*(const complex<_Tp>& __x, const _Tp& __y)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:191:5: warning: variable 'dp1' of type 'complex_t' (aka 'complex<double>') can be declared 'const' [misc-const-correctness]
  191 |     complex_t dp1 = (z.poles.second - zPrev.poles.second) * t;
      |     ^
      |               const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:191:37: warning: 'operator-<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  191 |     complex_t dp1 = (z.poles.second - zPrev.poles.second) * t;
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:365:5: note: resolves to this declaration
  365 |     operator-(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:191:59: warning: 'operator*<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  191 |     complex_t dp1 = (z.poles.second - zPrev.poles.second) * t;
      |                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:404:5: note: resolves to this declaration
  404 |     operator*(const complex<_Tp>& __x, const _Tp& __y)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:192:5: warning: variable 'dz0' of type 'complex_t' (aka 'complex<double>') can be declared 'const' [misc-const-correctness]
  192 |     complex_t dz0 = (z.zeros.first  - zPrev.zeros.first) * t;
      |     ^
      |               const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:192:37: warning: 'operator-<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  192 |     complex_t dz0 = (z.zeros.first  - zPrev.zeros.first) * t;
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:365:5: note: resolves to this declaration
  365 |     operator-(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:192:58: warning: 'operator*<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  192 |     complex_t dz0 = (z.zeros.first  - zPrev.zeros.first) * t;
      |                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:404:5: note: resolves to this declaration
  404 |     operator*(const complex<_Tp>& __x, const _Tp& __y)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:193:5: warning: variable 'dz1' of type 'complex_t' (aka 'complex<double>') can be declared 'const' [misc-const-correctness]
  193 |     complex_t dz1 = (z.zeros.second - zPrev.zeros.second) * t;
      |     ^
      |               const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:193:37: warning: 'operator-<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  193 |     complex_t dz1 = (z.zeros.second - zPrev.zeros.second) * t;
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:365:5: note: resolves to this declaration
  365 |     operator-(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:193:59: warning: 'operator*<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  193 |     complex_t dz1 = (z.zeros.second - zPrev.zeros.second) * t;
      |                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:404:5: note: resolves to this declaration
  404 |     operator*(const complex<_Tp>& __x, const _Tp& __y)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:194:5: warning: variable 'dg' of type 'double' can be declared 'const' [misc-const-correctness]
  194 |     double dg = (z.gain - zPrev.gain) * t;
      |     ^
      |            const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:194:12: warning: variable name 'dg' is too short, expected at least 3 characters [readability-identifier-length]
  194 |     double dg = (z.gain - zPrev.gain) * t;
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:196:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  196 |     while (--numSamples >= 0)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:198:25: warning: 'operator+=<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  198 |       zPrev.poles.first += dp0;
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1617:9: note: resolves to this declaration
 1617 |         operator+=(const complex<_Tp>& __z)
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:199:26: warning: 'operator+=<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  199 |       zPrev.poles.second += dp1;
      |                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1617:9: note: resolves to this declaration
 1617 |         operator+=(const complex<_Tp>& __z)
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:200:25: warning: 'operator+=<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  200 |       zPrev.zeros.first += dz0;
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1617:9: note: resolves to this declaration
 1617 |         operator+=(const complex<_Tp>& __z)
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:201:26: warning: 'operator+=<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  201 |       zPrev.zeros.second += dz1;
      |                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1617:9: note: resolves to this declaration
 1617 |         operator+=(const complex<_Tp>& __z)
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:209:1: warning: redundant access specifier has the same accessibility as the previous access specifier [readability-redundant-access-specifiers]
  209 | public:
      | ^~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:143:1: note: previously declared here
  143 | public:
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:212:3: warning: 'setOnePole' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  212 |   void setOnePole (complex_t pole, complex_t zero)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:217:3: warning: 'setTwoPole' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  217 |   void setTwoPole (complex_t pole1, complex_t zero1,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:223:3: warning: 'setPoleZeroPair' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  223 |   void setPoleZeroPair (const PoleZeroPair& pair)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:228:3: warning: 'applyScale' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  228 |   void applyScale (double scale)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:234:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  234 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Biquad.h:43:11: note: namespace 'Dsp' starts here
   43 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_BUTTERWORTH_H
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_BUTTERWORTH_H
   37 | #define DSPFILTERS_BUTTERWORTH_H
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_BUTTERWORTH_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:39:1: warning: #includes are not sorted properly [llvm-include-order]
   39 | #include "DspFilters/Common.h"
      | ^        ~~~~~~~~~~~~~~~~~~~~~
   40 | #include "DspFilters/Cascade.h"
      |          ~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:45:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
   45 | namespace Dsp {
      | ^~~~~~~~~~~~~~~
   46 | 
   47 | /*
   48 |  * Filters with Butterworth response characteristics
   49 |  *
   50 |  */
   51 | 
   52 | namespace Butterworth {
      | ~~~~~~~~~~~~~~~~~~~~~
      | namespace Dsp::Butterworth
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:61:16: warning: parameter 'numPoles' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
   61 |   void design (const int numPoles);
      |                ^~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:85:8: warning: accessing fields in struct 'LowPassBase' is inefficient due to padding; only needs 1 bytes but is using 88 bytes [altera-struct-pack-align]
   85 | struct LowPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
   86 | {
   87 |   void setup (int order,
   88 |               double sampleRate,
   89 |               double cutoffFrequency);
   90 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:85:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'LowPassBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:85:8: warning: accessing fields in struct 'LowPassBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
   85 | struct LowPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
   86 | {
   87 |   void setup (int order,
   88 |               double sampleRate,
   89 |               double cutoffFrequency);
   90 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:85:8: note: use "__attribute__((aligned(1)))" to align struct 'LowPassBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:92:8: warning: accessing fields in struct 'HighPassBase' is inefficient due to padding; only needs 1 bytes but is using 88 bytes [altera-struct-pack-align]
   92 | struct HighPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
   93 | {
   94 |   void setup (int order,
   95 |               double sampleRate,
   96 |               double cutoffFrequency);
   97 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:92:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'HighPassBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:92:8: warning: accessing fields in struct 'HighPassBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
   92 | struct HighPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
   93 | {
   94 |   void setup (int order,
   95 |               double sampleRate,
   96 |               double cutoffFrequency);
   97 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:92:8: note: use "__attribute__((aligned(1)))" to align struct 'HighPassBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:99:8: warning: accessing fields in struct 'BandPassBase' is inefficient due to padding; only needs 1 bytes but is using 88 bytes [altera-struct-pack-align]
   99 | struct BandPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  100 | {
  101 |   void setup (int order,
  102 |               double sampleRate,
  103 |               double centerFrequency,
  104 |               double widthFrequency);
  105 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:99:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandPassBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:99:8: warning: accessing fields in struct 'BandPassBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
   99 | struct BandPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  100 | {
  101 |   void setup (int order,
  102 |               double sampleRate,
  103 |               double centerFrequency,
  104 |               double widthFrequency);
  105 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:99:8: note: use "__attribute__((aligned(1)))" to align struct 'BandPassBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:107:8: warning: accessing fields in struct 'BandStopBase' is inefficient due to padding; only needs 1 bytes but is using 88 bytes [altera-struct-pack-align]
  107 | struct BandStopBase : PoleFilterBase <AnalogLowPass>
      |        ^
  108 | {
  109 |   void setup (int order,
  110 |               double sampleRate,
  111 |               double centerFrequency,
  112 |               double widthFrequency);
  113 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:107:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandStopBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:107:8: warning: accessing fields in struct 'BandStopBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  107 | struct BandStopBase : PoleFilterBase <AnalogLowPass>
      |        ^
  108 | {
  109 |   void setup (int order,
  110 |               double sampleRate,
  111 |               double centerFrequency,
  112 |               double widthFrequency);
  113 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:107:8: note: use "__attribute__((aligned(1)))" to align struct 'BandStopBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:115:8: warning: accessing fields in struct 'LowShelfBase' is inefficient due to padding; only needs 1 bytes but is using 96 bytes [altera-struct-pack-align]
  115 | struct LowShelfBase : PoleFilterBase <AnalogLowShelf>
      |        ^
  116 | {
  117 |   void setup (int order,
  118 |               double sampleRate,
  119 |               double cutoffFrequency,
  120 |               double gainDb);
  121 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:115:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'LowShelfBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:115:8: warning: accessing fields in struct 'LowShelfBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  115 | struct LowShelfBase : PoleFilterBase <AnalogLowShelf>
      |        ^
  116 | {
  117 |   void setup (int order,
  118 |               double sampleRate,
  119 |               double cutoffFrequency,
  120 |               double gainDb);
  121 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:115:8: note: use "__attribute__((aligned(1)))" to align struct 'LowShelfBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:123:8: warning: accessing fields in struct 'HighShelfBase' is inefficient due to padding; only needs 1 bytes but is using 96 bytes [altera-struct-pack-align]
  123 | struct HighShelfBase : PoleFilterBase <AnalogLowShelf>
      |        ^
  124 | {
  125 |   void setup (int order,
  126 |               double sampleRate,
  127 |               double cutoffFrequency,
  128 |               double gainDb);
  129 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:123:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'HighShelfBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:123:8: warning: accessing fields in struct 'HighShelfBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  123 | struct HighShelfBase : PoleFilterBase <AnalogLowShelf>
      |        ^
  124 | {
  125 |   void setup (int order,
  126 |               double sampleRate,
  127 |               double cutoffFrequency,
  128 |               double gainDb);
  129 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:123:8: note: use "__attribute__((aligned(1)))" to align struct 'HighShelfBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:131:8: warning: accessing fields in struct 'BandShelfBase' is inefficient due to padding; only needs 1 bytes but is using 96 bytes [altera-struct-pack-align]
  131 | struct BandShelfBase : PoleFilterBase <AnalogLowShelf>
      |        ^
  132 | {
  133 |   void setup (int order,
  134 |               double sampleRate,
  135 |               double centerFrequency,
  136 |               double widthFrequency,
  137 |               double gainDb);
  138 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:131:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandShelfBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:131:8: warning: accessing fields in struct 'BandShelfBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  131 | struct BandShelfBase : PoleFilterBase <AnalogLowShelf>
      |        ^
  132 | {
  133 |   void setup (int order,
  134 |               double sampleRate,
  135 |               double centerFrequency,
  136 |               double widthFrequency,
  137 |               double gainDb);
  138 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:131:8: note: use "__attribute__((aligned(1)))" to align struct 'BandShelfBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:191:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:191:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  191 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:196:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  196 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:196:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  196 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:201:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  201 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:201:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  201 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:201:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  201 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:203:12: warning: 'defaultCutoffFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  203 |     return ParamInfo::defaultCutoffFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:213:20: note: resolves to this declaration
  213 |   static ParamInfo defaultCutoffFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:210:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  210 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:212:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  212 |     FilterClass::setup (int(params[1]), params[0], params[2]);
      |                         ^~~
      |                         static_cast<int>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:212:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  212 |     FilterClass::setup (int(params[1]), params[0], params[2]);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:212:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  212 |     FilterClass::setup (int(params[1]), params[0], params[2]);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:212:58: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  212 |     FilterClass::setup (int(params[1]), params[0], params[2]);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:218:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:218:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  218 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:223:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  223 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:223:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  223 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:228:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  228 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:228:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  228 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:228:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  228 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:230:12: warning: 'defaultCenterFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  230 |     return ParamInfo::defaultCenterFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:214:20: note: resolves to this declaration
  214 |   static ParamInfo defaultCenterFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:233:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  233 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:233:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  233 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:233:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  233 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:235:12: warning: 'defaultBandwidthHzParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  235 |     return ParamInfo::defaultBandwidthHzParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:217:20: note: resolves to this declaration
  217 |   static ParamInfo defaultBandwidthHzParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:242:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  242 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:244:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  244 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                         ^~~
      |                         static_cast<int>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:244:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  244 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:244:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  244 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:244:58: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  244 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:244:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  244 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:250:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:250:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  250 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:255:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  255 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:255:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  255 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:260:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  260 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:260:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  260 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:260:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  260 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:262:12: warning: 'defaultCutoffFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  262 |     return ParamInfo::defaultCutoffFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:213:20: note: resolves to this declaration
  213 |   static ParamInfo defaultCutoffFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:265:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  265 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:265:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  265 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:265:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  265 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:267:12: warning: 'defaultGainParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  267 |     return ParamInfo::defaultGainParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:218:20: note: resolves to this declaration
  218 |   static ParamInfo defaultGainParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:274:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  274 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:276:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  276 |     FilterClass::setup (int(params[1]),
      |                         ^~~
      |                         static_cast<int>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:276:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  276 |     FilterClass::setup (int(params[1]),
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:277:31: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  277 |                         params[0],
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:278:31: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  278 |                         params[2],
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:279:31: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  279 |                         params[3]);
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:285:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:285:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  285 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:290:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  290 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:290:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  290 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:292:12: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  292 |     return 5;
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:295:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  295 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:295:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  295 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:295:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  295 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:297:12: warning: 'defaultCenterFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  297 |     return ParamInfo::defaultCenterFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:214:20: note: resolves to this declaration
  214 |   static ParamInfo defaultCenterFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:300:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  300 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:300:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  300 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:300:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  300 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:302:12: warning: 'defaultBandwidthHzParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  302 |     return ParamInfo::defaultBandwidthHzParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:217:20: note: resolves to this declaration
  217 |   static ParamInfo defaultBandwidthHzParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:305:3: warning: 'getParamInfo_4' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  305 |   static const ParamInfo getParamInfo_4 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:305:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  305 |   static const ParamInfo getParamInfo_4 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:305:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  305 |   static const ParamInfo getParamInfo_4 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:307:12: warning: 'defaultGainParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  307 |     return ParamInfo::defaultGainParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:218:20: note: resolves to this declaration
  218 |   static ParamInfo defaultGainParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:314:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  314 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:316:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  316 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                         ^~~
      |                         static_cast<int>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:316:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  316 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:316:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  316 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:316:58: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  316 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:316:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  316 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:316:80: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  316 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:324:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  324 |   static Kind getKind () { return kindLowPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:324:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  324 |   static Kind getKind () { return kindLowPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:325:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  325 |   static const char* getName() { return "Butterworth Low Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:325:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  325 |   static const char* getName() { return "Butterworth Low Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:330:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  330 |   static Kind getKind () { return kindHighPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:330:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  330 |   static Kind getKind () { return kindHighPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:331:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  331 |   static const char* getName() { return "Butterworth High Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:331:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  331 |   static const char* getName() { return "Butterworth High Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:336:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  336 |   static Kind getKind () { return kindHighPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:336:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  336 |   static Kind getKind () { return kindHighPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:337:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  337 |   static const char* getName() { return "Butterworth Band Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:337:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  337 |   static const char* getName() { return "Butterworth Band Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:342:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  342 |   static Kind getKind () { return kindHighPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:342:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  342 |   static Kind getKind () { return kindHighPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:343:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  343 |   static const char* getName() { return "Butterworth Band Stop"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:343:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  343 |   static const char* getName() { return "Butterworth Band Stop"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:348:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  348 |   static Kind getKind () { return kindLowShelf; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:348:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  348 |   static Kind getKind () { return kindLowShelf; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:349:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  349 |   static const char* getName() { return "Butterworth Low Shelf"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:349:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  349 |   static const char* getName() { return "Butterworth Low Shelf"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:354:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  354 |   static Kind getKind () { return kindHighShelf; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:354:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  354 |   static Kind getKind () { return kindHighShelf; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:355:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  355 |   static const char* getName() { return "Butterworth High Shelf"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:355:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  355 |   static const char* getName() { return "Butterworth High Shelf"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:360:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  360 |   static Kind getKind () { return kindBandShelf; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:360:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  360 |   static Kind getKind () { return kindBandShelf; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:361:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  361 |   static const char* getName() { return "Butterworth Band Shelf"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:361:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  361 |   static const char* getName() { return "Butterworth Band Shelf"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:370:3: warning: 'getParamInfo_1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  370 |   const ParamInfo getParamInfo_1 () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:370:3: warning: function 'getParamInfo_1' should be marked [[nodiscard]] [modernize-use-nodiscard]
  370 |   const ParamInfo getParamInfo_1 () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:370:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  370 |   const ParamInfo getParamInfo_1 () const
      |   ^~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:370:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  370 |   const ParamInfo getParamInfo_1 () const
      |   ~~~~~~~~~~~~~~~ ^                      
      |   auto                                    -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:374:25: warning: 'Int_toControlValue' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  374 |                        &ParamInfo::Int_toControlValue,
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:191:10: note: resolves to this declaration
  191 |   double Int_toControlValue (double nativeValue) const;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:375:25: warning: 'Int_toNativeValue' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  375 |                        &ParamInfo::Int_toNativeValue,
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:192:10: note: resolves to this declaration
  192 |   double Int_toNativeValue (double controlValue) const;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:376:25: warning: 'Int_toString' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  376 |                        &ParamInfo::Int_toString);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:203:15: note: resolves to this declaration
  203 |   std::string Int_toString (double nativeValue) const;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:429:1: warning: namespace 'Design' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  429 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:187:11: note: namespace 'Design' starts here
  187 | namespace Design {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:431:1: warning: namespace 'Butterworth' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  431 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:52:11: note: namespace 'Butterworth' starts here
   52 | namespace Butterworth {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:433:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  433 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Butterworth.h:45:11: note: namespace 'Dsp' starts here
   45 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_CASCADE_H
      |         ^~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_CASCADE_H
   37 | #define DSPFILTERS_CASCADE_H
      |         ~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_CASCADE_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:39:1: warning: #includes are not sorted properly [llvm-include-order]
   39 | #include "DspFilters/Common.h"
      | ^        ~~~~~~~~~~~~~~~~~~~~~
   40 | #include "DspFilters/Biquad.h"
      |          ~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:61:5: warning: 'process' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   61 |     inline Sample process (const Sample in, const Cascade& c)
      |     ^
      |     LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:61:5: warning: function 'process' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   61 |     inline Sample process (const Sample in, const Cascade& c)
      |     ^~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:61:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     inline Sample process (const Sample in, const Cascade& c)
      |            ~~~~~~ ^                                          
      |            auto                                               -> Sample
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:61:41: warning: parameter name 'in' is too short, expected at least 3 characters [readability-identifier-length]
   61 |     inline Sample process (const Sample in, const Cascade& c)
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:61:60: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   61 |     inline Sample process (const Sample in, const Cascade& c)
      |                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:67:11: warning: variable name 'i' is too short, expected at least 3 characters [readability-identifier-length]
   67 |       int i = c.m_numStages - 1;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:68:47: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   68 |         out = (state++)->process1 (out, *stage++, vsa);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:69:7: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   69 |       for (; --i >= 0;)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:69:14: warning: backward branch (for loop) is ID-dependent due to variable reference to 'i' and may cause performance degradation [altera-id-dependent-backward-branch]
   69 |       for (; --i >= 0;)
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:67:7: note: inferred assignment of ID-dependent value from ID-dependent 
   67 |       int i = c.m_numStages - 1;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:69:24: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   69 |       for (; --i >= 0;)
      |                        ^
      |                         {
   70 |         out = (state++)->process1 (out, *stage++, 0);
      |                                                      
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:70:47: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   70 |         out = (state++)->process1 (out, *stage++, 0);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:77:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
   77 |     StateBase (StateType* stateArray)
      |     ^
      |     explicit 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:77:5: warning: 'StateBase<StateType>' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   77 |     StateBase (StateType* stateArray)
      |     ^
      |     LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:82:3: warning: redundant access specifier has the same accessibility as the previous access specifier [readability-redundant-access-specifiers]
   82 |   protected:
      |   ^~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:76:3: note: previously declared here
   76 |   protected:
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:83:16: warning: member variable 'm_stateArray' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   83 |     StateType* m_stateArray;
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:86:10: warning: accessing fields in struct 'Stage' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
   86 |   struct Stage : Biquad
      |          ^
   87 |   {
   88 |   };
      |    
      |     __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:86:10: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'Stage'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:86:10: warning: accessing fields in struct 'Stage' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
   86 |   struct Stage : Biquad
      |          ^
   87 |   {
   88 |   };
      |    
      |     __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:86:10: note: use "__attribute__((aligned(1)))" to align struct 'Stage' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:90:10: warning: accessing fields in struct 'Storage' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 16 bytes [altera-struct-pack-align]
   90 |   struct Storage
      |          ^
   91 |   {
   92 |     Storage (int maxStages_, Stage* stageArray_)
   93 |       : maxStages (maxStages_)
   94 |       , stageArray (stageArray_)
   95 |     {
   96 |     }
   97 | 
   98 |     int maxStages;
   99 |     Stage* stageArray;
  100 |   };
      |    
      |     __attribute__((aligned(16)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:90:10: note: use "__attribute__((aligned(16)))" to align struct 'Storage' to 16 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:92:5: warning: 'Storage' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   92 |     Storage (int maxStages_, Stage* stageArray_)
      |     ^
      |     LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:98:9: warning: member variable 'maxStages' has public visibility [misc-non-private-member-variables-in-classes]
   98 |     int maxStages;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:99:12: warning: member variable 'stageArray' has public visibility [misc-non-private-member-variables-in-classes]
   99 |     Stage* stageArray;
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:102:3: warning: 'getNumStages' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  102 |   int getNumStages () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:102:3: warning: function 'getNumStages' should be marked [[nodiscard]] [modernize-use-nodiscard]
  102 |   int getNumStages () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:102:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  102 |   int getNumStages () const
      |   ~~~ ^                    
      |   auto                      -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:107:3: warning: overloading 'operator[]' is disallowed [fuchsia-overloaded-operator]
  107 |   const Stage& operator[] (int index)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:107:3: warning: 'operator[]' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  107 |   const Stage& operator[] (int index)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:107:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  107 |   const Stage& operator[] (int index)
      |   ~~~~~~~~~~~~ ^                     
      |   auto                                -> const Stage&
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:110:12: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  110 |     return m_stageArray[index];
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:113:1: warning: redundant access specifier has the same accessibility as the previous access specifier [readability-redundant-access-specifiers]
  113 | public:
      | ^~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:55:1: note: previously declared here
   55 | public:
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:115:3: warning: function 'response' should be marked [[nodiscard]] [modernize-use-nodiscard]
  115 |   complex_t response (double normalizedFrequency) const;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:115:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  115 |   complex_t response (double normalizedFrequency) const;
      |   ~~~~~~~~~ ^                                          
      |   auto                                                  -> complex_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:117:3: warning: function 'getPoleZeros' should be marked [[nodiscard]] [modernize-use-nodiscard]
  117 |   std::vector<PoleZeroPair> getPoleZeros () const;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:117:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  117 |   std::vector<PoleZeroPair> getPoleZeros () const;
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~ ^                    
      |   auto                                            -> std::vector<PoleZeroPair>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:121:3: warning: 'process' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  121 |   void process (int numSamples, Sample* dest, StateType& state) const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:123:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  123 |     while (--numSamples >= 0) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:154:5: warning: 'State<StateType>' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  154 |     State() : Cascade::StateBase <StateType> (m_states)
      |     ^
      |     LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:160:5: warning: 'reset' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  160 |     void reset ()
      |     ^
      |     LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:163:7: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  163 |       for (int i = MaxStages; --i >= 0; ++state)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:163:49: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  163 |       for (int i = MaxStages; --i >= 0; ++state)
      |                                                 ^
      |                                                  {
  164 |         state->reset();
      |                        
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:168:5: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  168 |     StateType m_states[MaxStages];
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:172:3: warning: 'getCascadeStorage' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  172 |   Cascade::Storage getCascadeStorage()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:172:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  172 |   Cascade::Storage getCascadeStorage()
      |   ~~~~~~~~~~~~~~~~ ^                  
      |   auto                                 -> Cascade::Storage
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:178:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  178 |   Cascade::Stage m_stages[MaxStages];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:181:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  181 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Cascade.h:45:11: note: namespace 'Dsp' starts here
   45 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_CHEBYSHEVI_H
      |         ^~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_CHEBYSHEVI_H
   37 | #define DSPFILTERS_CHEBYSHEVI_H
      |         ~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_CHEBYSHEVI_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:39:1: warning: #includes are not sorted properly [llvm-include-order]
   39 | #include "DspFilters/Common.h"
      | ^        ~~~~~~~~~~~~~~~~~~~~~
   40 | #include "DspFilters/Cascade.h"
      |          ~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:45:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
   45 | namespace Dsp {
      | ^~~~~~~~~~~~~~~
   46 | 
   47 | /*
   48 |  * Filters with Chebyshev response characteristics
   49 |  *
   50 |  */
   51 | 
   52 | namespace ChebyshevI {
      | ~~~~~~~~~~~~~~~~~~~~
      | namespace Dsp::ChebyshevI
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:61:16: warning: parameter 'numPoles' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
   61 |   void design (const int numPoles,
      |                ^~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:90:8: warning: accessing fields in struct 'LowPassBase' is inefficient due to padding; only needs 1 bytes but is using 96 bytes [altera-struct-pack-align]
   90 | struct LowPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
   91 | {
   92 |   void setup (int order,
   93 |               double sampleRate,
   94 |               double cutoffFrequency,
   95 |               double rippleDb);
   96 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:90:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'LowPassBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:90:8: warning: accessing fields in struct 'LowPassBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
   90 | struct LowPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
   91 | {
   92 |   void setup (int order,
   93 |               double sampleRate,
   94 |               double cutoffFrequency,
   95 |               double rippleDb);
   96 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:90:8: note: use "__attribute__((aligned(1)))" to align struct 'LowPassBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:98:8: warning: accessing fields in struct 'HighPassBase' is inefficient due to padding; only needs 1 bytes but is using 96 bytes [altera-struct-pack-align]
   98 | struct HighPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
   99 | {
  100 |   void setup (int order,
  101 |               double sampleRate,
  102 |               double cutoffFrequency,
  103 |               double rippleDb);
  104 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:98:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'HighPassBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:98:8: warning: accessing fields in struct 'HighPassBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
   98 | struct HighPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
   99 | {
  100 |   void setup (int order,
  101 |               double sampleRate,
  102 |               double cutoffFrequency,
  103 |               double rippleDb);
  104 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:98:8: note: use "__attribute__((aligned(1)))" to align struct 'HighPassBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:106:8: warning: accessing fields in struct 'BandPassBase' is inefficient due to padding; only needs 1 bytes but is using 96 bytes [altera-struct-pack-align]
  106 | struct BandPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  107 | {
  108 |   void setup (int order,
  109 |               double sampleRate,
  110 |               double centerFrequency,
  111 |               double widthFrequency,
  112 |               double rippleDb);
  113 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:106:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandPassBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:106:8: warning: accessing fields in struct 'BandPassBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  106 | struct BandPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  107 | {
  108 |   void setup (int order,
  109 |               double sampleRate,
  110 |               double centerFrequency,
  111 |               double widthFrequency,
  112 |               double rippleDb);
  113 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:106:8: note: use "__attribute__((aligned(1)))" to align struct 'BandPassBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:115:8: warning: accessing fields in struct 'BandStopBase' is inefficient due to padding; only needs 1 bytes but is using 96 bytes [altera-struct-pack-align]
  115 | struct BandStopBase : PoleFilterBase <AnalogLowPass>
      |        ^
  116 | {
  117 |   void setup (int order,
  118 |               double sampleRate,
  119 |               double centerFrequency,
  120 |               double widthFrequency,
  121 |               double rippleDb);
  122 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:115:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandStopBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:115:8: warning: accessing fields in struct 'BandStopBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  115 | struct BandStopBase : PoleFilterBase <AnalogLowPass>
      |        ^
  116 | {
  117 |   void setup (int order,
  118 |               double sampleRate,
  119 |               double centerFrequency,
  120 |               double widthFrequency,
  121 |               double rippleDb);
  122 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:115:8: note: use "__attribute__((aligned(1)))" to align struct 'BandStopBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:124:8: warning: accessing fields in struct 'LowShelfBase' is inefficient due to padding; only needs 1 bytes but is using 104 bytes [altera-struct-pack-align]
  124 | struct LowShelfBase : PoleFilterBase <AnalogLowShelf>
      |        ^
  125 | {
  126 |   void setup (int order,
  127 |               double sampleRate,
  128 |               double cutoffFrequency,
  129 |               double gainDb,
  130 |               double rippleDb);
  131 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:124:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'LowShelfBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:124:8: warning: accessing fields in struct 'LowShelfBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  124 | struct LowShelfBase : PoleFilterBase <AnalogLowShelf>
      |        ^
  125 | {
  126 |   void setup (int order,
  127 |               double sampleRate,
  128 |               double cutoffFrequency,
  129 |               double gainDb,
  130 |               double rippleDb);
  131 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:124:8: note: use "__attribute__((aligned(1)))" to align struct 'LowShelfBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:133:8: warning: accessing fields in struct 'HighShelfBase' is inefficient due to padding; only needs 1 bytes but is using 104 bytes [altera-struct-pack-align]
  133 | struct HighShelfBase : PoleFilterBase <AnalogLowShelf>
      |        ^
  134 | {
  135 |   void setup (int order,
  136 |               double sampleRate,
  137 |               double cutoffFrequency,
  138 |               double gainDb,
  139 |               double rippleDb);
  140 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:133:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'HighShelfBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:133:8: warning: accessing fields in struct 'HighShelfBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  133 | struct HighShelfBase : PoleFilterBase <AnalogLowShelf>
      |        ^
  134 | {
  135 |   void setup (int order,
  136 |               double sampleRate,
  137 |               double cutoffFrequency,
  138 |               double gainDb,
  139 |               double rippleDb);
  140 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:133:8: note: use "__attribute__((aligned(1)))" to align struct 'HighShelfBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:142:8: warning: accessing fields in struct 'BandShelfBase' is inefficient due to padding; only needs 1 bytes but is using 104 bytes [altera-struct-pack-align]
  142 | struct BandShelfBase : PoleFilterBase <AnalogLowShelf>
      |        ^
  143 | {
  144 |   void setup (int order,
  145 |               double sampleRate,
  146 |               double centerFrequency,
  147 |               double widthFrequency,
  148 |               double gainDb,
  149 |               double rippleDb);
  150 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:142:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandShelfBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:142:8: warning: accessing fields in struct 'BandShelfBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  142 | struct BandShelfBase : PoleFilterBase <AnalogLowShelf>
      |        ^
  143 | {
  144 |   void setup (int order,
  145 |               double sampleRate,
  146 |               double centerFrequency,
  147 |               double widthFrequency,
  148 |               double gainDb,
  149 |               double rippleDb);
  150 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:142:8: note: use "__attribute__((aligned(1)))" to align struct 'BandShelfBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:203:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:203:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  203 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:208:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  208 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:208:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  208 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:213:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  213 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:213:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  213 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:213:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  213 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:215:12: warning: 'defaultCutoffFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  215 |     return ParamInfo::defaultCutoffFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:213:20: note: resolves to this declaration
  213 |   static ParamInfo defaultCutoffFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:218:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  218 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:218:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  218 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:218:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  218 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:220:12: warning: 'defaultRippleDbParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  220 |     return ParamInfo::defaultRippleDbParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:220:20: note: resolves to this declaration
  220 |   static ParamInfo defaultRippleDbParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:227:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  227 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:229:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  229 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                         ^~~
      |                         static_cast<int>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:229:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  229 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:229:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  229 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:229:58: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  229 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:229:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  229 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:235:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:235:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  235 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:240:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  240 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:240:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  240 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:242:12: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  242 |     return 5;
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:245:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  245 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:245:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  245 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:245:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  245 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:247:12: warning: 'defaultCenterFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  247 |     return ParamInfo::defaultCenterFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:214:20: note: resolves to this declaration
  214 |   static ParamInfo defaultCenterFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:250:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  250 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:250:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  250 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:250:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  250 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:252:12: warning: 'defaultBandwidthHzParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  252 |     return ParamInfo::defaultBandwidthHzParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:217:20: note: resolves to this declaration
  217 |   static ParamInfo defaultBandwidthHzParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:255:3: warning: 'getParamInfo_4' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  255 |   static const ParamInfo getParamInfo_4 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:255:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  255 |   static const ParamInfo getParamInfo_4 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:255:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  255 |   static const ParamInfo getParamInfo_4 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:257:12: warning: 'defaultRippleDbParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  257 |     return ParamInfo::defaultRippleDbParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:220:20: note: resolves to this declaration
  220 |   static ParamInfo defaultRippleDbParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:264:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  264 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:266:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  266 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                         ^~~
      |                         static_cast<int>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:266:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  266 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:266:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  266 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:266:58: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  266 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:266:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  266 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:266:80: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  266 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:272:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:272:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  272 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:277:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  277 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:277:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  277 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:279:12: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  279 |     return 5;
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:282:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  282 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:282:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  282 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:282:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  282 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:284:12: warning: 'defaultCutoffFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  284 |     return ParamInfo::defaultCutoffFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:213:20: note: resolves to this declaration
  213 |   static ParamInfo defaultCutoffFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:287:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  287 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:287:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  287 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:287:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  287 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:289:12: warning: 'defaultGainParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  289 |     return ParamInfo::defaultGainParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:218:20: note: resolves to this declaration
  218 |   static ParamInfo defaultGainParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:292:3: warning: 'getParamInfo_4' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  292 |   static const ParamInfo getParamInfo_4 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:292:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  292 |   static const ParamInfo getParamInfo_4 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:292:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  292 |   static const ParamInfo getParamInfo_4 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:294:12: warning: 'defaultRippleDbParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  294 |     return ParamInfo::defaultRippleDbParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:220:20: note: resolves to this declaration
  220 |   static ParamInfo defaultRippleDbParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:301:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  301 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:303:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  303 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                         ^~~
      |                         static_cast<int>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:303:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  303 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:303:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  303 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:303:58: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  303 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:303:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  303 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:303:80: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  303 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:309:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:309:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  309 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:314:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  314 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:314:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  314 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:316:12: warning: 6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  316 |     return 6;
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:319:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  319 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:319:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  319 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:319:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  319 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:321:12: warning: 'defaultCenterFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  321 |     return ParamInfo::defaultCenterFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:214:20: note: resolves to this declaration
  214 |   static ParamInfo defaultCenterFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:324:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  324 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:324:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  324 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:324:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  324 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:326:12: warning: 'defaultBandwidthHzParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  326 |     return ParamInfo::defaultBandwidthHzParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:217:20: note: resolves to this declaration
  217 |   static ParamInfo defaultBandwidthHzParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:329:3: warning: 'getParamInfo_4' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  329 |   static const ParamInfo getParamInfo_4 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:329:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  329 |   static const ParamInfo getParamInfo_4 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:329:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  329 |   static const ParamInfo getParamInfo_4 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:331:12: warning: 'defaultGainParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  331 |     return ParamInfo::defaultGainParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:218:20: note: resolves to this declaration
  218 |   static ParamInfo defaultGainParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:334:3: warning: 'getParamInfo_5' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  334 |   static const ParamInfo getParamInfo_5 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:334:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  334 |   static const ParamInfo getParamInfo_5 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:334:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  334 |   static const ParamInfo getParamInfo_5 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:336:12: warning: 'defaultRippleDbParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  336 |     return ParamInfo::defaultRippleDbParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:220:20: note: resolves to this declaration
  220 |   static ParamInfo defaultRippleDbParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:343:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  343 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:345:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  345 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                         ^~~
      |                         static_cast<int>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:345:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  345 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:345:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  345 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:345:58: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  345 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:345:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  345 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:345:80: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  345 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:345:91: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  345 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                                                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:345:92: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  345 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:353:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  353 |   static Kind getKind () { return kindLowPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:353:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  353 |   static Kind getKind () { return kindLowPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:354:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  354 |   static const char* getName() { return "Chebyshev I Low Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:354:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  354 |   static const char* getName() { return "Chebyshev I Low Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:359:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  359 |   static Kind getKind () { return kindHighPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:359:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  359 |   static Kind getKind () { return kindHighPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:360:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  360 |   static const char* getName() { return "Chebyshev I High Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:360:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  360 |   static const char* getName() { return "Chebyshev I High Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:365:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  365 |   static Kind getKind () { return kindHighPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:365:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  365 |   static Kind getKind () { return kindHighPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:366:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  366 |   static const char* getName() { return "Chebyshev I Band Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:366:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  366 |   static const char* getName() { return "Chebyshev I Band Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:371:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  371 |   static Kind getKind () { return kindHighPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:371:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  371 |   static Kind getKind () { return kindHighPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:372:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  372 |   static const char* getName() { return "Chebyshev I Band Stop"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:372:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  372 |   static const char* getName() { return "Chebyshev I Band Stop"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:377:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  377 |   static Kind getKind () { return kindLowShelf; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:377:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  377 |   static Kind getKind () { return kindLowShelf; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:378:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  378 |   static const char* getName() { return "Chebyshev I Low Shelf"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:378:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  378 |   static const char* getName() { return "Chebyshev I Low Shelf"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:383:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  383 |   static Kind getKind () { return kindHighShelf; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:383:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  383 |   static Kind getKind () { return kindHighShelf; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:384:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  384 |   static const char* getName() { return "Chebyshev I High Shelf"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:384:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  384 |   static const char* getName() { return "Chebyshev I High Shelf"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:389:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  389 |   static Kind getKind () { return kindBandShelf; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:389:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  389 |   static Kind getKind () { return kindBandShelf; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:390:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  390 |   static const char* getName() { return "Chebyshev I Band Shelf"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:390:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  390 |   static const char* getName() { return "Chebyshev I Band Shelf"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:399:3: warning: 'getParamInfo_1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  399 |   const ParamInfo getParamInfo_1 () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:399:3: warning: function 'getParamInfo_1' should be marked [[nodiscard]] [modernize-use-nodiscard]
  399 |   const ParamInfo getParamInfo_1 () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:399:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  399 |   const ParamInfo getParamInfo_1 () const
      |   ^~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:399:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  399 |   const ParamInfo getParamInfo_1 () const
      |   ~~~~~~~~~~~~~~~ ^                      
      |   auto                                    -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:403:25: warning: 'Int_toControlValue' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  403 |                        &ParamInfo::Int_toControlValue,
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:191:10: note: resolves to this declaration
  191 |   double Int_toControlValue (double nativeValue) const;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:404:25: warning: 'Int_toNativeValue' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  404 |                        &ParamInfo::Int_toNativeValue,
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:192:10: note: resolves to this declaration
  192 |   double Int_toNativeValue (double controlValue) const;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:405:25: warning: 'Int_toString' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  405 |                        &ParamInfo::Int_toString);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:203:15: note: resolves to this declaration
  203 |   std::string Int_toString (double nativeValue) const;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:458:1: warning: namespace 'Design' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  458 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:199:11: note: namespace 'Design' starts here
  199 | namespace Design {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:460:1: warning: namespace 'ChebyshevI' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  460 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:52:11: note: namespace 'ChebyshevI' starts here
   52 | namespace ChebyshevI {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:462:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  462 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevI.h:45:11: note: namespace 'Dsp' starts here
   45 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_CHEBYSHEVII_H
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_CHEBYSHEVII_H
   37 | #define DSPFILTERS_CHEBYSHEVII_H
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_CHEBYSHEVII_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:39:1: warning: #includes are not sorted properly [llvm-include-order]
   39 | #include "DspFilters/Common.h"
      | ^        ~~~~~~~~~~~~~~~~~~~~~
   40 | #include "DspFilters/Cascade.h"
      |          ~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:45:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
   45 | namespace Dsp {
      | ^~~~~~~~~~~~~~~
   46 | 
   47 | /*
   48 |  * Filters with Inverse Chebyshev response characteristics
   49 |  *
   50 |  */
   51 | 
   52 | namespace ChebyshevII {
      | ~~~~~~~~~~~~~~~~~~~~~
      | namespace Dsp::ChebyshevII
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:61:16: warning: parameter 'numPoles' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
   61 |   void design (const int numPoles,
      |                ^~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:90:8: warning: accessing fields in struct 'LowPassBase' is inefficient due to padding; only needs 1 bytes but is using 96 bytes [altera-struct-pack-align]
   90 | struct LowPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
   91 | {
   92 |   void setup (int order,
   93 |               double sampleRate,
   94 |               double cutoffFrequency,
   95 |               double stopBandDb);
   96 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:90:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'LowPassBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:90:8: warning: accessing fields in struct 'LowPassBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
   90 | struct LowPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
   91 | {
   92 |   void setup (int order,
   93 |               double sampleRate,
   94 |               double cutoffFrequency,
   95 |               double stopBandDb);
   96 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:90:8: note: use "__attribute__((aligned(1)))" to align struct 'LowPassBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:98:8: warning: accessing fields in struct 'HighPassBase' is inefficient due to padding; only needs 1 bytes but is using 96 bytes [altera-struct-pack-align]
   98 | struct HighPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
   99 | {
  100 |   void setup (int order,
  101 |               double sampleRate,
  102 |               double cutoffFrequency,
  103 |               double stopBandDb);
  104 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:98:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'HighPassBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:98:8: warning: accessing fields in struct 'HighPassBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
   98 | struct HighPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
   99 | {
  100 |   void setup (int order,
  101 |               double sampleRate,
  102 |               double cutoffFrequency,
  103 |               double stopBandDb);
  104 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:98:8: note: use "__attribute__((aligned(1)))" to align struct 'HighPassBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:106:8: warning: accessing fields in struct 'BandPassBase' is inefficient due to padding; only needs 1 bytes but is using 96 bytes [altera-struct-pack-align]
  106 | struct BandPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  107 | {
  108 |   void setup (int order,
  109 |               double sampleRate,
  110 |               double centerFrequency,
  111 |               double widthFrequency,
  112 |               double stopBandDb);
  113 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:106:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandPassBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:106:8: warning: accessing fields in struct 'BandPassBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  106 | struct BandPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  107 | {
  108 |   void setup (int order,
  109 |               double sampleRate,
  110 |               double centerFrequency,
  111 |               double widthFrequency,
  112 |               double stopBandDb);
  113 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:106:8: note: use "__attribute__((aligned(1)))" to align struct 'BandPassBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:115:8: warning: accessing fields in struct 'BandStopBase' is inefficient due to padding; only needs 1 bytes but is using 96 bytes [altera-struct-pack-align]
  115 | struct BandStopBase : PoleFilterBase <AnalogLowPass>
      |        ^
  116 | {
  117 |   void setup (int order,
  118 |               double sampleRate,
  119 |               double centerFrequency,
  120 |               double widthFrequency,
  121 |               double stopBandDb);
  122 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:115:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandStopBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:115:8: warning: accessing fields in struct 'BandStopBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  115 | struct BandStopBase : PoleFilterBase <AnalogLowPass>
      |        ^
  116 | {
  117 |   void setup (int order,
  118 |               double sampleRate,
  119 |               double centerFrequency,
  120 |               double widthFrequency,
  121 |               double stopBandDb);
  122 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:115:8: note: use "__attribute__((aligned(1)))" to align struct 'BandStopBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:124:8: warning: accessing fields in struct 'LowShelfBase' is inefficient due to padding; only needs 1 bytes but is using 104 bytes [altera-struct-pack-align]
  124 | struct LowShelfBase : PoleFilterBase <AnalogLowShelf>
      |        ^
  125 | {
  126 |   void setup (int order,
  127 |               double sampleRate,
  128 |               double cutoffFrequency,
  129 |               double gainDb,
  130 |               double stopBandDb);
  131 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:124:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'LowShelfBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:124:8: warning: accessing fields in struct 'LowShelfBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  124 | struct LowShelfBase : PoleFilterBase <AnalogLowShelf>
      |        ^
  125 | {
  126 |   void setup (int order,
  127 |               double sampleRate,
  128 |               double cutoffFrequency,
  129 |               double gainDb,
  130 |               double stopBandDb);
  131 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:124:8: note: use "__attribute__((aligned(1)))" to align struct 'LowShelfBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:133:8: warning: accessing fields in struct 'HighShelfBase' is inefficient due to padding; only needs 1 bytes but is using 104 bytes [altera-struct-pack-align]
  133 | struct HighShelfBase : PoleFilterBase <AnalogLowShelf>
      |        ^
  134 | {
  135 |   void setup (int order,
  136 |               double sampleRate,
  137 |               double cutoffFrequency,
  138 |               double gainDb,
  139 |               double stopBandDb);
  140 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:133:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'HighShelfBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:133:8: warning: accessing fields in struct 'HighShelfBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  133 | struct HighShelfBase : PoleFilterBase <AnalogLowShelf>
      |        ^
  134 | {
  135 |   void setup (int order,
  136 |               double sampleRate,
  137 |               double cutoffFrequency,
  138 |               double gainDb,
  139 |               double stopBandDb);
  140 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:133:8: note: use "__attribute__((aligned(1)))" to align struct 'HighShelfBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:142:8: warning: accessing fields in struct 'BandShelfBase' is inefficient due to padding; only needs 1 bytes but is using 104 bytes [altera-struct-pack-align]
  142 | struct BandShelfBase : PoleFilterBase <AnalogLowShelf>
      |        ^
  143 | {
  144 |   void setup (int order,
  145 |               double sampleRate,
  146 |               double centerFrequency,
  147 |               double widthFrequency,
  148 |               double gainDb,
  149 |               double stopBandDb);
  150 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:142:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandShelfBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:142:8: warning: accessing fields in struct 'BandShelfBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  142 | struct BandShelfBase : PoleFilterBase <AnalogLowShelf>
      |        ^
  143 | {
  144 |   void setup (int order,
  145 |               double sampleRate,
  146 |               double centerFrequency,
  147 |               double widthFrequency,
  148 |               double gainDb,
  149 |               double stopBandDb);
  150 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:142:8: note: use "__attribute__((aligned(1)))" to align struct 'BandShelfBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:203:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:203:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  203 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:208:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  208 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:208:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  208 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:213:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  213 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:213:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  213 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:213:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  213 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:215:12: warning: 'defaultCutoffFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  215 |     return ParamInfo::defaultCutoffFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:213:20: note: resolves to this declaration
  213 |   static ParamInfo defaultCutoffFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:218:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  218 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:218:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  218 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:218:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  218 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:220:12: warning: 'defaultStopDbParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  220 |     return ParamInfo::defaultStopDbParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:221:20: note: resolves to this declaration
  221 |   static ParamInfo defaultStopDbParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:227:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  227 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:229:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  229 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                         ^~~
      |                         static_cast<int>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:229:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  229 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:229:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  229 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:229:58: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  229 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:229:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  229 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:235:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:235:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  235 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:240:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  240 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:240:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  240 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:242:12: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  242 |     return 5;
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:245:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  245 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:245:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  245 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:245:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  245 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:247:12: warning: 'defaultCenterFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  247 |     return ParamInfo::defaultCenterFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:214:20: note: resolves to this declaration
  214 |   static ParamInfo defaultCenterFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:250:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  250 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:250:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  250 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:250:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  250 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:252:12: warning: 'defaultBandwidthHzParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  252 |     return ParamInfo::defaultBandwidthHzParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:217:20: note: resolves to this declaration
  217 |   static ParamInfo defaultBandwidthHzParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:255:3: warning: 'getParamInfo_4' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  255 |   static const ParamInfo getParamInfo_4 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:255:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  255 |   static const ParamInfo getParamInfo_4 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:255:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  255 |   static const ParamInfo getParamInfo_4 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:257:12: warning: 'defaultStopDbParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  257 |     return ParamInfo::defaultStopDbParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:221:20: note: resolves to this declaration
  221 |   static ParamInfo defaultStopDbParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:264:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  264 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:266:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  266 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                         ^~~
      |                         static_cast<int>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:266:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  266 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:266:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  266 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:266:58: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  266 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:266:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  266 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:266:80: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  266 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:272:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:272:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  272 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:277:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  277 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:277:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  277 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:279:12: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  279 |     return 5;
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:282:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  282 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:282:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  282 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:282:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  282 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:284:12: warning: 'defaultCutoffFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  284 |     return ParamInfo::defaultCutoffFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:213:20: note: resolves to this declaration
  213 |   static ParamInfo defaultCutoffFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:287:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  287 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:287:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  287 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:287:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  287 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:289:12: warning: 'defaultGainParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  289 |     return ParamInfo::defaultGainParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:218:20: note: resolves to this declaration
  218 |   static ParamInfo defaultGainParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:292:3: warning: 'getParamInfo_4' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  292 |   static const ParamInfo getParamInfo_4 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:292:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  292 |   static const ParamInfo getParamInfo_4 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:292:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  292 |   static const ParamInfo getParamInfo_4 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:294:12: warning: 'defaultStopDbParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  294 |     return ParamInfo::defaultStopDbParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:221:20: note: resolves to this declaration
  221 |   static ParamInfo defaultStopDbParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:301:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  301 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:303:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  303 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                         ^~~
      |                         static_cast<int>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:303:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  303 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:303:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  303 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:303:58: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  303 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:303:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  303 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:303:80: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  303 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:309:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:309:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  309 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:314:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  314 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:314:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  314 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:316:12: warning: 6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  316 |     return 6;
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:319:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  319 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:319:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  319 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:319:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  319 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:321:12: warning: 'defaultCenterFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  321 |     return ParamInfo::defaultCenterFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:214:20: note: resolves to this declaration
  214 |   static ParamInfo defaultCenterFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:324:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  324 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:324:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  324 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:324:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  324 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:326:12: warning: 'defaultBandwidthHzParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  326 |     return ParamInfo::defaultBandwidthHzParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:217:20: note: resolves to this declaration
  217 |   static ParamInfo defaultBandwidthHzParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:329:3: warning: 'getParamInfo_4' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  329 |   static const ParamInfo getParamInfo_4 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:329:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  329 |   static const ParamInfo getParamInfo_4 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:329:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  329 |   static const ParamInfo getParamInfo_4 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:331:12: warning: 'defaultGainParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  331 |     return ParamInfo::defaultGainParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:218:20: note: resolves to this declaration
  218 |   static ParamInfo defaultGainParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:334:3: warning: 'getParamInfo_5' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  334 |   static const ParamInfo getParamInfo_5 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:334:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  334 |   static const ParamInfo getParamInfo_5 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:334:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  334 |   static const ParamInfo getParamInfo_5 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:336:12: warning: 'defaultStopDbParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  336 |     return ParamInfo::defaultStopDbParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:221:20: note: resolves to this declaration
  221 |   static ParamInfo defaultStopDbParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:343:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  343 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:345:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  345 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                         ^~~
      |                         static_cast<int>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:345:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  345 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:345:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  345 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:345:58: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  345 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:345:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  345 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:345:80: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  345 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:345:91: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  345 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                                                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:345:92: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  345 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:353:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  353 |   static Kind getKind () { return kindLowPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:353:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  353 |   static Kind getKind () { return kindLowPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:354:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  354 |   static const char* getName() { return "Chebyshev II Low Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:354:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  354 |   static const char* getName() { return "Chebyshev II Low Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:359:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  359 |   static Kind getKind () { return kindHighPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:359:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  359 |   static Kind getKind () { return kindHighPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:360:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  360 |   static const char* getName() { return "Chebyshev II High Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:360:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  360 |   static const char* getName() { return "Chebyshev II High Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:365:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  365 |   static Kind getKind () { return kindHighPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:365:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  365 |   static Kind getKind () { return kindHighPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:366:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  366 |   static const char* getName() { return "Chebyshev II Band Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:366:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  366 |   static const char* getName() { return "Chebyshev II Band Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:371:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  371 |   static Kind getKind () { return kindHighPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:371:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  371 |   static Kind getKind () { return kindHighPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:372:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  372 |   static const char* getName() { return "Chebyshev II Band Stop"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:372:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  372 |   static const char* getName() { return "Chebyshev II Band Stop"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:377:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  377 |   static Kind getKind () { return kindLowShelf; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:377:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  377 |   static Kind getKind () { return kindLowShelf; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:378:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  378 |   static const char* getName() { return "Chebyshev II Low Shelf"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:378:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  378 |   static const char* getName() { return "Chebyshev II Low Shelf"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:383:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  383 |   static Kind getKind () { return kindHighShelf; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:383:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  383 |   static Kind getKind () { return kindHighShelf; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:384:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  384 |   static const char* getName() { return "Chebyshev II High Shelf"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:384:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  384 |   static const char* getName() { return "Chebyshev II High Shelf"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:389:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  389 |   static Kind getKind () { return kindBandShelf; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:389:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  389 |   static Kind getKind () { return kindBandShelf; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:390:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  390 |   static const char* getName() { return "Chebyshev II Band Shelf"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:390:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  390 |   static const char* getName() { return "Chebyshev II Band Shelf"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:399:3: warning: 'getParamInfo_1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  399 |   const ParamInfo getParamInfo_1 () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:399:3: warning: function 'getParamInfo_1' should be marked [[nodiscard]] [modernize-use-nodiscard]
  399 |   const ParamInfo getParamInfo_1 () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:399:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  399 |   const ParamInfo getParamInfo_1 () const
      |   ^~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:399:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  399 |   const ParamInfo getParamInfo_1 () const
      |   ~~~~~~~~~~~~~~~ ^                      
      |   auto                                    -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:403:25: warning: 'Int_toControlValue' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  403 |                        &ParamInfo::Int_toControlValue,
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:191:10: note: resolves to this declaration
  191 |   double Int_toControlValue (double nativeValue) const;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:404:25: warning: 'Int_toNativeValue' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  404 |                        &ParamInfo::Int_toNativeValue,
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:192:10: note: resolves to this declaration
  192 |   double Int_toNativeValue (double controlValue) const;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:405:25: warning: 'Int_toString' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  405 |                        &ParamInfo::Int_toString);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:203:15: note: resolves to this declaration
  203 |   std::string Int_toString (double nativeValue) const;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:459:1: warning: namespace 'Design' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  459 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:199:11: note: namespace 'Design' starts here
  199 | namespace Design {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:461:1: warning: namespace 'ChebyshevII' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  461 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:52:11: note: namespace 'ChebyshevII' starts here
   52 | namespace ChebyshevII {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:463:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  463 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/ChebyshevII.h:45:11: note: namespace 'Dsp' starts here
   45 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_COMMON_H
      |         ^~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_COMMON_H
   37 | #define DSPFILTERS_COMMON_H
      |         ~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_COMMON_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h:48:1: warning: system include stdlib.h not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h [llvmlibc-restrict-system-libc-headers]
   48 | #include <stdlib.h>
      | ^~~~~~~~~~~~~~~~~~~
   49 | 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h:50:1: warning: #includes are not sorted properly [llvm-include-order]
   50 | #include <cassert>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h:50:1: warning: system include cassert not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h [llvmlibc-restrict-system-libc-headers]
   50 | #include <cassert>
      | ^~~~~~~~~~~~~~~~~~
   51 | #include <cfloat>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h:51:1: warning: system include cfloat not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h [llvmlibc-restrict-system-libc-headers]
   51 | #include <cfloat>
      | ^~~~~~~~~~~~~~~~~
   52 | #include <cmath>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h:52:1: warning: system include cmath not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h [llvmlibc-restrict-system-libc-headers]
   52 | #include <cmath>
      | ^~~~~~~~~~~~~~~~
   53 | #include <complex>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h:53:1: warning: system include complex not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h [llvmlibc-restrict-system-libc-headers]
   53 | #include <complex>
      | ^~~~~~~~~~~~~~~~~~
   54 | #include <cstring>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h:54:1: warning: system include cstring not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h [llvmlibc-restrict-system-libc-headers]
   54 | #include <cstring>
      | ^~~~~~~~~~~~~~~~~~
   55 | #include <string>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h:55:1: warning: system include string not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h [llvmlibc-restrict-system-libc-headers]
   55 | #include <string>
      | ^~~~~~~~~~~~~~~~~
   56 | #include <limits>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h:56:1: warning: system include limits not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h [llvmlibc-restrict-system-libc-headers]
   56 | #include <limits>
      | ^~~~~~~~~~~~~~~~~
   57 | #include <vector>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h:57:1: warning: system include vector not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h [llvmlibc-restrict-system-libc-headers]
   57 | #include <vector>
      | ^~~~~~~~~~~~~~~~~
   58 | #include <algorithm>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h:58:1: warning: system include algorithm not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Common.h [llvmlibc-restrict-system-libc-headers]
   58 | #include <algorithm>
      | ^~~~~~~~~~~~~~~~~~~~
   59 | 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_CUSTOM_H
      |         ^~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_CUSTOM_H
   37 | #define DSPFILTERS_CUSTOM_H
      |         ~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_CUSTOM_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:39:1: warning: #includes are not sorted properly [llvm-include-order]
   39 | #include "DspFilters/Common.h"
      | ^        ~~~~~~~~~~~~~~~~~~~~~
   40 | #include "DspFilters/Biquad.h"
      |          ~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:44:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
   44 | namespace Dsp {
      | ^~~~~~~~~~~~~~~
   45 | 
   46 | /*
   47 |  * Single pole and Biquad with parameters allowing
   48 |  * for directly setting the poles and zeros
   49 |  *
   50 |  */
   51 | 
   52 | namespace Custom {
      | ~~~~~~~~~~~~~~~~
      | namespace Dsp::Custom
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:58:8: warning: accessing fields in struct 'OnePole' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
   58 | struct OnePole : Biquad
      |        ^
   59 | {
   60 |   void setup (double scale,
   61 |               double pole,
   62 |               double zero);
   63 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:58:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'OnePole'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:58:8: warning: accessing fields in struct 'OnePole' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
   58 | struct OnePole : Biquad
      |        ^
   59 | {
   60 |   void setup (double scale,
   61 |               double pole,
   62 |               double zero);
   63 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:58:8: note: use "__attribute__((aligned(1)))" to align struct 'OnePole' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:65:8: warning: accessing fields in struct 'TwoPole' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
   65 | struct TwoPole : Biquad
      |        ^
   66 | {
   67 |   void setup (double scale,
   68 |               double poleRho,
   69 |               double poleTheta,
   70 |               double zeroRho,
   71 |               double zeroTheta);
   72 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:65:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'TwoPole'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:65:8: warning: accessing fields in struct 'TwoPole' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
   65 | struct TwoPole : Biquad
      |        ^
   66 | {
   67 |   void setup (double scale,
   68 |               double poleRho,
   69 |               double poleTheta,
   70 |               double zeroRho,
   71 |               double zeroTheta);
   72 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:65:8: note: use "__attribute__((aligned(1)))" to align struct 'TwoPole' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:82:8: warning: accessing fields in struct 'OnePole' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
   82 | struct OnePole : DesignBase, Custom::OnePole
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:82:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'OnePole'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:82:8: warning: accessing fields in struct 'OnePole' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
   82 | struct OnePole : DesignBase, Custom::OnePole
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:82:8: note: use "__attribute__((aligned(1)))" to align struct 'OnePole' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:84:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:84:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   84 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:89:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   89 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:89:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   89 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:94:3: warning: 'getParamInfo_1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   94 |   static const ParamInfo getParamInfo_1 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:94:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
   94 |   static const ParamInfo getParamInfo_1 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:94:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   94 |   static const ParamInfo getParamInfo_1 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:96:12: warning: 'defaultGainParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   96 |     return ParamInfo::defaultGainParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:218:20: note: resolves to this declaration
  218 |   static ParamInfo defaultGainParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:99:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   99 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:99:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
   99 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:99:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   99 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:101:12: warning: 'defaultPoleRealParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  101 |     return ParamInfo::defaultPoleRealParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:227:20: note: resolves to this declaration
  227 |   static ParamInfo defaultPoleRealParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:104:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  104 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:104:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  104 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:104:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  104 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:106:12: warning: 'defaultZeroRealParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  106 |     return ParamInfo::defaultZeroRealParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:228:20: note: resolves to this declaration
  228 |   static ParamInfo defaultZeroRealParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:109:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  109 |   static Kind getKind () { return kindOther; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:109:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  109 |   static Kind getKind () { return kindOther; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:110:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  110 |   static const char* getName() { return "Custom One-Pole"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:110:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  110 |   static const char* getName() { return "Custom One-Pole"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:112:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  112 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:114:17: warning: 10. is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  114 |     setup (pow (10., params[1]/20),
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:114:28: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  114 |     setup (pow (10., params[1]/20),
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:114:32: warning: 20 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  114 |     setup (pow (10., params[1]/20),
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:115:18: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  115 |            params[2],
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:116:18: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  116 |            params[3]);
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:120:8: warning: accessing fields in struct 'TwoPole' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  120 | struct TwoPole : DesignBase, Custom::TwoPole
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:120:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'TwoPole'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:120:8: warning: accessing fields in struct 'TwoPole' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  120 | struct TwoPole : DesignBase, Custom::TwoPole
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:120:8: note: use "__attribute__((aligned(1)))" to align struct 'TwoPole' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:122:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:122:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  122 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:127:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  127 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:127:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  127 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:129:12: warning: 6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  129 |     return 6;
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:132:3: warning: 'getParamInfo_1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  132 |   static const ParamInfo getParamInfo_1 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:132:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  132 |   static const ParamInfo getParamInfo_1 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:132:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  132 |   static const ParamInfo getParamInfo_1 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:134:12: warning: 'defaultGainParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  134 |     return ParamInfo::defaultGainParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:218:20: note: resolves to this declaration
  218 |   static ParamInfo defaultGainParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:137:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  137 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:137:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  137 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:137:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  137 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:139:12: warning: 'defaultPoleRhoParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  139 |     return ParamInfo::defaultPoleRhoParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:223:20: note: resolves to this declaration
  223 |   static ParamInfo defaultPoleRhoParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:142:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  142 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:142:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  142 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:142:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  142 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:144:12: warning: 'defaultPoleThetaParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  144 |     return ParamInfo::defaultPoleThetaParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:224:20: note: resolves to this declaration
  224 |   static ParamInfo defaultPoleThetaParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:147:3: warning: 'getParamInfo_4' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  147 |   static const ParamInfo getParamInfo_4 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:147:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  147 |   static const ParamInfo getParamInfo_4 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:147:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  147 |   static const ParamInfo getParamInfo_4 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:149:12: warning: 'defaultZeroRhoParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  149 |     return ParamInfo::defaultZeroRhoParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:225:20: note: resolves to this declaration
  225 |   static ParamInfo defaultZeroRhoParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:152:3: warning: 'getParamInfo_5' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  152 |   static const ParamInfo getParamInfo_5 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:152:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  152 |   static const ParamInfo getParamInfo_5 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:152:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  152 |   static const ParamInfo getParamInfo_5 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:154:12: warning: 'defaultZeroThetaParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  154 |     return ParamInfo::defaultZeroThetaParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:226:20: note: resolves to this declaration
  226 |   static ParamInfo defaultZeroThetaParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:158:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  158 |   static Kind getKind () { return kindOther; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:158:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  158 |   static Kind getKind () { return kindOther; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:159:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  159 |   static const char* getName() { return "Custom Two-Pole"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:159:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  159 |   static const char* getName() { return "Custom Two-Pole"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:161:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  161 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:163:17: warning: 10. is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  163 |     setup (pow (10., params[1]/20),
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:163:28: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  163 |     setup (pow (10., params[1]/20),
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:163:32: warning: 20 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  163 |     setup (pow (10., params[1]/20),
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:164:18: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  164 |            params[2],
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:165:18: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  165 |            params[3],
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:166:18: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  166 |            params[4],
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:167:18: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  167 |            params[5]);
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:167:19: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  167 |            params[5]);
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:171:1: warning: namespace 'Design' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  171 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:80:11: note: namespace 'Design' starts here
   80 | namespace Design {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:173:1: warning: namespace 'Custom' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  173 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:52:11: note: namespace 'Custom' starts here
   52 | namespace Custom {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:175:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  175 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Custom.h:44:11: note: namespace 'Dsp' starts here
   44 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.cpp:41:1: warning: namespace 'Dsp' not terminated with a closing comment [llvm-namespace-comment]
   41 | }
      | ^
      |   // namespace Dsp
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.cpp:39:11: note: namespace 'Dsp' starts here
   39 | namespace Dsp {
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_DESIGN_H
      |         ^~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_DESIGN_H
   37 | #define DSPFILTERS_DESIGN_H
      |         ~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_DESIGN_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:47:3: warning: 'getParamInfo_0' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   47 |   static const ParamInfo getParamInfo_0 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:47:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
   47 |   static const ParamInfo getParamInfo_0 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:47:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   47 |   static const ParamInfo getParamInfo_0 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:49:12: warning: 'defaultSampleRateParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   49 |     return ParamInfo::defaultSampleRateParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:212:20: note: resolves to this declaration
  212 |   static ParamInfo defaultSampleRateParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:53:3: warning: 'getParamInfo_1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   53 |   static const ParamInfo getParamInfo_1 () { return ParamInfo(); }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:53:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
   53 |   static const ParamInfo getParamInfo_1 () { return ParamInfo(); }
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:53:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   53 |   static const ParamInfo getParamInfo_1 () { return ParamInfo(); }
      |          ~~~~~~~~~~~~~~~ ^
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:54:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   54 |   static const ParamInfo getParamInfo_2 () { return ParamInfo(); }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:54:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
   54 |   static const ParamInfo getParamInfo_2 () { return ParamInfo(); }
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:54:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   54 |   static const ParamInfo getParamInfo_2 () { return ParamInfo(); }
      |          ~~~~~~~~~~~~~~~ ^
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:55:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   55 |   static const ParamInfo getParamInfo_3 () { return ParamInfo(); }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:55:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
   55 |   static const ParamInfo getParamInfo_3 () { return ParamInfo(); }
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:55:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   55 |   static const ParamInfo getParamInfo_3 () { return ParamInfo(); }
      |          ~~~~~~~~~~~~~~~ ^
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:56:3: warning: 'getParamInfo_4' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   56 |   static const ParamInfo getParamInfo_4 () { return ParamInfo(); }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:56:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
   56 |   static const ParamInfo getParamInfo_4 () { return ParamInfo(); }
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:56:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   56 |   static const ParamInfo getParamInfo_4 () { return ParamInfo(); }
      |          ~~~~~~~~~~~~~~~ ^
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:57:3: warning: 'getParamInfo_5' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   57 |   static const ParamInfo getParamInfo_5 () { return ParamInfo(); }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:57:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
   57 |   static const ParamInfo getParamInfo_5 () { return ParamInfo(); }
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:57:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   57 |   static const ParamInfo getParamInfo_5 () { return ParamInfo(); }
      |          ~~~~~~~~~~~~~~~ ^
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:58:3: warning: 'getParamInfo_6' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   58 |   static const ParamInfo getParamInfo_6 () { return ParamInfo(); }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:58:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
   58 |   static const ParamInfo getParamInfo_6 () { return ParamInfo(); }
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:58:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   58 |   static const ParamInfo getParamInfo_6 () { return ParamInfo(); }
      |          ~~~~~~~~~~~~~~~ ^
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:59:3: warning: 'getParamInfo_7' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   59 |   static const ParamInfo getParamInfo_7 () { return ParamInfo(); }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:59:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
   59 |   static const ParamInfo getParamInfo_7 () { return ParamInfo(); }
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:59:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   59 |   static const ParamInfo getParamInfo_7 () { return ParamInfo(); }
      |          ~~~~~~~~~~~~~~~ ^
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:62:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
   62 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Design.h:42:11: note: namespace 'Dsp' starts here
   42 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Dsp.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_DSP_H
      |         ^~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_DSP_H
   37 | #define DSPFILTERS_DSP_H
      |         ~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_DSP_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_ELLIPTIC_H
      |         ^~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_ELLIPTIC_H
   37 | #define DSPFILTERS_ELLIPTIC_H
      |         ~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_ELLIPTIC_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:39:1: warning: #includes are not sorted properly [llvm-include-order]
   39 | #include "DspFilters/Common.h"
      | ^        ~~~~~~~~~~~~~~~~~~~~~
   40 | #include "DspFilters/Cascade.h"
      |          ~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:45:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
   45 | namespace Dsp {
      | ^~~~~~~~~~~~~~~
   46 | 
   47 | /*
   48 |  * Filters with Elliptic response characteristics
   49 |  *
   50 |  */
   51 | 
   52 | namespace Elliptic {
      | ~~~~~~~~~~~~~~~~~~
      | namespace Dsp::Elliptic
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:58:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   58 |   static double ellipticK (double k);
      |          ~~~~~~ ^                   
      |          auto                        -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:58:35: warning: parameter name 'k' is too short, expected at least 3 characters [readability-identifier-length]
   58 |   static double ellipticK (double k);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:68:16: warning: parameter 'numPoles' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
   68 |   void design (const int numPoles,
      |                ^~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:73:25: warning: parameter name 'sn' is too short, expected at least 3 characters [readability-identifier-length]
   73 |   void prodpoly    (int sn);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:74:25: warning: parameter name 'i' is too short, expected at least 3 characters [readability-identifier-length]
   74 |   void calcfz2     (int i);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:77:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   77 |   double findfact        (int t);
      |   ~~~~~~ ^                      
      |   auto                           -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:77:25: warning: parameter name 't' is too short, expected at least 3 characters [readability-identifier-length]
   77 |   double findfact        (int t);
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:78:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   78 |   double calcsn          (double u);
      |   ~~~~~~ ^                         
      |   auto                              -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:78:27: warning: parameter name 'u' is too short, expected at least 3 characters [readability-identifier-length]
   78 |   double calcsn          (double u);
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:80:2: warning: preprocessor condition is always 'false', consider removing both the condition and its contents [readability-avoid-unconditional-preprocessor-if]
   80 | #if 0
      |  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:104:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  104 |   double m_zeros[100];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:104:18: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  104 |   double m_zeros[100];
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:105:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  105 |   double m_c1[100];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:105:15: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  105 |   double m_c1[100];
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:106:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  106 |   double m_b1[100];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:106:15: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  106 |   double m_b1[100];
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:107:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  107 |   double m_a1[100];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:107:15: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  107 |   double m_a1[100];
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:108:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  108 |   double m_d1[100];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:108:15: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  108 |   double m_d1[100];
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:109:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  109 |   double m_q1[100];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:109:15: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  109 |   double m_q1[100];
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:110:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  110 |   double m_z1[100];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:110:15: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  110 |   double m_z1[100];
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:111:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  111 |   double m_f1[100];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:111:15: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  111 |   double m_f1[100];
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:112:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  112 |   double m_s1[100];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:112:15: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  112 |   double m_s1[100];
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:113:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  113 |   double m_p [100];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:113:15: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  113 |   double m_p [100];
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:114:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  114 |   double m_zw1[100];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:114:16: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  114 |   double m_zw1[100];
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:115:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  115 |   double m_zf1[100];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:115:16: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  115 |   double m_zf1[100];
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:116:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  116 |   double m_zq1[100];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:116:16: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  116 |   double m_zq1[100];
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:117:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  117 |   double m_rootR[100];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:117:18: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  117 |   double m_rootR[100];
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:118:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  118 |   double m_rootI[100];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:118:18: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  118 |   double m_rootI[100];
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:129:8: warning: accessing fields in struct 'LowPassBase' is inefficient due to padding; only needs 1 bytes but is using 12160 bytes [altera-struct-pack-align]
  129 | struct LowPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  130 | {
  131 |   void setup (int order,
  132 |               double sampleRate,
  133 |               double cutoffFrequency,
  134 |               double rippleDb,
  135 |               double rolloff);
  136 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:129:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'LowPassBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:129:8: warning: accessing fields in struct 'LowPassBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  129 | struct LowPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  130 | {
  131 |   void setup (int order,
  132 |               double sampleRate,
  133 |               double cutoffFrequency,
  134 |               double rippleDb,
  135 |               double rolloff);
  136 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:129:8: note: use "__attribute__((aligned(1)))" to align struct 'LowPassBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:138:8: warning: accessing fields in struct 'HighPassBase' is inefficient due to padding; only needs 1 bytes but is using 12160 bytes [altera-struct-pack-align]
  138 | struct HighPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  139 | {
  140 |   void setup (int order,
  141 |               double sampleRate,
  142 |               double cutoffFrequency,
  143 |               double rippleDb,
  144 |               double rolloff);
  145 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:138:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'HighPassBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:138:8: warning: accessing fields in struct 'HighPassBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  138 | struct HighPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  139 | {
  140 |   void setup (int order,
  141 |               double sampleRate,
  142 |               double cutoffFrequency,
  143 |               double rippleDb,
  144 |               double rolloff);
  145 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:138:8: note: use "__attribute__((aligned(1)))" to align struct 'HighPassBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:147:8: warning: accessing fields in struct 'BandPassBase' is inefficient due to padding; only needs 1 bytes but is using 12160 bytes [altera-struct-pack-align]
  147 | struct BandPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  148 | {
  149 |   void setup (int order,
  150 |               double sampleRate,
  151 |               double centerFrequency,
  152 |               double widthFrequency,
  153 |               double rippleDb,
  154 |               double rolloff);
  155 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:147:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandPassBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:147:8: warning: accessing fields in struct 'BandPassBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  147 | struct BandPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  148 | {
  149 |   void setup (int order,
  150 |               double sampleRate,
  151 |               double centerFrequency,
  152 |               double widthFrequency,
  153 |               double rippleDb,
  154 |               double rolloff);
  155 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:147:8: note: use "__attribute__((aligned(1)))" to align struct 'BandPassBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:157:8: warning: accessing fields in struct 'BandStopBase' is inefficient due to padding; only needs 1 bytes but is using 12160 bytes [altera-struct-pack-align]
  157 | struct BandStopBase : PoleFilterBase <AnalogLowPass>
      |        ^
  158 | {
  159 |   void setup (int order,
  160 |               double sampleRate,
  161 |               double centerFrequency,
  162 |               double widthFrequency,
  163 |               double rippleDb,
  164 |               double rolloff);
  165 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:157:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandStopBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:157:8: warning: accessing fields in struct 'BandStopBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  157 | struct BandStopBase : PoleFilterBase <AnalogLowPass>
      |        ^
  158 | {
  159 |   void setup (int order,
  160 |               double sampleRate,
  161 |               double centerFrequency,
  162 |               double widthFrequency,
  163 |               double rippleDb,
  164 |               double rolloff);
  165 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:157:8: note: use "__attribute__((aligned(1)))" to align struct 'BandStopBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:203:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:203:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  203 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:208:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  208 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:208:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  208 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:210:12: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  210 |     return 5;
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:213:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  213 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:213:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  213 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:213:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  213 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:215:12: warning: 'defaultCutoffFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  215 |     return ParamInfo::defaultCutoffFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:213:20: note: resolves to this declaration
  213 |   static ParamInfo defaultCutoffFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:218:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  218 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:218:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  218 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:218:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  218 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:220:12: warning: 'defaultRippleDbParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  220 |     return ParamInfo::defaultRippleDbParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:220:20: note: resolves to this declaration
  220 |   static ParamInfo defaultRippleDbParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:223:3: warning: 'getParamInfo_4' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  223 |   static const ParamInfo getParamInfo_4 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:223:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  223 |   static const ParamInfo getParamInfo_4 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:223:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  223 |   static const ParamInfo getParamInfo_4 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:225:12: warning: 'defaultRolloffParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  225 |     return ParamInfo::defaultRolloffParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:222:20: note: resolves to this declaration
  222 |   static ParamInfo defaultRolloffParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:232:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  232 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:234:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  234 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                         ^~~
      |                         static_cast<int>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:234:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  234 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:234:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  234 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:234:58: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  234 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:234:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  234 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:234:80: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  234 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4]);
      |                                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:240:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:240:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  240 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:245:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  245 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:245:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  245 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:247:12: warning: 6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  247 |     return 6;
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:250:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  250 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:250:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  250 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:250:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  250 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:252:12: warning: 'defaultCenterFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  252 |     return ParamInfo::defaultCenterFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:214:20: note: resolves to this declaration
  214 |   static ParamInfo defaultCenterFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:255:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  255 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:255:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  255 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:255:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  255 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:257:12: warning: 'defaultBandwidthHzParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  257 |     return ParamInfo::defaultBandwidthHzParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:217:20: note: resolves to this declaration
  217 |   static ParamInfo defaultBandwidthHzParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:260:3: warning: 'getParamInfo_4' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  260 |   static const ParamInfo getParamInfo_4 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:260:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  260 |   static const ParamInfo getParamInfo_4 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:260:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  260 |   static const ParamInfo getParamInfo_4 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:262:12: warning: 'defaultRippleDbParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  262 |     return ParamInfo::defaultRippleDbParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:220:20: note: resolves to this declaration
  220 |   static ParamInfo defaultRippleDbParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:265:3: warning: 'getParamInfo_5' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  265 |   static const ParamInfo getParamInfo_5 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:265:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  265 |   static const ParamInfo getParamInfo_5 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:265:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  265 |   static const ParamInfo getParamInfo_5 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:267:12: warning: 'defaultRolloffParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  267 |     return ParamInfo::defaultRolloffParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:222:20: note: resolves to this declaration
  222 |   static ParamInfo defaultRolloffParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:274:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  274 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:276:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  276 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                         ^~~
      |                         static_cast<int>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:276:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  276 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:276:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  276 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:276:58: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  276 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:276:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  276 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:276:80: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  276 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:276:91: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  276 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                                                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:276:92: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  276 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3], params[4], params[5]);
      |                                                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:284:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  284 |   static Kind getKind () { return kindLowPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:284:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  284 |   static Kind getKind () { return kindLowPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:285:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  285 |   static const char* getName() { return "Elliptic Low Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:285:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  285 |   static const char* getName() { return "Elliptic Low Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:290:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  290 |   static Kind getKind () { return kindHighPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:290:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  290 |   static Kind getKind () { return kindHighPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:291:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  291 |   static const char* getName() { return "Elliptic High Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:291:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  291 |   static const char* getName() { return "Elliptic High Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:296:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  296 |   static Kind getKind () { return kindHighPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:296:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  296 |   static Kind getKind () { return kindHighPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:297:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  297 |   static const char* getName() { return "Elliptic Band Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:297:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  297 |   static const char* getName() { return "Elliptic Band Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:302:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  302 |   static Kind getKind () { return kindHighPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:302:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  302 |   static Kind getKind () { return kindHighPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:303:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  303 |   static const char* getName() { return "Elliptic Band Stop"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:303:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  303 |   static const char* getName() { return "Elliptic Band Stop"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:312:3: warning: 'getParamInfo_1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  312 |   const ParamInfo getParamInfo_1 () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:312:3: warning: function 'getParamInfo_1' should be marked [[nodiscard]] [modernize-use-nodiscard]
  312 |   const ParamInfo getParamInfo_1 () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:312:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  312 |   const ParamInfo getParamInfo_1 () const
      |   ^~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:312:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  312 |   const ParamInfo getParamInfo_1 () const
      |   ~~~~~~~~~~~~~~~ ^                      
      |   auto                                    -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:316:25: warning: 'Int_toControlValue' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  316 |                        &ParamInfo::Int_toControlValue,
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:191:10: note: resolves to this declaration
  191 |   double Int_toControlValue (double nativeValue) const;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:317:25: warning: 'Int_toNativeValue' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  317 |                        &ParamInfo::Int_toNativeValue,
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:192:10: note: resolves to this declaration
  192 |   double Int_toNativeValue (double controlValue) const;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:318:25: warning: 'Int_toString' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  318 |                        &ParamInfo::Int_toString);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:203:15: note: resolves to this declaration
  203 |   std::string Int_toString (double nativeValue) const;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:352:1: warning: namespace 'Design' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  352 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:199:11: note: namespace 'Design' starts here
  199 | namespace Design {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:354:1: warning: namespace 'Elliptic' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  354 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:52:11: note: namespace 'Elliptic' starts here
   52 | namespace Elliptic {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:356:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  356 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Elliptic.h:45:11: note: namespace 'Dsp' starts here
   45 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.cpp:43:3: warning: static objects are disallowed; if possible, use a constexpr constructor instead [fuchsia-statically-constructed-objects]
   43 |   Params params;
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.cpp:43:10: warning: variable 'params' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   43 |   Params params;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.cpp:47:12: warning: variable 'i' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   47 |   for (int i = 0; i < getNumParams(); ++i)
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.cpp:47:12: warning: variable name 'i' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.cpp:59:7: warning: variable 'index' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   59 |   int index = -1;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.cpp:61:12: warning: variable 'i' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   61 |   for (int i = getNumParams(); --i >= 0;)
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.cpp:61:12: warning: variable name 'i' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.cpp:75:12: warning: variable 'i' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   75 |   for (int i = getNumParams(); --i >= 0;)
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.cpp:75:12: warning: variable name 'i' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.cpp:95:14: warning: variable 'i' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   95 |     for (int i = 0; i < getNumParams (); ++i)
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.cpp:95:14: warning: variable name 'i' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.cpp:100:16: warning: variable 'j' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  100 |       for (int j = 0; j < other->getNumParams(); ++j)
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.cpp:100:16: warning: variable name 'j' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.cpp:117:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  117 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.cpp:39:11: note: namespace 'Dsp' starts here
   39 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_FILTER_H
      |         ^~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_FILTER_H
   37 | #define DSPFILTERS_FILTER_H
      |         ~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_FILTER_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:55:7: warning: constructor does not initialize these fields: m_params [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
   55 | class Filter
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:55:7: warning: class 'Filter' defines a destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:60:3: warning: function 'getKind' should be marked [[nodiscard]] [modernize-use-nodiscard]
   60 |   virtual Kind getKind () const = 0;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:60:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   60 |   virtual Kind getKind () const = 0;
      |           ~~~~ ^
      |           auto                  -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:62:3: warning: function 'getName' should be marked [[nodiscard]] [modernize-use-nodiscard]
   62 |   virtual const std::string getName () const = 0;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:62:3: warning: return type 'const std::string' (aka 'const basic_string<char>') is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
   62 |   virtual const std::string getName () const = 0;
      |   ^       ~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:62:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   62 |   virtual const std::string getName () const = 0;
      |           ~~~~~~~~~~~~~~~~~ ^
      |           auto                               -> const std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:64:3: warning: function 'getNumParams' should be marked [[nodiscard]] [modernize-use-nodiscard]
   64 |   virtual int getNumParams () const = 0;  
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:64:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   64 |   virtual int getNumParams () const = 0;  
      |           ~~~ ^
      |           auto                      -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:66:3: warning: function 'getParamInfo' should be marked [[nodiscard]] [modernize-use-nodiscard]
   66 |   virtual ParamInfo getParamInfo (int index) const = 0;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:66:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   66 |   virtual ParamInfo getParamInfo (int index) const = 0;
      |           ~~~~~~~~~ ^
      |           auto                                     -> ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:68:3: warning: function 'getDefaultParams' should be marked [[nodiscard]] [modernize-use-nodiscard]
   68 |   Params getDefaultParams() const;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:68:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   68 |   Params getDefaultParams() const;
      |   ~~~~~~ ^                       
      |   auto                            -> Params
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:70:3: warning: 'getParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   70 |   const Params& getParams() const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:70:3: warning: function 'getParams' should be marked [[nodiscard]] [modernize-use-nodiscard]
   70 |   const Params& getParams() const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:70:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   70 |   const Params& getParams() const
      |   ~~~~~~~~~~~~~ ^                
      |   auto                            -> const Params&
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:75:3: warning: 'getParam' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   75 |   double getParam (int paramIndex) const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:75:3: warning: function 'getParam' should be marked [[nodiscard]] [modernize-use-nodiscard]
   75 |   double getParam (int paramIndex) const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:75:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   75 |   double getParam (int paramIndex) const
      |   ~~~~~~ ^                              
      |   auto                                   -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:78:20: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   78 |     return m_params[paramIndex];
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:81:3: warning: 'setParam' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   81 |   void setParam (int paramIndex, double nativeValue)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:84:13: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   84 |     m_params[paramIndex] = nativeValue;
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:91:11: note: resolves to this declaration
   91 |   double& operator[] (int index)
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:88:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   88 |   int findParamId (int paramId);
      |   ~~~ ^                        
      |   auto                          -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:92:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   92 |   void setParams (const Params& parameters)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:94:14: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   94 |     m_params = parameters;
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:83:8: note: resolves to this declaration
   83 | struct Params
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:103:3: warning: function 'getPoleZeros' should be marked [[nodiscard]] [modernize-use-nodiscard]
  103 |   virtual std::vector<PoleZeroPair> getPoleZeros() const = 0;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:103:37: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  103 |   virtual std::vector<PoleZeroPair> getPoleZeros() const = 0;
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |           auto                                           -> std::vector<PoleZeroPair>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:105:3: warning: function 'response' should be marked [[nodiscard]] [modernize-use-nodiscard]
  105 |   virtual complex_t response (double normalizedFrequency) const = 0;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:105:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  105 |   virtual complex_t response (double normalizedFrequency) const = 0;
      |           ~~~~~~~~~ ^
      |           auto                                                  -> complex_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:107:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  107 |   virtual int getNumChannels() = 0;
      |           ~~~ ^
      |           auto                 -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:135:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  135 |   Kind getKind () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:135:3: warning: function 'getKind' should be marked [[nodiscard]] [modernize-use-nodiscard]
  135 |   Kind getKind () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:135:8: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  135 |   Kind getKind () const
      |        ^               
      |                         override
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:135:8: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  135 |   Kind getKind () const
      |   ~~~~ ^               
      |   auto                  -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:140:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  140 |   const std::string getName () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:140:3: warning: function 'getName' should be marked [[nodiscard]] [modernize-use-nodiscard]
  140 |   const std::string getName () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:140:21: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  140 |   const std::string getName () const
      |                     ^               
      |                                      override
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:140:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  140 |   const std::string getName () const
      |   ~~~~~~~~~~~~~~~~~ ^               
      |   auto                               -> const std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:145:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  145 |   int getNumParams () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:145:3: warning: function 'getNumParams' should be marked [[nodiscard]] [modernize-use-nodiscard]
  145 |   int getNumParams () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:145:7: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  145 |   int getNumParams () const
      |       ^                    
      |                             override
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:145:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  145 |   int getNumParams () const
      |   ~~~ ^                    
      |   auto                      -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:150:3: warning: 'getDefaultParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  150 |   Params getDefaultParams() const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:150:3: warning: function 'getDefaultParams' should be marked [[nodiscard]] [modernize-use-nodiscard]
  150 |   Params getDefaultParams() const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:150:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  150 |   Params getDefaultParams() const
      |   ~~~~~~ ^                       
      |   auto                            -> Params
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:155:3: warning: 'getParamInfo' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  155 |   ParamInfo getParamInfo (int index) const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:155:3: warning: function 'getParamInfo' should be marked [[nodiscard]] [modernize-use-nodiscard]
  155 |   ParamInfo getParamInfo (int index) const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:155:13: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  155 |   ParamInfo getParamInfo (int index) const
      |             ^                             
      |                                            override
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:155:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  155 |   ParamInfo getParamInfo (int index) const
      |   ~~~~~~~~~ ^                             
      |   auto                                     -> ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:157:5: warning: switching on non-enum value without default case may not cover all cases [bugprone-switch-missing-default-case]
  157 |     switch (index)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:157:5: warning: potential uncovered code path; add a default label [hicpp-multiway-paths-covered]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:164:10: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  164 |     case 5: return m_design.getParamInfo_5 ();
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:165:10: warning: 6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  165 |     case 6: return m_design.getParamInfo_6 ();
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:166:10: warning: 7 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  166 |     case 7: return m_design.getParamInfo_7 ();
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:169:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
  169 |     return ParamInfo();
      |            ^~~~~~~~~~~
      |            {}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:172:3: warning: 'getPoleZeros' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  172 |   std::vector<PoleZeroPair> getPoleZeros() const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:172:3: warning: function 'getPoleZeros' should be marked [[nodiscard]] [modernize-use-nodiscard]
  172 |   std::vector<PoleZeroPair> getPoleZeros() const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:172:29: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  172 |   std::vector<PoleZeroPair> getPoleZeros() const
      |                             ^                   
      |                                                  override
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:172:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  172 |   std::vector<PoleZeroPair> getPoleZeros() const
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~ ^                   
      |   auto                                           -> std::vector<PoleZeroPair>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:177:3: warning: 'response' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  177 |   complex_t response (double normalizedFrequency) const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:177:3: warning: function 'response' should be marked [[nodiscard]] [modernize-use-nodiscard]
  177 |   complex_t response (double normalizedFrequency) const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:177:13: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  177 |   complex_t response (double normalizedFrequency) const
      |             ^                                          
      |                                                         override
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:177:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  177 |   complex_t response (double normalizedFrequency) const
      |   ~~~~~~~~~ ^                                          
      |   auto                                                  -> complex_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:183:3: warning: 'doSetParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  183 |   void doSetParams (const Params& parameters)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:183:8: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  183 |   void doSetParams (const Params& parameters)
      |        ^                                     
      |                                               override
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:188:1: warning: redundant access specifier has the same accessibility as the previous access specifier [readability-redundant-access-specifiers]
  188 | protected:
      | ^~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:182:1: note: previously declared here
  182 | protected:
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:189:15: warning: member variable 'm_design' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  189 |   DesignClass m_design;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:200:3: warning: use '= default' to define a trivial default constructor [hicpp-use-equals-default,modernize-use-equals-default]
  200 |   FilterDesign ()
      |   ^
  201 |   {
      |   ~
      |   = default;
  202 |   }
      |   ~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:200:3: warning: 'FilterDesign<DesignClass, Channels, StateType>' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  200 |   FilterDesign ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:204:3: warning: 'getNumChannels' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  204 |   int getNumChannels()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:204:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  204 |   int getNumChannels()
      |   ~~~ ^               
      |   auto                 -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:209:3: warning: 'reset' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  209 |   void reset ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:214:3: warning: 'process' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  214 |   void process (int numSamples, float* const* arrayOfChannels)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:220:3: warning: 'process' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  220 |   void process (int numSamples, double* const* arrayOfChannels)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:228:69: warning: member variable 'm_state' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  228 |                  typename DesignClass::template State <StateType> > m_state;
      |                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:246:3: warning: 'getNumChannels' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  246 |   int getNumChannels()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:246:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  246 |   int getNumChannels()
      |   ~~~ ^               
      |   auto                 -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:251:3: warning: 'reset' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  251 |   void reset ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:257:3: warning: 'process' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  257 |   void process (int numSamples, Sample* const* arrayOfChannels)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:259:53: warning: C-style casts are discouraged; use static_cast/const_cast/reinterpret_cast [google-readability-casting]
  259 |     m_state.process (numSamples, arrayOfChannels, *((FilterClass*)this));
      |                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:264:69: warning: member variable 'm_state' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  264 |                  typename FilterClass::template State <StateType> > m_state;
      |                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:267:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  267 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Filter.h:45:11: note: namespace 'Dsp' starts here
   45 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_LAYOUT_H
      |         ^~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_LAYOUT_H
   37 | #define DSPFILTERS_LAYOUT_H
      |         ~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_LAYOUT_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:54:3: warning: constructor does not initialize these fields: m_pair, m_normalW, m_normalGain [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
   54 |   LayoutBase ()
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:54:3: warning: 'LayoutBase' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   54 |   LayoutBase ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:60:3: warning: constructor does not initialize these fields: m_normalW, m_normalGain [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
   60 |   LayoutBase (int maxPoles, PoleZeroPair* pairs)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:60:3: warning: 'LayoutBase' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   60 |   LayoutBase (int maxPoles, PoleZeroPair* pairs)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:67:3: warning: 'setStorage' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   67 |   void setStorage (const LayoutBase& other)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:74:3: warning: 'reset' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   74 |   void reset ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:79:3: warning: 'getNumPoles' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   79 |   int getNumPoles () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:79:3: warning: function 'getNumPoles' should be marked [[nodiscard]] [modernize-use-nodiscard]
   79 |   int getNumPoles () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:79:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   79 |   int getNumPoles () const
      |   ~~~ ^                   
      |   auto                     -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:84:3: warning: 'getMaxPoles' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   84 |   int getMaxPoles () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:84:3: warning: function 'getMaxPoles' should be marked [[nodiscard]] [modernize-use-nodiscard]
   84 |   int getMaxPoles () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:84:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   84 |   int getMaxPoles () const
      |   ~~~ ^                   
      |   auto                     -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:89:3: warning: 'add' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   89 |   void add (const complex_t& pole, const complex_t& zero)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:91:15: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
   91 |     assert (!(m_numPoles&1)); // single comes last
      |               ^
/usr/include/assert.h:103:27: note: expanded from macro 'assert'
  103 |      (static_cast <bool> (expr)                                         \
      |                           ^~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:92:14: warning: 'is_nan<std::complex<double>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   92 |     assert (!Dsp::is_nan (pole));
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:112:13: note: resolves to this declaration
  112 | inline bool is_nan<complex_t> (complex_t v)
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:93:5: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   93 |     m_pair[m_numPoles/2] = PoleZeroPair (pole, zero);
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:93:26: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   93 |     m_pair[m_numPoles/2] = PoleZeroPair (pole, zero);
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:92:8: note: resolves to this declaration
   92 | struct PoleZeroPair
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:97:3: warning: 'addPoleZeroConjugatePairs' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   97 |   void addPoleZeroConjugatePairs (const complex_t pole,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:100:15: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
  100 |     assert (!(m_numPoles&1)); // single comes last
      |               ^
/usr/include/assert.h:103:27: note: expanded from macro 'assert'
  103 |      (static_cast <bool> (expr)                                         \
      |                           ^~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:101:14: warning: 'is_nan<std::complex<double>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  101 |     assert (!Dsp::is_nan (pole));
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:112:13: note: resolves to this declaration
  112 | inline bool is_nan<complex_t> (complex_t v)
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:102:5: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  102 |     m_pair[m_numPoles/2] = PoleZeroPair (
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:102:26: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  102 |     m_pair[m_numPoles/2] = PoleZeroPair (
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:92:8: note: resolves to this declaration
   92 | struct PoleZeroPair
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:103:19: warning: 'conj<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  103 |       pole, zero, std::conj (pole), std::conj (zero));
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:970:5: note: resolves to this declaration
  970 |     conj(const complex<_Tp>& __z)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:103:37: warning: 'conj<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  103 |       pole, zero, std::conj (pole), std::conj (zero));
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:970:5: note: resolves to this declaration
  970 |     conj(const complex<_Tp>& __z)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:107:3: warning: 'add' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  107 |   void add (const ComplexPair& poles, const ComplexPair& zeros)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:109:15: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
  109 |     assert (!(m_numPoles&1)); // single comes last
      |               ^
/usr/include/assert.h:103:27: note: expanded from macro 'assert'
  103 |      (static_cast <bool> (expr)                                         \
      |                           ^~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:112:5: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  112 |     m_pair[m_numPoles/2] = PoleZeroPair (poles.first, zeros.first,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:112:26: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  112 |     m_pair[m_numPoles/2] = PoleZeroPair (poles.first, zeros.first,
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:92:8: note: resolves to this declaration
   92 | struct PoleZeroPair
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:117:3: warning: 'getPair' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  117 |   const PoleZeroPair& getPair (int pairIndex) const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:117:3: warning: function 'getPair' should be marked [[nodiscard]] [modernize-use-nodiscard]
  117 |   const PoleZeroPair& getPair (int pairIndex) const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:117:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  117 |   const PoleZeroPair& getPair (int pairIndex) const
      |   ~~~~~~~~~~~~~~~~~~~ ^                            
      |   auto                                              -> const PoleZeroPair&
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:120:12: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  120 |     return m_pair[pairIndex];
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:123:3: warning: overloading 'operator[]' is disallowed [fuchsia-overloaded-operator]
  123 |   const PoleZeroPair& operator[] (int pairIndex) const
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:123:3: warning: 'operator[]' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  123 |   const PoleZeroPair& operator[] (int pairIndex) const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:123:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  123 |   const PoleZeroPair& operator[] (int pairIndex) const
      |   ~~~~~~~~~~~~~~~~~~~ ^                               
      |   auto                                                 -> const PoleZeroPair&
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:128:3: warning: 'getNormalW' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  128 |   double getNormalW () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:128:3: warning: function 'getNormalW' should be marked [[nodiscard]] [modernize-use-nodiscard]
  128 |   double getNormalW () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:128:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  128 |   double getNormalW () const
      |   ~~~~~~ ^                  
      |   auto                       -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:133:3: warning: 'getNormalGain' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  133 |   double getNormalGain () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:133:3: warning: function 'getNormalGain' should be marked [[nodiscard]] [modernize-use-nodiscard]
  133 |   double getNormalGain () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:133:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  133 |   double getNormalGain () const
      |   ~~~~~~ ^                     
      |   auto                          -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:138:3: warning: 'setNormal' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  138 |   void setNormal (double w, double g)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:138:19: warning: 2 adjacent parameters of 'setNormal' of similar type ('double') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  138 |   void setNormal (double w, double g)
      |                   ^~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:138:26: note: the first parameter in the range is 'w'
  138 |   void setNormal (double w, double g)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:138:36: note: the last parameter in the range is 'g'
  138 |   void setNormal (double w, double g)
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:138:26: warning: parameter name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  138 |   void setNormal (double w, double g)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:138:36: warning: parameter name 'g' is too short, expected at least 3 characters [readability-identifier-length]
  138 |   void setNormal (double w, double g)
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:159:3: warning: 'operator LayoutBase' must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
  159 |   operator LayoutBase ()
      |   ^
      |   explicit 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:159:3: warning: 'operator LayoutBase' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  159 |   operator LayoutBase ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:165:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  165 |   PoleZeroPair m_pairs[(MaxPoles+1)/2];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:168:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  168 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:42:11: note: namespace 'Dsp' starts here
   42 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_LEGENDRE_H
      |         ^~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_LEGENDRE_H
   37 | #define DSPFILTERS_LEGENDRE_H
      |         ~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_LEGENDRE_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:39:1: warning: #includes are not sorted properly [llvm-include-order]
   39 | #include "DspFilters/Common.h"
      | ^        ~~~~~~~~~~~~~~~~~~~~~
   40 | #include "DspFilters/Cascade.h"
      |          ~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:46:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
   46 | namespace Dsp {
      | ^~~~~~~~~~~~~~~
   47 | 
   48 | /*
   49 |  * Filters with Legendre / "Optimum-L" response characteristics
   50 |  *
   51 |  */
   52 | 
   53 | namespace Legendre {
      | ~~~~~~~~~~~~~~~~~~
      | namespace Dsp::Legendre
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:62:3: warning: 'coef' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   62 |   double* coef()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:62:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   62 |   double* coef()
      |   ~~~~~~~ ^     
      |   auto           -> double*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:68:26: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
   68 |   void legendre (double* p, int n);
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:71:7: warning: member variable 'm_maxN' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   71 |   int m_maxN;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:72:11: warning: member variable 'm_w' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   72 |   double* m_w;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:73:11: warning: member variable 'm_a' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   73 |   double* m_a;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:74:11: warning: member variable 'm_p' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   74 |   double* m_p;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:75:11: warning: member variable 'm_s' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   75 |   double* m_s;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:76:11: warning: member variable 'm_v' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   76 |   double* m_v;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:77:11: warning: member variable 'm_aa' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   77 |   double* m_aa;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:78:11: warning: member variable 'm_bb' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   78 |   double* m_bb;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:85:3: warning: constructor does not initialize these bases: PolynomialFinderBase [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
   85 |   PolynomialFinder ()
      |   ^                  
      |                       : PolynomialFinderBase()
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:85:3: warning: constructor does not initialize these fields: m_ws, m_as, m_ps, m_ss, m_vs, m_aas, m_bbs [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
   85 |   PolynomialFinder ()
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:85:3: warning: 'PolynomialFinder<maxN>' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   85 |   PolynomialFinder ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:87:5: warning: 'm_maxN' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer]
   85 |   PolynomialFinder ()
      |                      
      |                       : m_maxN(maxN)
   86 |   {
   87 |     m_maxN = maxN;
      |     ^~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:88:5: warning: 'm_w' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer]
   85 |   PolynomialFinder ()
      |                      
      |                      , m_w(m_ws)
   86 |   {
   87 |     m_maxN = maxN;
   88 |     m_w = m_ws;
      |     ^~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:89:5: warning: 'm_a' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer]
   85 |   PolynomialFinder ()
      |                      
      |                      , m_a(m_as)
   86 |   {
   87 |     m_maxN = maxN;
   88 |     m_w = m_ws;
   89 |     m_a = m_as;
      |     ^~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:90:5: warning: 'm_p' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer]
   85 |   PolynomialFinder ()
      |                      
      |                      , m_p(m_ps)
   86 |   {
   87 |     m_maxN = maxN;
   88 |     m_w = m_ws;
   89 |     m_a = m_as;
   90 |     m_p = m_ps;
      |     ^~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:91:5: warning: 'm_s' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer]
   85 |   PolynomialFinder ()
      |                      
      |                      , m_s(m_ss)
   86 |   {
   87 |     m_maxN = maxN;
   88 |     m_w = m_ws;
   89 |     m_a = m_as;
   90 |     m_p = m_ps;
   91 |     m_s = m_ss;
      |     ^~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:92:5: warning: 'm_v' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer]
   85 |   PolynomialFinder ()
      |                      
      |                      , m_v(m_vs)
   86 |   {
   87 |     m_maxN = maxN;
   88 |     m_w = m_ws;
   89 |     m_a = m_as;
   90 |     m_p = m_ps;
   91 |     m_s = m_ss;
   92 |     m_v = m_vs;
      |     ^~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:93:5: warning: 'm_aa' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer]
   85 |   PolynomialFinder ()
      |                      
      |                      , m_aa(m_aas)
   86 |   {
   87 |     m_maxN = maxN;
   88 |     m_w = m_ws;
   89 |     m_a = m_as;
   90 |     m_p = m_ps;
   91 |     m_s = m_ss;
   92 |     m_v = m_vs;
   93 |     m_aa = m_aas;
      |     ^~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:94:5: warning: 'm_bb' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer]
   85 |   PolynomialFinder ()
      |                      
      |                      , m_bb(m_bbs)
   86 |   {
   87 |     m_maxN = maxN;
   88 |     m_w = m_ws;
   89 |     m_a = m_as;
   90 |     m_p = m_ps;
   91 |     m_s = m_ss;
   92 |     m_v = m_vs;
   93 |     m_aa = m_aas;
   94 |     m_bb = m_bbs;
      |     ^~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:97:3: warning: 'solve' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   97 |   void solve (int n)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:104:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  104 |   double m_ws  [2 * maxN + 1];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:105:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  105 |   double m_as  [    maxN + 1];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:106:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  106 |   double m_ps  [2 * maxN + 1];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:107:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  107 |   double m_ss  [2 * maxN + 1];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:108:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  108 |   double m_vs  [2 * maxN + 4];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:109:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  109 |   double m_aas [    maxN + 1];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:110:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  110 |   double m_bbs [    maxN + 1];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:117:8: warning: accessing fields in struct 'WorkspaceBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 16 bytes [altera-struct-pack-align]
  117 | struct WorkspaceBase
      |        ^
  118 | {
  119 |   WorkspaceBase (PolynomialFinderBase* polyBase,
  120 |                  RootFinderBase* rootsBase)
  121 |                  : poly (*polyBase)
  122 |                  , roots (*rootsBase)
  123 |   {
  124 |   }
  125 | 
  126 |   PolynomialFinderBase& poly;
  127 |   RootFinderBase& roots;
  128 | 
  129 | private:
  130 |   WorkspaceBase (WorkspaceBase&);
  131 |   WorkspaceBase& operator= (WorkspaceBase&);
  132 | };
      |  
      |   __attribute__((aligned(16)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:117:8: note: use "__attribute__((aligned(16)))" to align struct 'WorkspaceBase' to 16 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:117:8: warning: class 'WorkspaceBase' defines a copy constructor and a copy assignment operator but does not define a destructor, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
  117 | struct WorkspaceBase
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:119:3: warning: 'WorkspaceBase' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  119 |   WorkspaceBase (PolynomialFinderBase* polyBase,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:126:25: warning: member 'poly' of type 'PolynomialFinderBase &' is a reference [cppcoreguidelines-avoid-const-or-ref-data-members]
  126 |   PolynomialFinderBase& poly;
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:126:25: warning: member variable 'poly' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:127:19: warning: member 'roots' of type 'RootFinderBase &' is a reference [cppcoreguidelines-avoid-const-or-ref-data-members]
  127 |   RootFinderBase& roots;
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:127:19: warning: member variable 'roots' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:130:3: warning: use '= delete' to prohibit calling of a special member function [hicpp-use-equals-delete,modernize-use-equals-delete]
  130 |   WorkspaceBase (WorkspaceBase&);
      |   ^                             
      |                                  = delete
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:131:18: warning: use '= delete' to prohibit calling of a special member function [hicpp-use-equals-delete,modernize-use-equals-delete]
  131 |   WorkspaceBase& operator= (WorkspaceBase&);
      |                  ^                         
      |                                             = delete
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:131:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  131 |   WorkspaceBase& operator= (WorkspaceBase&);
      |   ~~~~~~~~~~~~~~ ^                         
      |   auto                                      -> WorkspaceBase&
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:137:3: warning: 'Workspace<MaxOrder>' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  137 |   Workspace ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:144:3: error: no template named 'RootFinder'; did you mean 'RootFinderBase::RootFinder'? [clang-diagnostic-error]
  144 |   RootFinder <MaxOrder * 2> m_roots;
      |   ^~~~~~~~~~
      |   RootFinderBase::RootFinder
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:116:8: note: 'RootFinderBase::RootFinder' declared here
  116 | struct RootFinder : RootFinderBase
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:156:16: warning: parameter 'numPoles' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  156 |   void design (const int numPoles, WorkspaceBase* w);
      |                ^~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:156:51: warning: parameter name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  156 |   void design (const int numPoles, WorkspaceBase* w);
      |                                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:166:8: warning: accessing fields in struct 'LowPassBase' is inefficient due to padding; only needs 1 bytes but is using 88 bytes [altera-struct-pack-align]
  166 | struct LowPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  167 | {
  168 |   void setup (int order,
  169 |               double sampleRate,
  170 |               double cutoffFrequency,
  171 |               WorkspaceBase* w);
  172 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:166:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'LowPassBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:166:8: warning: accessing fields in struct 'LowPassBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  166 | struct LowPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  167 | {
  168 |   void setup (int order,
  169 |               double sampleRate,
  170 |               double cutoffFrequency,
  171 |               WorkspaceBase* w);
  172 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:166:8: note: use "__attribute__((aligned(1)))" to align struct 'LowPassBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:171:30: warning: parameter name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  171 |               WorkspaceBase* w);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:174:8: warning: accessing fields in struct 'HighPassBase' is inefficient due to padding; only needs 1 bytes but is using 88 bytes [altera-struct-pack-align]
  174 | struct HighPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  175 | {
  176 |   void setup (int order,
  177 |               double sampleRate,
  178 |               double cutoffFrequency,
  179 |               WorkspaceBase* w);
  180 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:174:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'HighPassBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:174:8: warning: accessing fields in struct 'HighPassBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  174 | struct HighPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  175 | {
  176 |   void setup (int order,
  177 |               double sampleRate,
  178 |               double cutoffFrequency,
  179 |               WorkspaceBase* w);
  180 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:174:8: note: use "__attribute__((aligned(1)))" to align struct 'HighPassBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:179:30: warning: parameter name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  179 |               WorkspaceBase* w);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:182:8: warning: accessing fields in struct 'BandPassBase' is inefficient due to padding; only needs 1 bytes but is using 88 bytes [altera-struct-pack-align]
  182 | struct BandPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  183 | {
  184 |   void setup (int order,
  185 |               double sampleRate,
  186 |               double centerFrequency,
  187 |               double widthFrequency,
  188 |               WorkspaceBase* w);
  189 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:182:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandPassBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:182:8: warning: accessing fields in struct 'BandPassBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  182 | struct BandPassBase : PoleFilterBase <AnalogLowPass>
      |        ^
  183 | {
  184 |   void setup (int order,
  185 |               double sampleRate,
  186 |               double centerFrequency,
  187 |               double widthFrequency,
  188 |               WorkspaceBase* w);
  189 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:182:8: note: use "__attribute__((aligned(1)))" to align struct 'BandPassBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:188:30: warning: parameter name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  188 |               WorkspaceBase* w);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:191:8: warning: accessing fields in struct 'BandStopBase' is inefficient due to padding; only needs 1 bytes but is using 88 bytes [altera-struct-pack-align]
  191 | struct BandStopBase : PoleFilterBase <AnalogLowPass>
      |        ^
  192 | {
  193 |   void setup (int order,
  194 |               double sampleRate,
  195 |               double centerFrequency,
  196 |               double widthFrequency,
  197 |               WorkspaceBase* w);
  198 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:191:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandStopBase'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:191:8: warning: accessing fields in struct 'BandStopBase' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  191 | struct BandStopBase : PoleFilterBase <AnalogLowPass>
      |        ^
  192 | {
  193 |   void setup (int order,
  194 |               double sampleRate,
  195 |               double centerFrequency,
  196 |               double widthFrequency,
  197 |               WorkspaceBase* w);
  198 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:191:8: note: use "__attribute__((aligned(1)))" to align struct 'BandStopBase' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:197:30: warning: parameter name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  197 |               WorkspaceBase* w);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:209:3: warning: 'setup' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  209 |   void setup (int order,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:213:26: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  213 |     Workspace <MaxOrder> w;
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:224:3: warning: 'setup' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  224 |   void setup (int order,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:228:26: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  228 |     Workspace <MaxOrder> w;
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:239:3: warning: 'setup' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  239 |   void setup (int order,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:244:26: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  244 |     Workspace <MaxOrder> w;
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:256:3: warning: 'setup' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  256 |   void setup (int order,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:261:26: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  261 |     Workspace <MaxOrder> w;
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:280:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:280:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  280 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:285:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  285 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:285:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  285 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:290:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  290 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:290:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  290 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:290:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  290 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:292:12: warning: 'defaultCutoffFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  292 |     return ParamInfo::defaultCutoffFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:213:20: note: resolves to this declaration
  213 |   static ParamInfo defaultCutoffFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:299:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  299 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:301:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  301 |     FilterClass::setup (int(params[1]), params[0], params[2]);
      |                         ^~~
      |                         static_cast<int>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:301:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  301 |     FilterClass::setup (int(params[1]), params[0], params[2]);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:301:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  301 |     FilterClass::setup (int(params[1]), params[0], params[2]);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:301:58: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  301 |     FilterClass::setup (int(params[1]), params[0], params[2]);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:307:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:307:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  307 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:312:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  312 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:312:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  312 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:317:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  317 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:317:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  317 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:317:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  317 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:319:12: warning: 'defaultCenterFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  319 |     return ParamInfo::defaultCenterFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:214:20: note: resolves to this declaration
  214 |   static ParamInfo defaultCenterFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:322:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  322 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:322:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  322 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:322:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  322 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:324:12: warning: 'defaultBandwidthHzParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  324 |     return ParamInfo::defaultBandwidthHzParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:217:20: note: resolves to this declaration
  217 |   static ParamInfo defaultBandwidthHzParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:331:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  331 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:333:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  333 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                         ^~~
      |                         static_cast<int>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:333:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  333 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:333:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  333 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:333:58: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  333 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:333:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  333 |     FilterClass::setup (int(params[1]), params[0], params[2], params[3]);
      |                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:341:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  341 |   static Kind getKind () { return kindLowPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:341:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  341 |   static Kind getKind () { return kindLowPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:342:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  342 |   static const char* getName() { return "Legendre Low Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:342:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  342 |   static const char* getName() { return "Legendre Low Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:347:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  347 |   static Kind getKind () { return kindHighPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:347:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  347 |   static Kind getKind () { return kindHighPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:348:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  348 |   static const char* getName() { return "Legendre High Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:348:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  348 |   static const char* getName() { return "Legendre High Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:353:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  353 |   static Kind getKind () { return kindHighPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:353:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  353 |   static Kind getKind () { return kindHighPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:354:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  354 |   static const char* getName() { return "Legendre Band Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:354:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  354 |   static const char* getName() { return "Legendre Band Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:359:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  359 |   static Kind getKind () { return kindHighPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:359:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  359 |   static Kind getKind () { return kindHighPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:360:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  360 |   static const char* getName() { return "Legendre Band Stop"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:360:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  360 |   static const char* getName() { return "Legendre Band Stop"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:369:3: warning: 'getParamInfo_1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  369 |   const ParamInfo getParamInfo_1 () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:369:3: warning: function 'getParamInfo_1' should be marked [[nodiscard]] [modernize-use-nodiscard]
  369 |   const ParamInfo getParamInfo_1 () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:369:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  369 |   const ParamInfo getParamInfo_1 () const
      |   ^~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:369:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  369 |   const ParamInfo getParamInfo_1 () const
      |   ~~~~~~~~~~~~~~~ ^                      
      |   auto                                    -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:373:25: warning: 'Int_toControlValue' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  373 |                        &ParamInfo::Int_toControlValue,
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:191:10: note: resolves to this declaration
  191 |   double Int_toControlValue (double nativeValue) const;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:374:25: warning: 'Int_toNativeValue' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  374 |                        &ParamInfo::Int_toNativeValue,
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:192:10: note: resolves to this declaration
  192 |   double Int_toNativeValue (double controlValue) const;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:375:25: warning: 'Int_toString' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  375 |                        &ParamInfo::Int_toString);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:203:15: note: resolves to this declaration
  203 |   std::string Int_toString (double nativeValue) const;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:410:1: warning: namespace 'Design' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  410 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:276:11: note: namespace 'Design' starts here
  276 | namespace Design {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:412:1: warning: namespace 'Legendre' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  412 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:53:11: note: namespace 'Legendre' starts here
   53 | namespace Legendre {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:414:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  414 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Legendre.h:46:11: note: namespace 'Dsp' starts here
   46 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_MATHSUPPLEMENT_H
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_MATHSUPPLEMENT_H
   37 | #define DSPFILTERS_MATHSUPPLEMENT_H
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_MATHSUPPLEMENT_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:48:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   48 | typedef std::complex<double> complex_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using complex_t = std::complex<double>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:49:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   49 | typedef std::pair<complex_t, complex_t> complex_pair_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using complex_pair_t = std::pair<complex_t, complex_t>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:52:1: warning: 'solve_quadratic_1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   52 | inline std::complex<Real> solve_quadratic_1 (Real a, Real b, Real c)
      | ^
      | LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:52:27: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   52 | inline std::complex<Real> solve_quadratic_1 (Real a, Real b, Real c)
      |        ~~~~~~~~~~~~~~~~~~ ^                                         
      |        auto                                                          -> std::complex<Real>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:52:51: warning: parameter name 'a' is too short, expected at least 3 characters [readability-identifier-length]
   52 | inline std::complex<Real> solve_quadratic_1 (Real a, Real b, Real c)
      |                                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:52:59: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
   52 | inline std::complex<Real> solve_quadratic_1 (Real a, Real b, Real c)
      |                                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:52:67: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   52 | inline std::complex<Real> solve_quadratic_1 (Real a, Real b, Real c)
      |                                                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:54:63: warning: 2. is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   54 |   return (-b + sqrt (std::complex<Real> (b*b - 4*a*c, 0))) / (2. * a);
      |                                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:58:1: warning: 'solve_quadratic_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   58 | inline std::complex<Real> solve_quadratic_2 (Real a, Real b, Real c)
      | ^
      | LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:58:27: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   58 | inline std::complex<Real> solve_quadratic_2 (Real a, Real b, Real c)
      |        ~~~~~~~~~~~~~~~~~~ ^                                         
      |        auto                                                          -> std::complex<Real>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:58:51: warning: parameter name 'a' is too short, expected at least 3 characters [readability-identifier-length]
   58 | inline std::complex<Real> solve_quadratic_2 (Real a, Real b, Real c)
      |                                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:58:59: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
   58 | inline std::complex<Real> solve_quadratic_2 (Real a, Real b, Real c)
      |                                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:58:67: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   58 | inline std::complex<Real> solve_quadratic_2 (Real a, Real b, Real c)
      |                                                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:60:63: warning: 2. is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   60 |   return (-b - sqrt (std::complex<Real> (b*b - 4*a*c, 0))) / (2. * a);
      |                                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:63:1: warning: 'infinity' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   63 | inline const complex_t infinity()
      | ^
      | LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:63:1: warning: return type 'const complex_t' (aka 'const complex<double>') is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
   63 | inline const complex_t infinity()
      | ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:63:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   63 | inline const complex_t infinity()
      |        ~~~~~~~~~~~~~~~ ^         
      |        auto                       -> const complex_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:65:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   65 |   return complex_t (std::numeric_limits<double>::infinity());
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:52: note: default parameter was declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:65:21: warning: 'infinity' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   65 |   return complex_t (std::numeric_limits<double>::infinity());
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/limits:1791:7: note: resolves to this declaration
 1791 |       infinity() _GLIBCXX_USE_NOEXCEPT { return __builtin_huge_val(); }
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:68:1: warning: 'adjust_imag' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   68 | inline const complex_t adjust_imag (const complex_t& c)
      | ^
      | LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:68:1: warning: return type 'const complex_t' (aka 'const complex<double>') is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
   68 | inline const complex_t adjust_imag (const complex_t& c)
      | ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:68:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   68 | inline const complex_t adjust_imag (const complex_t& c)
      |        ~~~~~~~~~~~~~~~ ^                               
      |        auto                                             -> const complex_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:68:54: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   68 | inline const complex_t adjust_imag (const complex_t& c)
      |                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:70:25: warning: 1e-30 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   70 |   if (fabs (c.imag()) < 1e-30)
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:70:31: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   70 |   if (fabs (c.imag()) < 1e-30)
      |                               ^
      |                                {
   71 |     return complex_t (c.real(), 0);
   72 |   else
      |   } 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:72:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
   72 |   else
      |   ^~~~
   73 |     return c;
      |     ~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:72:7: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   72 |   else
      |       ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:77:1: warning: 'addmul' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   77 | inline std::complex<Ty> addmul (const std::complex<Ty>& c,
      | ^
      | LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:77:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   77 | inline std::complex<Ty> addmul (const std::complex<Ty>& c,
      |        ~~~~~~~~~~~~~~~~ ^
      |        auto
   78 |                                 Ty v,
   79 |                                 const std::complex<To>& c1)
      |                                                            
      |                                                             -> std::complex<Ty>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:77:57: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   77 | inline std::complex<Ty> addmul (const std::complex<Ty>& c,
      |                                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:78:36: warning: parameter name 'v' is too short, expected at least 3 characters [readability-identifier-length]
   78 |                                 Ty v,
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:79:57: warning: parameter name 'c1' is too short, expected at least 3 characters [readability-identifier-length]
   79 |                                 const std::complex<To>& c1)
      |                                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:86:1: warning: 'recip' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   86 | inline std::complex<Ty> recip (const std::complex<Ty>& c)
      | ^
      | LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:86:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   86 | inline std::complex<Ty> recip (const std::complex<Ty>& c)
      |        ~~~~~~~~~~~~~~~~ ^                                
      |        auto                                               -> std::complex<Ty>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:86:56: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   86 | inline std::complex<Ty> recip (const std::complex<Ty>& c)
      |                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:88:6: warning: variable name 'n' is too short, expected at least 3 characters [readability-identifier-length]
   88 |   Ty n = 1.0 / std::norm (c);
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:94:1: warning: 'asinh' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   94 | inline Ty asinh (Ty x)
      | ^
      | LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:94:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   94 | inline Ty asinh (Ty x)
      |        ~~ ^           
      |        auto            -> Ty
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:94:21: warning: parameter name 'x' is too short, expected at least 3 characters [readability-identifier-length]
   94 | inline Ty asinh (Ty x)
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:100:1: warning: 'acosh' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  100 | inline Ty acosh (Ty x)
      | ^
      | LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:100:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  100 | inline Ty acosh (Ty x)
      |        ~~ ^           
      |        auto            -> Ty
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:100:21: warning: parameter name 'x' is too short, expected at least 3 characters [readability-identifier-length]
  100 | inline Ty acosh (Ty x)
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:106:1: warning: 'is_nan' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  106 | inline bool is_nan (Ty v)
      | ^
      | LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:106:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  106 | inline bool is_nan (Ty v)
      |        ~~~~ ^            
      |        auto               -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:106:24: warning: parameter name 'v' is too short, expected at least 3 characters [readability-identifier-length]
  106 | inline bool is_nan (Ty v)
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:108:14: warning: both sides of operator are equivalent [misc-redundant-expression]
  108 |   return !(v == v);
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:112:1: warning: 'is_nan<std::complex<double>>' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  112 | inline bool is_nan<complex_t> (complex_t v)
      | ^
      | LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:112:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  112 | inline bool is_nan<complex_t> (complex_t v)
      |        ~~~~ ^                              
      |        auto                                 -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:112:42: warning: parameter name 'v' is too short, expected at least 3 characters [readability-identifier-length]
  112 | inline bool is_nan<complex_t> (complex_t v)
      |                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:114:10: warning: 'is_nan<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  114 |   return Dsp::is_nan (v.real()) || Dsp::is_nan (v.imag());
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:106:13: note: resolves to this declaration
  106 | inline bool is_nan (Ty v)
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:114:36: warning: 'is_nan<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  114 |   return Dsp::is_nan (v.real()) || Dsp::is_nan (v.imag());
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:106:13: note: resolves to this declaration
  106 | inline bool is_nan (Ty v)
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:131:3: warning: 'DenormalPrevention' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  131 |   DenormalPrevention ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:137:3: warning: 'ac' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  137 |   inline double ac ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:137:3: warning: function 'ac' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  137 |   inline double ac ()
      |   ^~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:137:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  137 |   inline double ac ()
      |          ~~~~~~ ^    
      |          auto         -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:143:3: warning: 'dc' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  143 |   static inline double dc ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:143:10: warning: function 'dc' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  143 |   static inline double dc ()
      |          ^~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:143:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  143 |   static inline double dc ()
      |                 ~~~~~~ ^    
      |                 auto         -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:152:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  152 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:41:11: note: namespace 'Dsp' starts here
   41 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp:39:1: warning: #includes are not sorted properly [llvm-include-order]
   39 | #include <stdexcept>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp:39:1: warning: system include stdexcept not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp [llvmlibc-restrict-system-libc-headers]
   39 | #include <stdexcept>
      | ^~~~~~~~~~~~~~~~~~~~
   40 | #include <sstream>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp:40:1: warning: system include sstream not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp [llvmlibc-restrict-system-libc-headers]
   40 | #include <sstream>
      | ^~~~~~~~~~~~~~~~~~
   41 | #include <iostream>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp:41:1: warning: system include iostream not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp [llvmlibc-restrict-system-libc-headers]
   41 | #include <iostream>
      | ^~~~~~~~~~~~~~~~~~~
   42 | #include <iomanip>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp:42:1: warning: system include iomanip not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp [llvmlibc-restrict-system-libc-headers]
   42 | #include <iomanip>
      | ^~~~~~~~~~~~~~~~~~
   43 | 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp:91:10: warning: variable 'l0' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   91 |   double l0 = log (m_arg1) / log (base);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp:91:10: warning: variable name 'l0' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp:92:10: warning: variable 'l1' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   92 |   double l1 = log (m_arg2) / log (base);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp:92:10: warning: variable name 'l1' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp:99:10: warning: variable 'l0' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   99 |   double l0 = log (m_arg1) / log (base);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp:99:10: warning: variable name 'l0' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp:100:10: warning: variable 'l1' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  100 |   double l1 = log (m_arg2) / log (base);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp:100:10: warning: variable name 'l1' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp:120:22: warning: variable 'os' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  120 |   std::ostringstream os;
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp:120:22: warning: variable name 'os' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp:141:16: warning: variable name 'af' is too short, expected at least 3 characters [readability-identifier-length]
  141 |   const double af = fabs (nativeValue);
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp:142:7: warning: variable 'prec' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  142 |   int prec;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp:308:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  308 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Param.cpp:44:11: note: namespace 'Dsp' starts here
   44 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_PARAMS_H
      |         ^~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_PARAMS_H
   37 | #define DSPFILTERS_PARAMS_H
      |         ~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_PARAMS_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:55:6: warning: enum 'ParamID' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   55 | enum ParamID
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:78:1: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:78:1)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   78 | enum
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:83:8: warning: accessing fields in struct 'Params' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 64 bytes [altera-struct-pack-align]
   83 | struct Params
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:83:8: note: use "__attribute__((aligned(64)))" to align struct 'Params' to 64 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:85:3: warning: 'clear' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   85 |   void clear ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:87:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   87 |     for (int i = 0; i < maxParameters; ++i)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:87:5: warning: use range-based for loop instead [modernize-loop-convert]
   87 |     for (int i = 0; i < maxParameters; ++i)
      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         (double & i : value)
   88 |       value[i] = 0;
      |       ~~~~~~~~
      |       i
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:87:44: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   87 |     for (int i = 0; i < maxParameters; ++i)
      |                                            ^
      |                                             {
   88 |       value[i] = 0;
      |                    
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:88:7: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
   88 |       value[i] = 0;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:91:3: warning: overloading 'operator[]' is disallowed [fuchsia-overloaded-operator]
   91 |   double& operator[] (int index)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:91:3: warning: 'operator[]' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   91 |   double& operator[] (int index)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:91:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   91 |   double& operator[] (int index)
      |   ~~~~~~~ ^                     
      |   auto                           -> double&
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:93:12: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
   93 |     return value[index];
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:3: warning: overloading 'operator[]' is disallowed [fuchsia-overloaded-operator]
   96 |   const double& operator[] (int index) const
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:3: warning: 'operator[]' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   96 |   const double& operator[] (int index) const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   96 |   const double& operator[] (int index) const
      |   ~~~~~~~~~~~~~ ^                           
      |   auto                                       -> const double&
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:98:12: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
   98 |     return value[index];
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:101:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  101 |   double value[maxParameters];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:101:10: warning: member variable 'value' has public visibility [misc-non-private-member-variables-in-classes]
  101 |   double value[maxParameters];
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:111:3: warning: use 'using' instead of 'typedef' [modernize-use-using]
  111 |   typedef double (ParamInfo::*toControlValue_t) (double) const;
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |   using toControlValue_t = double (ParamInfo::*)(double) const
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:112:9: warning: use 'using' instead of 'typedef' [modernize-use-using]
  112 |   typedef double (ParamInfo::*toNativeValue_t) (double) const;
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:113:8: warning: use 'using' instead of 'typedef' [modernize-use-using]
  113 |   typedef std::string (ParamInfo::*toString_t) (double) const;
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:118:3: warning: 'ParamInfo' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  118 |   ParamInfo (ParamID id,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:118:22: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  118 |   ParamInfo (ParamID id,
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:119:15: warning: 2 adjacent parameters of 'ParamInfo' of similar type ('const char *') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  119 |               const char* szLabel,
      |               ^~~~~~~~~~~~~~~~~~~~
  120 |               const char* szName,
      |               ~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:119:27: note: the first parameter in the range is 'szLabel'
  119 |               const char* szLabel,
      |                           ^~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:120:27: note: the last parameter in the range is 'szName'
  120 |               const char* szName,
      |                           ^~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:122:15: warning: 2 adjacent parameters of 'ParamInfo' of similar type ('double') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  122 |               double arg2,
      |               ^~~~~~~~~~~~
  123 |               double defaultNativeValue,
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:122:22: note: the first parameter in the range is 'arg2'
  122 |               double arg2,
      |                      ^~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:123:22: note: the last parameter in the range is 'defaultNativeValue'
  123 |               double defaultNativeValue,
      |                      ^~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:124:15: warning: 2 adjacent parameters of 'ParamInfo' of similar type are easily swapped by mistake [bugprone-easily-swappable-parameters]
  124 |               toControlValue_t toControlValue_proc,
      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  125 |               toNativeValue_t toNativeValue_proc,
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:124:32: note: the first parameter in the range is 'toControlValue_proc'
  124 |               toControlValue_t toControlValue_proc,
      |                                ^~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:125:31: note: the last parameter in the range is 'toNativeValue_proc'
  125 |               toNativeValue_t toNativeValue_proc,
      |                               ^~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:124:15: note: after resolving type aliases, the common type of 'toControlValue_t' and 'toNativeValue_t' is 'double (Dsp::ParamInfo::*)(double) const'
  124 |               toControlValue_t toControlValue_proc,
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:140:3: warning: 'getId' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  140 |   ParamID getId () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:140:3: warning: function 'getId' should be marked [[nodiscard]] [modernize-use-nodiscard]
  140 |   ParamID getId () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:140:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  140 |   ParamID getId () const
      |   ~~~~~~~ ^             
      |   auto                   -> ParamID
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:146:3: warning: 'getLabel' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  146 |   const char* getLabel () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:146:3: warning: function 'getLabel' should be marked [[nodiscard]] [modernize-use-nodiscard]
  146 |   const char* getLabel () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:146:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  146 |   const char* getLabel () const
      |   ~~~~~~~~~~~ ^                
      |   auto                          -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:152:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  152 |   const char* getName () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:152:3: warning: function 'getName' should be marked [[nodiscard]] [modernize-use-nodiscard]
  152 |   const char* getName () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:152:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  152 |   const char* getName () const
      |   ~~~~~~~~~~~ ^               
      |   auto                         -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:157:3: warning: 'getDefaultValue' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  157 |   double getDefaultValue () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:157:3: warning: function 'getDefaultValue' should be marked [[nodiscard]] [modernize-use-nodiscard]
  157 |   double getDefaultValue () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:157:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  157 |   double getDefaultValue () const
      |   ~~~~~~ ^                       
      |   auto                            -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:165:3: warning: 'toControlValue' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  165 |   double toControlValue (double nativeValue) const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:165:3: warning: function 'toControlValue' should be marked [[nodiscard]] [modernize-use-nodiscard]
  165 |   double toControlValue (double nativeValue) const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:165:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  165 |   double toControlValue (double nativeValue) const
      |   ~~~~~~ ^                                        
      |   auto                                             -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:174:3: warning: 'toNativeValue' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  174 |   double toNativeValue (double controlValue) const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:174:3: warning: function 'toNativeValue' should be marked [[nodiscard]] [modernize-use-nodiscard]
  174 |   double toNativeValue (double controlValue) const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:174:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  174 |   double toNativeValue (double controlValue) const
      |   ~~~~~~ ^                                        
      |   auto                                             -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:179:3: warning: 'toString' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  179 |   std::string toString (double nativeValue) const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:179:3: warning: function 'toString' should be marked [[nodiscard]] [modernize-use-nodiscard]
  179 |   std::string toString (double nativeValue) const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:179:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  179 |   std::string toString (double nativeValue) const
      |   ~~~~~~~~~~~ ^                                  
      |   auto                                            -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:184:3: warning: function 'clamp' should be marked [[nodiscard]] [modernize-use-nodiscard]
  184 |   double clamp (double nativeValue) const;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:184:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  184 |   double clamp (double nativeValue) const;
      |   ~~~~~~ ^                               
      |   auto                                    -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:191:3: warning: function 'Int_toControlValue' should be marked [[nodiscard]] [modernize-use-nodiscard]
  191 |   double Int_toControlValue (double nativeValue) const;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:191:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  191 |   double Int_toControlValue (double nativeValue) const;
      |   ~~~~~~ ^                                            
      |   auto                                                 -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:192:3: warning: function 'Int_toNativeValue' should be marked [[nodiscard]] [modernize-use-nodiscard]
  192 |   double Int_toNativeValue (double controlValue) const;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:192:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  192 |   double Int_toNativeValue (double controlValue) const;
      |   ~~~~~~ ^                                            
      |   auto                                                 -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:194:3: warning: function 'Real_toControlValue' should be marked [[nodiscard]] [modernize-use-nodiscard]
  194 |   double Real_toControlValue (double nativeValue) const;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:194:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  194 |   double Real_toControlValue (double nativeValue) const;
      |   ~~~~~~ ^                                             
      |   auto                                                  -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:195:3: warning: function 'Real_toNativeValue' should be marked [[nodiscard]] [modernize-use-nodiscard]
  195 |   double Real_toNativeValue (double controlValue) const;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:195:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  195 |   double Real_toNativeValue (double controlValue) const;
      |   ~~~~~~ ^                                             
      |   auto                                                  -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:197:3: warning: function 'Log_toControlValue' should be marked [[nodiscard]] [modernize-use-nodiscard]
  197 |   double Log_toControlValue (double nativeValue) const;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:197:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  197 |   double Log_toControlValue (double nativeValue) const;
      |   ~~~~~~ ^                                            
      |   auto                                                 -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:198:3: warning: function 'Log_toNativeValue' should be marked [[nodiscard]] [modernize-use-nodiscard]
  198 |   double Log_toNativeValue (double controlValue) const;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:198:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  198 |   double Log_toNativeValue (double controlValue) const;
      |   ~~~~~~ ^                                            
      |   auto                                                 -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:200:3: warning: function 'Pow2_toControlValue' should be marked [[nodiscard]] [modernize-use-nodiscard]
  200 |   double Pow2_toControlValue (double nativeValue) const;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:200:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  200 |   double Pow2_toControlValue (double nativeValue) const;
      |   ~~~~~~ ^                                             
      |   auto                                                  -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:201:3: warning: function 'Pow2_toNativeValue' should be marked [[nodiscard]] [modernize-use-nodiscard]
  201 |   double Pow2_toNativeValue (double controlValue) const;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:201:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  201 |   double Pow2_toNativeValue (double controlValue) const;
      |   ~~~~~~ ^                                             
      |   auto                                                  -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:203:3: warning: function 'Int_toString' should be marked [[nodiscard]] [modernize-use-nodiscard]
  203 |   std::string Int_toString (double nativeValue) const;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:203:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  203 |   std::string Int_toString (double nativeValue) const;
      |   ~~~~~~~~~~~ ^                                      
      |   auto                                                -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:204:3: warning: function 'Hz_toString' should be marked [[nodiscard]] [modernize-use-nodiscard]
  204 |   std::string Hz_toString (double nativeValue) const;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:204:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  204 |   std::string Hz_toString (double nativeValue) const;
      |   ~~~~~~~~~~~ ^                                     
      |   auto                                               -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:205:3: warning: function 'Real_toString' should be marked [[nodiscard]] [modernize-use-nodiscard]
  205 |   std::string Real_toString (double nativeValue) const;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:205:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  205 |   std::string Real_toString (double nativeValue) const;
      |   ~~~~~~~~~~~ ^                                       
      |   auto                                                 -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:206:3: warning: function 'Db_toString' should be marked [[nodiscard]] [modernize-use-nodiscard]
  206 |   std::string Db_toString (double nativeValue) const;
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:206:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  206 |   std::string Db_toString (double nativeValue) const;
      |   ~~~~~~~~~~~ ^                                     
      |   auto                                               -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:212:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  212 |   static ParamInfo defaultSampleRateParam ();
      |          ~~~~~~~~~ ^                        
      |          auto                                -> ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:213:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  213 |   static ParamInfo defaultCutoffFrequencyParam ();
      |          ~~~~~~~~~ ^                             
      |          auto                                     -> ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:214:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  214 |   static ParamInfo defaultCenterFrequencyParam ();
      |          ~~~~~~~~~ ^                             
      |          auto                                     -> ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:215:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  215 |   static ParamInfo defaultQParam ();
      |          ~~~~~~~~~ ^               
      |          auto                       -> ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:216:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  216 |   static ParamInfo defaultBandwidthParam ();
      |          ~~~~~~~~~ ^                       
      |          auto                               -> ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:217:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  217 |   static ParamInfo defaultBandwidthHzParam ();
      |          ~~~~~~~~~ ^                         
      |          auto                                 -> ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:218:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  218 |   static ParamInfo defaultGainParam ();
      |          ~~~~~~~~~ ^                  
      |          auto                          -> ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:219:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  219 |   static ParamInfo defaultSlopeParam ();
      |          ~~~~~~~~~ ^                   
      |          auto                           -> ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:220:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  220 |   static ParamInfo defaultRippleDbParam ();
      |          ~~~~~~~~~ ^                      
      |          auto                              -> ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:221:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  221 |   static ParamInfo defaultStopDbParam ();
      |          ~~~~~~~~~ ^                    
      |          auto                            -> ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:222:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  222 |   static ParamInfo defaultRolloffParam ();
      |          ~~~~~~~~~ ^                     
      |          auto                             -> ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:223:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  223 |   static ParamInfo defaultPoleRhoParam ();
      |          ~~~~~~~~~ ^                     
      |          auto                             -> ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:224:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  224 |   static ParamInfo defaultPoleThetaParam ();
      |          ~~~~~~~~~ ^                       
      |          auto                               -> ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:225:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  225 |   static ParamInfo defaultZeroRhoParam ();
      |          ~~~~~~~~~ ^                     
      |          auto                             -> ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:226:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  226 |   static ParamInfo defaultZeroThetaParam ();
      |          ~~~~~~~~~ ^                       
      |          auto                               -> ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:227:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  227 |   static ParamInfo defaultPoleRealParam ();
      |          ~~~~~~~~~ ^                      
      |          auto                              -> ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:228:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  228 |   static ParamInfo defaultZeroRealParam ();
      |          ~~~~~~~~~ ^                      
      |          auto                              -> ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:242:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  242 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:42:11: note: namespace 'Dsp' starts here
   42 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_POLEFILTER_H
      |         ^~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_POLEFILTER_H
   37 | #define DSPFILTERS_POLEFILTER_H
      |         ~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_POLEFILTER_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:39:1: warning: #includes are not sorted properly [llvm-include-order]
   39 | #include "DspFilters/Common.h"
      | ^        ~~~~~~~~~~~~~~~~~~~~~
   40 | #include "DspFilters/MathSupplement.h"
      |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   41 | #include "DspFilters/Cascade.h"
      |          ~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:68:2: warning: preprocessor condition is always 'true', consider removing condition but leaving its contents [readability-avoid-unconditional-preprocessor-if]
   68 | #if 1
      |  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:72:3: warning: 'getPoleZeros' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   72 |   std::vector<PoleZeroPair> getPoleZeros () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:72:3: warning: function 'getPoleZeros' should be marked [[nodiscard]] [modernize-use-nodiscard]
   72 |   std::vector<PoleZeroPair> getPoleZeros () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:72:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   72 |   std::vector<PoleZeroPair> getPoleZeros () const
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~ ^                    
      |   auto                                            -> std::vector<PoleZeroPair>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:76:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   76 |     for (int i = 0; i < pairs; ++i)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:76:21: warning: backward branch (for loop) is ID-dependent due to variable reference to 'pairs' and may cause performance degradation [altera-id-dependent-backward-branch]
   76 |     for (int i = 0; i < pairs; ++i)
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:75:5: note: inferred assignment of ID-dependent value from ID-dependent 
   75 |     const int pairs = (m_digitalProto.getNumPoles () + 1) / 2;
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:76:36: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   76 |     for (int i = 0; i < pairs; ++i)
      |                                    ^
      |                                     {
   77 |       vpz.push_back (m_digitalProto[i]);
      |                                         
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:77:36: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   77 |       vpz.push_back (m_digitalProto[i]);
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Layout.h:123:23: note: resolves to this declaration
  123 |   const PoleZeroPair& operator[] (int pairIndex) const
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:83:14: warning: member variable 'm_digitalProto' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   83 |   LayoutBase m_digitalProto;
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:92:3: warning: 'setPrototypeStorage' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   92 |   void setPrototypeStorage (const LayoutBase& analogStorage,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:92:29: warning: 2 adjacent parameters of 'setPrototypeStorage' of similar type ('const LayoutBase &') are easily swapped by mistake [bugprone-easily-swappable-parameters]
   92 |   void setPrototypeStorage (const LayoutBase& analogStorage,
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   93 |                             const LayoutBase& digitalStorage)
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:92:47: note: the first parameter in the range is 'analogStorage'
   92 |   void setPrototypeStorage (const LayoutBase& analogStorage,
      |                                               ^~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:93:47: note: the last parameter in the range is 'digitalStorage'
   93 |                             const LayoutBase& digitalStorage)
      |                                               ^~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:99:1: warning: redundant access specifier has the same accessibility as the previous access specifier [readability-redundant-access-specifiers]
   99 | protected:
      | ^~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:91:1: note: previously declared here
   91 | protected:
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:100:19: warning: member variable 'm_analogProto' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  100 |   AnalogPrototype m_analogProto;
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:112:3: warning: 'PoleFilter<BaseClass, MaxAnalogPoles, MaxDigitalPoles>' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  112 |   PoleFilter ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:142:28: warning: parameter name 'fc' is too short, expected at least 3 characters [readability-identifier-length]
  142 |   LowPassTransform (double fc,
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:147:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  147 |   complex_t transform (complex_t c);
      |   ~~~~~~~~~ ^                      
      |   auto                              -> complex_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:147:34: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  147 |   complex_t transform (complex_t c);
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:158:29: warning: parameter name 'fc' is too short, expected at least 3 characters [readability-identifier-length]
  158 |   HighPassTransform (double fc,
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:163:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  163 |   complex_t transform (complex_t c);
      |   ~~~~~~~~~ ^                      
      |   auto                              -> complex_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:163:34: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  163 |   complex_t transform (complex_t c);
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:175:29: warning: parameter name 'fc' is too short, expected at least 3 characters [readability-identifier-length]
  175 |   BandPassTransform (double fc,
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:176:29: warning: parameter name 'fw' is too short, expected at least 3 characters [readability-identifier-length]
  176 |                      double fw,
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:181:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  181 |   ComplexPair transform (complex_t c);
      |   ~~~~~~~~~~~ ^                      
      |   auto                                -> ComplexPair
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:181:36: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  181 |   ComplexPair transform (complex_t c);
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:199:29: warning: parameter name 'fc' is too short, expected at least 3 characters [readability-identifier-length]
  199 |   BandStopTransform (double fc,
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:200:29: warning: parameter name 'fw' is too short, expected at least 3 characters [readability-identifier-length]
  200 |                      double fw,
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:205:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  205 |   ComplexPair transform (complex_t c);
      |   ~~~~~~~~~~~ ^                      
      |   auto                                -> ComplexPair
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:205:36: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  205 |   ComplexPair transform (complex_t c);
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:215:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  215 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/PoleFilter.h:43:11: note: namespace 'Dsp' starts here
   43 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:39:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
   39 | namespace Dsp {
      | ^~~~~~~~~~~~~~~
   40 | 
   41 | namespace RBJ {
      | ~~~~~~~~~~~~~
      | namespace Dsp::RBJ
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:44:22: warning: 2 adjacent parameters of 'setup' of similar type ('double') are easily swapped by mistake [bugprone-easily-swappable-parameters]
   44 |                      double cutoffFrequency,
      |                      ^~~~~~~~~~~~~~~~~~~~~~~
   45 |                      double q)
      |                      ~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:44:29: note: the first parameter in the range is 'cutoffFrequency'
   44 |                      double cutoffFrequency,
      |                             ^~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:45:29: note: the last parameter in the range is 'q'
   45 |                      double q)
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:45:29: warning: parameter name 'q' is too short, expected at least 3 characters [readability-identifier-length]
   45 |                      double q)
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:47:3: warning: variable 'w0' of type 'double' can be declared 'const' [misc-const-correctness]
   47 |   double w0 = 2 * doublePi * cutoffFrequency / sampleRate;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:47:10: warning: variable name 'w0' is too short, expected at least 3 characters [readability-identifier-length]
   47 |   double w0 = 2 * doublePi * cutoffFrequency / sampleRate;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:48:3: warning: variable 'cs' of type 'double' can be declared 'const' [misc-const-correctness]
   48 |   double cs = cos (w0);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:48:10: warning: variable name 'cs' is too short, expected at least 3 characters [readability-identifier-length]
   48 |   double cs = cos (w0);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:49:3: warning: variable 'sn' of type 'double' can be declared 'const' [misc-const-correctness]
   49 |   double sn = sin (w0);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:49:10: warning: variable name 'sn' is too short, expected at least 3 characters [readability-identifier-length]
   49 |   double sn = sin (w0);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:50:3: warning: variable 'AL' of type 'double' can be declared 'const' [misc-const-correctness]
   50 |   double AL = sn / (2 * q);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:50:10: warning: variable name 'AL' is too short, expected at least 3 characters [readability-identifier-length]
   50 |   double AL = sn / (2 * q);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:51:3: warning: variable 'b0' of type 'double' can be declared 'const' [misc-const-correctness]
   51 |   double b0 = (1 - cs) / 2;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:51:10: warning: variable name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
   51 |   double b0 = (1 - cs) / 2;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:52:3: warning: variable 'b1' of type 'double' can be declared 'const' [misc-const-correctness]
   52 |   double b1 =  1 - cs;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:52:10: warning: variable name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
   52 |   double b1 =  1 - cs;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:53:3: warning: variable 'b2' of type 'double' can be declared 'const' [misc-const-correctness]
   53 |   double b2 = (1 - cs) / 2;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:53:10: warning: variable name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
   53 |   double b2 = (1 - cs) / 2;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:54:3: warning: variable 'a0' of type 'double' can be declared 'const' [misc-const-correctness]
   54 |   double a0 =  1 + AL;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:54:10: warning: variable name 'a0' is too short, expected at least 3 characters [readability-identifier-length]
   54 |   double a0 =  1 + AL;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:55:3: warning: variable 'a1' of type 'double' can be declared 'const' [misc-const-correctness]
   55 |   double a1 = -2 * cs;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:55:10: warning: variable name 'a1' is too short, expected at least 3 characters [readability-identifier-length]
   55 |   double a1 = -2 * cs;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:56:3: warning: variable 'a2' of type 'double' can be declared 'const' [misc-const-correctness]
   56 |   double a2 =  1 - AL;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:56:10: warning: variable name 'a2' is too short, expected at least 3 characters [readability-identifier-length]
   56 |   double a2 =  1 - AL;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:61:23: warning: 2 adjacent parameters of 'setup' of similar type ('double') are easily swapped by mistake [bugprone-easily-swappable-parameters]
   61 |                       double cutoffFrequency,
      |                       ^~~~~~~~~~~~~~~~~~~~~~~
   62 |                       double q)
      |                       ~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:61:30: note: the first parameter in the range is 'cutoffFrequency'
   61 |                       double cutoffFrequency,
      |                              ^~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:62:30: note: the last parameter in the range is 'q'
   62 |                       double q)
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:62:30: warning: parameter name 'q' is too short, expected at least 3 characters [readability-identifier-length]
   62 |                       double q)
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:64:3: warning: variable 'w0' of type 'double' can be declared 'const' [misc-const-correctness]
   64 |   double w0 = 2 * doublePi * cutoffFrequency / sampleRate;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:64:10: warning: variable name 'w0' is too short, expected at least 3 characters [readability-identifier-length]
   64 |   double w0 = 2 * doublePi * cutoffFrequency / sampleRate;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:65:3: warning: variable 'cs' of type 'double' can be declared 'const' [misc-const-correctness]
   65 |   double cs = cos (w0);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:65:10: warning: variable name 'cs' is too short, expected at least 3 characters [readability-identifier-length]
   65 |   double cs = cos (w0);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:66:3: warning: variable 'sn' of type 'double' can be declared 'const' [misc-const-correctness]
   66 |   double sn = sin (w0);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:66:10: warning: variable name 'sn' is too short, expected at least 3 characters [readability-identifier-length]
   66 |   double sn = sin (w0);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:67:3: warning: variable 'AL' of type 'double' can be declared 'const' [misc-const-correctness]
   67 |   double AL = sn / ( 2 * q );
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:67:10: warning: variable name 'AL' is too short, expected at least 3 characters [readability-identifier-length]
   67 |   double AL = sn / ( 2 * q );
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:68:3: warning: variable 'b0' of type 'double' can be declared 'const' [misc-const-correctness]
   68 |   double b0 =  (1 + cs) / 2;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:68:10: warning: variable name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
   68 |   double b0 =  (1 + cs) / 2;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:69:3: warning: variable 'b1' of type 'double' can be declared 'const' [misc-const-correctness]
   69 |   double b1 = -(1 + cs);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:69:10: warning: variable name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
   69 |   double b1 = -(1 + cs);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:70:3: warning: variable 'b2' of type 'double' can be declared 'const' [misc-const-correctness]
   70 |   double b2 =  (1 + cs) / 2;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:70:10: warning: variable name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
   70 |   double b2 =  (1 + cs) / 2;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:71:3: warning: variable 'a0' of type 'double' can be declared 'const' [misc-const-correctness]
   71 |   double a0 =  1 + AL;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:71:10: warning: variable name 'a0' is too short, expected at least 3 characters [readability-identifier-length]
   71 |   double a0 =  1 + AL;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:72:3: warning: variable 'a1' of type 'double' can be declared 'const' [misc-const-correctness]
   72 |   double a1 = -2 * cs;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:72:10: warning: variable name 'a1' is too short, expected at least 3 characters [readability-identifier-length]
   72 |   double a1 = -2 * cs;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:73:3: warning: variable 'a2' of type 'double' can be declared 'const' [misc-const-correctness]
   73 |   double a2 =  1 - AL;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:73:10: warning: variable name 'a2' is too short, expected at least 3 characters [readability-identifier-length]
   73 |   double a2 =  1 - AL;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:78:24: warning: 2 adjacent parameters of 'setup' of similar type ('double') are easily swapped by mistake [bugprone-easily-swappable-parameters]
   78 |                        double centerFrequency,
      |                        ^~~~~~~~~~~~~~~~~~~~~~~
   79 |                        double bandWidth)
      |                        ~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:78:31: note: the first parameter in the range is 'centerFrequency'
   78 |                        double centerFrequency,
      |                               ^~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:79:31: note: the last parameter in the range is 'bandWidth'
   79 |                        double bandWidth)
      |                               ^~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:81:3: warning: variable 'w0' of type 'double' can be declared 'const' [misc-const-correctness]
   81 |   double w0 = 2 * doublePi * centerFrequency / sampleRate;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:81:10: warning: variable name 'w0' is too short, expected at least 3 characters [readability-identifier-length]
   81 |   double w0 = 2 * doublePi * centerFrequency / sampleRate;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:82:3: warning: variable 'cs' of type 'double' can be declared 'const' [misc-const-correctness]
   82 |   double cs = cos (w0);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:82:10: warning: variable name 'cs' is too short, expected at least 3 characters [readability-identifier-length]
   82 |   double cs = cos (w0);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:83:3: warning: variable 'sn' of type 'double' can be declared 'const' [misc-const-correctness]
   83 |   double sn = sin (w0);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:83:10: warning: variable name 'sn' is too short, expected at least 3 characters [readability-identifier-length]
   83 |   double sn = sin (w0);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:84:3: warning: variable 'AL' of type 'double' can be declared 'const' [misc-const-correctness]
   84 |   double AL = sn / ( 2 * bandWidth );
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:84:10: warning: variable name 'AL' is too short, expected at least 3 characters [readability-identifier-length]
   84 |   double AL = sn / ( 2 * bandWidth );
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:85:3: warning: variable 'b0' of type 'double' can be declared 'const' [misc-const-correctness]
   85 |   double b0 = bandWidth * AL;// sn / 2;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:85:10: warning: variable name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
   85 |   double b0 = bandWidth * AL;// sn / 2;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:86:3: warning: variable 'b1' of type 'double' can be declared 'const' [misc-const-correctness]
   86 |   double b1 =  0;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:86:10: warning: variable name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
   86 |   double b1 =  0;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:87:3: warning: variable 'b2' of type 'double' can be declared 'const' [misc-const-correctness]
   87 |   double b2 = -bandWidth * AL;//-sn / 2;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:87:10: warning: variable name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
   87 |   double b2 = -bandWidth * AL;//-sn / 2;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:88:3: warning: variable 'a0' of type 'double' can be declared 'const' [misc-const-correctness]
   88 |   double a0 =  1 + AL;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:88:10: warning: variable name 'a0' is too short, expected at least 3 characters [readability-identifier-length]
   88 |   double a0 =  1 + AL;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:89:3: warning: variable 'a1' of type 'double' can be declared 'const' [misc-const-correctness]
   89 |   double a1 = -2 * cs;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:89:10: warning: variable name 'a1' is too short, expected at least 3 characters [readability-identifier-length]
   89 |   double a1 = -2 * cs;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:90:3: warning: variable 'a2' of type 'double' can be declared 'const' [misc-const-correctness]
   90 |   double a2 =  1 - AL;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:90:10: warning: variable name 'a2' is too short, expected at least 3 characters [readability-identifier-length]
   90 |   double a2 =  1 - AL;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:95:24: warning: 2 adjacent parameters of 'setup' of similar type ('double') are easily swapped by mistake [bugprone-easily-swappable-parameters]
   95 |                        double centerFrequency,
      |                        ^~~~~~~~~~~~~~~~~~~~~~~
   96 |                        double bandWidth)
      |                        ~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:95:31: note: the first parameter in the range is 'centerFrequency'
   95 |                        double centerFrequency,
      |                               ^~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:96:31: note: the last parameter in the range is 'bandWidth'
   96 |                        double bandWidth)
      |                               ^~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:98:3: warning: variable 'w0' of type 'double' can be declared 'const' [misc-const-correctness]
   98 |   double w0 = 2 * doublePi * centerFrequency / sampleRate;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:98:10: warning: variable name 'w0' is too short, expected at least 3 characters [readability-identifier-length]
   98 |   double w0 = 2 * doublePi * centerFrequency / sampleRate;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:99:3: warning: variable 'cs' of type 'double' can be declared 'const' [misc-const-correctness]
   99 |   double cs = cos (w0);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:99:10: warning: variable name 'cs' is too short, expected at least 3 characters [readability-identifier-length]
   99 |   double cs = cos (w0);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:100:3: warning: variable 'sn' of type 'double' can be declared 'const' [misc-const-correctness]
  100 |   double sn = sin (w0);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:100:10: warning: variable name 'sn' is too short, expected at least 3 characters [readability-identifier-length]
  100 |   double sn = sin (w0);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:101:3: warning: variable 'AL' of type 'double' can be declared 'const' [misc-const-correctness]
  101 |   double AL = sn / ( 2 * bandWidth );
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:101:10: warning: variable name 'AL' is too short, expected at least 3 characters [readability-identifier-length]
  101 |   double AL = sn / ( 2 * bandWidth );
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:102:3: warning: variable 'b0' of type 'double' can be declared 'const' [misc-const-correctness]
  102 |   double b0 =  AL;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:102:10: warning: variable name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
  102 |   double b0 =  AL;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:103:3: warning: variable 'b1' of type 'double' can be declared 'const' [misc-const-correctness]
  103 |   double b1 =  0;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:103:10: warning: variable name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
  103 |   double b1 =  0;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:104:3: warning: variable 'b2' of type 'double' can be declared 'const' [misc-const-correctness]
  104 |   double b2 = -AL;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:104:10: warning: variable name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
  104 |   double b2 = -AL;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:105:3: warning: variable 'a0' of type 'double' can be declared 'const' [misc-const-correctness]
  105 |   double a0 =  1 + AL;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:105:10: warning: variable name 'a0' is too short, expected at least 3 characters [readability-identifier-length]
  105 |   double a0 =  1 + AL;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:106:3: warning: variable 'a1' of type 'double' can be declared 'const' [misc-const-correctness]
  106 |   double a1 = -2 * cs;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:106:10: warning: variable name 'a1' is too short, expected at least 3 characters [readability-identifier-length]
  106 |   double a1 = -2 * cs;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:107:3: warning: variable 'a2' of type 'double' can be declared 'const' [misc-const-correctness]
  107 |   double a2 =  1 - AL;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:107:10: warning: variable name 'a2' is too short, expected at least 3 characters [readability-identifier-length]
  107 |   double a2 =  1 - AL;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:112:23: warning: 2 adjacent parameters of 'setup' of similar type ('double') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  112 |                       double centerFrequency,
      |                       ^~~~~~~~~~~~~~~~~~~~~~~
  113 |                       double bandWidth)
      |                       ~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:112:30: note: the first parameter in the range is 'centerFrequency'
  112 |                       double centerFrequency,
      |                              ^~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:113:30: note: the last parameter in the range is 'bandWidth'
  113 |                       double bandWidth)
      |                              ^~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:115:3: warning: variable 'w0' of type 'double' can be declared 'const' [misc-const-correctness]
  115 |   double w0 = 2 * doublePi * centerFrequency / sampleRate;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:115:10: warning: variable name 'w0' is too short, expected at least 3 characters [readability-identifier-length]
  115 |   double w0 = 2 * doublePi * centerFrequency / sampleRate;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:116:3: warning: variable 'cs' of type 'double' can be declared 'const' [misc-const-correctness]
  116 |   double cs = cos (w0);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:116:10: warning: variable name 'cs' is too short, expected at least 3 characters [readability-identifier-length]
  116 |   double cs = cos (w0);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:117:3: warning: variable 'sn' of type 'double' can be declared 'const' [misc-const-correctness]
  117 |   double sn = sin (w0);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:117:10: warning: variable name 'sn' is too short, expected at least 3 characters [readability-identifier-length]
  117 |   double sn = sin (w0);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:118:3: warning: variable 'AL' of type 'double' can be declared 'const' [misc-const-correctness]
  118 |   double AL = sn / ( 2 * bandWidth );
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:118:10: warning: variable name 'AL' is too short, expected at least 3 characters [readability-identifier-length]
  118 |   double AL = sn / ( 2 * bandWidth );
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:119:3: warning: variable 'b0' of type 'double' can be declared 'const' [misc-const-correctness]
  119 |   double b0 =  1;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:119:10: warning: variable name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
  119 |   double b0 =  1;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:120:3: warning: variable 'b1' of type 'double' can be declared 'const' [misc-const-correctness]
  120 |   double b1 = -2 * cs;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:120:10: warning: variable name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
  120 |   double b1 = -2 * cs;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:121:3: warning: variable 'b2' of type 'double' can be declared 'const' [misc-const-correctness]
  121 |   double b2 =  1;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:121:10: warning: variable name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
  121 |   double b2 =  1;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:122:3: warning: variable 'a0' of type 'double' can be declared 'const' [misc-const-correctness]
  122 |   double a0 =  1 + AL;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:122:10: warning: variable name 'a0' is too short, expected at least 3 characters [readability-identifier-length]
  122 |   double a0 =  1 + AL;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:123:3: warning: variable 'a1' of type 'double' can be declared 'const' [misc-const-correctness]
  123 |   double a1 = -2 * cs;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:123:10: warning: variable name 'a1' is too short, expected at least 3 characters [readability-identifier-length]
  123 |   double a1 = -2 * cs;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:124:3: warning: variable 'a2' of type 'double' can be declared 'const' [misc-const-correctness]
  124 |   double a2 =  1 - AL;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:124:10: warning: variable name 'a2' is too short, expected at least 3 characters [readability-identifier-length]
  124 |   double a2 =  1 - AL;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:129:23: warning: 3 adjacent parameters of 'setup' of similar type ('double') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  129 |                       double cutoffFrequency,
      |                       ^~~~~~~~~~~~~~~~~~~~~~~
  130 |                       double gainDb,
      |                       ~~~~~~~~~~~~~~
  131 |                       double shelfSlope)
      |                       ~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:129:30: note: the first parameter in the range is 'cutoffFrequency'
  129 |                       double cutoffFrequency,
      |                              ^~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:131:30: note: the last parameter in the range is 'shelfSlope'
  131 |                       double shelfSlope)
      |                              ^~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:133:3: warning: variable 'A' of type 'double' can be declared 'const' [misc-const-correctness]
  133 |   double A  = pow (10, gainDb/40);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:133:10: warning: variable name 'A' is too short, expected at least 3 characters [readability-identifier-length]
  133 |   double A  = pow (10, gainDb/40);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:133:20: warning: 10 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  133 |   double A  = pow (10, gainDb/40);
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:133:31: warning: 40 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  133 |   double A  = pow (10, gainDb/40);
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:134:3: warning: variable 'w0' of type 'double' can be declared 'const' [misc-const-correctness]
  134 |   double w0 = 2 * doublePi * cutoffFrequency / sampleRate;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:134:10: warning: variable name 'w0' is too short, expected at least 3 characters [readability-identifier-length]
  134 |   double w0 = 2 * doublePi * cutoffFrequency / sampleRate;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:135:3: warning: variable 'cs' of type 'double' can be declared 'const' [misc-const-correctness]
  135 |   double cs = cos (w0);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:135:10: warning: variable name 'cs' is too short, expected at least 3 characters [readability-identifier-length]
  135 |   double cs = cos (w0);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:136:3: warning: variable 'sn' of type 'double' can be declared 'const' [misc-const-correctness]
  136 |   double sn = sin (w0);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:136:10: warning: variable name 'sn' is too short, expected at least 3 characters [readability-identifier-length]
  136 |   double sn = sin (w0);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:137:3: warning: variable 'AL' of type 'double' can be declared 'const' [misc-const-correctness]
  137 |   double AL = sn / 2 * ::std::sqrt ((A + 1/A) * (1/shelfSlope - 1) + 2);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:137:10: warning: variable name 'AL' is too short, expected at least 3 characters [readability-identifier-length]
  137 |   double AL = sn / 2 * ::std::sqrt ((A + 1/A) * (1/shelfSlope - 1) + 2);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:138:3: warning: variable 'sq' of type 'double' can be declared 'const' [misc-const-correctness]
  138 |   double sq = 2 * sqrt(A) * AL;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:138:10: warning: variable name 'sq' is too short, expected at least 3 characters [readability-identifier-length]
  138 |   double sq = 2 * sqrt(A) * AL;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:139:3: warning: variable 'b0' of type 'double' can be declared 'const' [misc-const-correctness]
  139 |   double b0 =    A*( (A+1) - (A-1)*cs + sq );
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:139:10: warning: variable name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
  139 |   double b0 =    A*( (A+1) - (A-1)*cs + sq );
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:140:3: warning: variable 'b1' of type 'double' can be declared 'const' [misc-const-correctness]
  140 |   double b1 =  2*A*( (A-1) - (A+1)*cs );
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:140:10: warning: variable name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
  140 |   double b1 =  2*A*( (A-1) - (A+1)*cs );
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:141:3: warning: variable 'b2' of type 'double' can be declared 'const' [misc-const-correctness]
  141 |   double b2 =    A*( (A+1) - (A-1)*cs - sq );
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:141:10: warning: variable name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
  141 |   double b2 =    A*( (A+1) - (A-1)*cs - sq );
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:142:3: warning: variable 'a0' of type 'double' can be declared 'const' [misc-const-correctness]
  142 |   double a0 =        (A+1) + (A-1)*cs + sq;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:142:10: warning: variable name 'a0' is too short, expected at least 3 characters [readability-identifier-length]
  142 |   double a0 =        (A+1) + (A-1)*cs + sq;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:143:3: warning: variable 'a1' of type 'double' can be declared 'const' [misc-const-correctness]
  143 |   double a1 =   -2*( (A-1) + (A+1)*cs );
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:143:10: warning: variable name 'a1' is too short, expected at least 3 characters [readability-identifier-length]
  143 |   double a1 =   -2*( (A-1) + (A+1)*cs );
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:144:3: warning: variable 'a2' of type 'double' can be declared 'const' [misc-const-correctness]
  144 |   double a2 =        (A+1) + (A-1)*cs - sq;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:144:10: warning: variable name 'a2' is too short, expected at least 3 characters [readability-identifier-length]
  144 |   double a2 =        (A+1) + (A-1)*cs - sq;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:149:24: warning: 3 adjacent parameters of 'setup' of similar type ('double') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  149 |                        double cutoffFrequency,
      |                        ^~~~~~~~~~~~~~~~~~~~~~~
  150 |                        double gainDb,
      |                        ~~~~~~~~~~~~~~
  151 |                        double shelfSlope)
      |                        ~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:149:31: note: the first parameter in the range is 'cutoffFrequency'
  149 |                        double cutoffFrequency,
      |                               ^~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:151:31: note: the last parameter in the range is 'shelfSlope'
  151 |                        double shelfSlope)
      |                               ^~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:153:3: warning: variable 'A' of type 'double' can be declared 'const' [misc-const-correctness]
  153 |   double A  = pow (10, gainDb/40);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:153:10: warning: variable name 'A' is too short, expected at least 3 characters [readability-identifier-length]
  153 |   double A  = pow (10, gainDb/40);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:153:20: warning: 10 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  153 |   double A  = pow (10, gainDb/40);
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:153:31: warning: 40 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  153 |   double A  = pow (10, gainDb/40);
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:154:3: warning: variable 'w0' of type 'double' can be declared 'const' [misc-const-correctness]
  154 |   double w0 = 2 * doublePi * cutoffFrequency / sampleRate;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:154:10: warning: variable name 'w0' is too short, expected at least 3 characters [readability-identifier-length]
  154 |   double w0 = 2 * doublePi * cutoffFrequency / sampleRate;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:155:3: warning: variable 'cs' of type 'double' can be declared 'const' [misc-const-correctness]
  155 |   double cs = cos (w0);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:155:10: warning: variable name 'cs' is too short, expected at least 3 characters [readability-identifier-length]
  155 |   double cs = cos (w0);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:156:3: warning: variable 'sn' of type 'double' can be declared 'const' [misc-const-correctness]
  156 |   double sn = sin (w0);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:156:10: warning: variable name 'sn' is too short, expected at least 3 characters [readability-identifier-length]
  156 |   double sn = sin (w0);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:157:3: warning: variable 'AL' of type 'double' can be declared 'const' [misc-const-correctness]
  157 |   double AL = sn / 2 * ::std::sqrt ((A + 1/A) * (1/shelfSlope - 1) + 2);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:157:10: warning: variable name 'AL' is too short, expected at least 3 characters [readability-identifier-length]
  157 |   double AL = sn / 2 * ::std::sqrt ((A + 1/A) * (1/shelfSlope - 1) + 2);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:158:3: warning: variable 'sq' of type 'double' can be declared 'const' [misc-const-correctness]
  158 |   double sq = 2 * sqrt(A) * AL;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:158:10: warning: variable name 'sq' is too short, expected at least 3 characters [readability-identifier-length]
  158 |   double sq = 2 * sqrt(A) * AL;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:159:3: warning: variable 'b0' of type 'double' can be declared 'const' [misc-const-correctness]
  159 |   double b0 =    A*( (A+1) + (A-1)*cs + sq );
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:159:10: warning: variable name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
  159 |   double b0 =    A*( (A+1) + (A-1)*cs + sq );
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:160:3: warning: variable 'b1' of type 'double' can be declared 'const' [misc-const-correctness]
  160 |   double b1 = -2*A*( (A-1) + (A+1)*cs );
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:160:10: warning: variable name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
  160 |   double b1 = -2*A*( (A-1) + (A+1)*cs );
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:161:3: warning: variable 'b2' of type 'double' can be declared 'const' [misc-const-correctness]
  161 |   double b2 =    A*( (A+1) + (A-1)*cs - sq );
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:161:10: warning: variable name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
  161 |   double b2 =    A*( (A+1) + (A-1)*cs - sq );
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:162:3: warning: variable 'a0' of type 'double' can be declared 'const' [misc-const-correctness]
  162 |   double a0 =        (A+1) - (A-1)*cs + sq;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:162:10: warning: variable name 'a0' is too short, expected at least 3 characters [readability-identifier-length]
  162 |   double a0 =        (A+1) - (A-1)*cs + sq;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:163:3: warning: variable 'a1' of type 'double' can be declared 'const' [misc-const-correctness]
  163 |   double a1 =    2*( (A-1) - (A+1)*cs );
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:163:10: warning: variable name 'a1' is too short, expected at least 3 characters [readability-identifier-length]
  163 |   double a1 =    2*( (A-1) - (A+1)*cs );
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:164:3: warning: variable 'a2' of type 'double' can be declared 'const' [misc-const-correctness]
  164 |   double a2 =        (A+1) - (A-1)*cs - sq;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:164:10: warning: variable name 'a2' is too short, expected at least 3 characters [readability-identifier-length]
  164 |   double a2 =        (A+1) - (A-1)*cs - sq;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:169:24: warning: 3 adjacent parameters of 'setup' of similar type ('double') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  169 |                        double centerFrequency,
      |                        ^~~~~~~~~~~~~~~~~~~~~~~
  170 |                        double gainDb,
      |                        ~~~~~~~~~~~~~~
  171 |                        double bandWidth)
      |                        ~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:169:31: note: the first parameter in the range is 'centerFrequency'
  169 |                        double centerFrequency,
      |                               ^~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:171:31: note: the last parameter in the range is 'bandWidth'
  171 |                        double bandWidth)
      |                               ^~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:173:3: warning: variable 'A' of type 'double' can be declared 'const' [misc-const-correctness]
  173 |   double A  = pow (10, gainDb/40);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:173:10: warning: variable name 'A' is too short, expected at least 3 characters [readability-identifier-length]
  173 |   double A  = pow (10, gainDb/40);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:173:20: warning: 10 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  173 |   double A  = pow (10, gainDb/40);
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:173:31: warning: 40 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  173 |   double A  = pow (10, gainDb/40);
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:174:3: warning: variable 'w0' of type 'double' can be declared 'const' [misc-const-correctness]
  174 |   double w0 = 2 * doublePi * centerFrequency / sampleRate;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:174:10: warning: variable name 'w0' is too short, expected at least 3 characters [readability-identifier-length]
  174 |   double w0 = 2 * doublePi * centerFrequency / sampleRate;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:175:3: warning: variable 'cs' of type 'double' can be declared 'const' [misc-const-correctness]
  175 |   double cs = cos(w0);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:175:10: warning: variable name 'cs' is too short, expected at least 3 characters [readability-identifier-length]
  175 |   double cs = cos(w0);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:176:3: warning: variable 'sn' of type 'double' can be declared 'const' [misc-const-correctness]
  176 |   double sn = sin(w0);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:176:10: warning: variable name 'sn' is too short, expected at least 3 characters [readability-identifier-length]
  176 |   double sn = sin(w0);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:177:3: warning: variable 'AL' of type 'double' can be declared 'const' [misc-const-correctness]
  177 |   double AL = sn * sinh( doubleLn2/2 * bandWidth * w0/sn );
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:177:10: warning: variable name 'AL' is too short, expected at least 3 characters [readability-identifier-length]
  177 |   double AL = sn * sinh( doubleLn2/2 * bandWidth * w0/sn );
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:179:3: warning: variable 'b0' of type 'double' can be declared 'const' [misc-const-correctness]
  179 |   double b0 =  1 + AL * A;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:179:10: warning: variable name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
  179 |   double b0 =  1 + AL * A;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:180:3: warning: variable 'b1' of type 'double' can be declared 'const' [misc-const-correctness]
  180 |   double b1 = -2 * cs;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:180:10: warning: variable name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
  180 |   double b1 = -2 * cs;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:181:3: warning: variable 'b2' of type 'double' can be declared 'const' [misc-const-correctness]
  181 |   double b2 =  1 - AL * A;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:181:10: warning: variable name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
  181 |   double b2 =  1 - AL * A;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:182:3: warning: variable 'a0' of type 'double' can be declared 'const' [misc-const-correctness]
  182 |   double a0 =  1 + AL / A;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:182:10: warning: variable name 'a0' is too short, expected at least 3 characters [readability-identifier-length]
  182 |   double a0 =  1 + AL / A;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:183:3: warning: variable 'a1' of type 'double' can be declared 'const' [misc-const-correctness]
  183 |   double a1 = -2 * cs;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:183:10: warning: variable name 'a1' is too short, expected at least 3 characters [readability-identifier-length]
  183 |   double a1 = -2 * cs;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:184:3: warning: variable 'a2' of type 'double' can be declared 'const' [misc-const-correctness]
  184 |   double a2 =  1 - AL / A;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:184:10: warning: variable name 'a2' is too short, expected at least 3 characters [readability-identifier-length]
  184 |   double a2 =  1 - AL / A;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:189:22: warning: 2 adjacent parameters of 'setup' of similar type ('double') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  189 |                      double phaseFrequency,
      |                      ^~~~~~~~~~~~~~~~~~~~~~
  190 |                      double q)
      |                      ~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:189:29: note: the first parameter in the range is 'phaseFrequency'
  189 |                      double phaseFrequency,
      |                             ^~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:190:29: note: the last parameter in the range is 'q'
  190 |                      double q)
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:190:29: warning: parameter name 'q' is too short, expected at least 3 characters [readability-identifier-length]
  190 |                      double q)
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:192:3: warning: variable 'w0' of type 'double' can be declared 'const' [misc-const-correctness]
  192 |   double w0 = 2 * doublePi * phaseFrequency / sampleRate;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:192:10: warning: variable name 'w0' is too short, expected at least 3 characters [readability-identifier-length]
  192 |   double w0 = 2 * doublePi * phaseFrequency / sampleRate;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:193:3: warning: variable 'cs' of type 'double' can be declared 'const' [misc-const-correctness]
  193 |   double cs = cos (w0);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:193:10: warning: variable name 'cs' is too short, expected at least 3 characters [readability-identifier-length]
  193 |   double cs = cos (w0);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:194:3: warning: variable 'sn' of type 'double' can be declared 'const' [misc-const-correctness]
  194 |   double sn = sin (w0);
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:194:10: warning: variable name 'sn' is too short, expected at least 3 characters [readability-identifier-length]
  194 |   double sn = sin (w0);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:195:3: warning: variable 'AL' of type 'double' can be declared 'const' [misc-const-correctness]
  195 |   double AL = sn / ( 2 * q );
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:195:10: warning: variable name 'AL' is too short, expected at least 3 characters [readability-identifier-length]
  195 |   double AL = sn / ( 2 * q );
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:196:3: warning: variable 'b0' of type 'double' can be declared 'const' [misc-const-correctness]
  196 |   double b0 =  1 - AL;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:196:10: warning: variable name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
  196 |   double b0 =  1 - AL;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:197:3: warning: variable 'b1' of type 'double' can be declared 'const' [misc-const-correctness]
  197 |   double b1 = -2 * cs;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:197:10: warning: variable name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
  197 |   double b1 = -2 * cs;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:198:3: warning: variable 'b2' of type 'double' can be declared 'const' [misc-const-correctness]
  198 |   double b2 =  1 + AL;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:198:10: warning: variable name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
  198 |   double b2 =  1 + AL;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:199:3: warning: variable 'a0' of type 'double' can be declared 'const' [misc-const-correctness]
  199 |   double a0 =  1 + AL;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:199:10: warning: variable name 'a0' is too short, expected at least 3 characters [readability-identifier-length]
  199 |   double a0 =  1 + AL;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:200:3: warning: variable 'a1' of type 'double' can be declared 'const' [misc-const-correctness]
  200 |   double a1 = -2 * cs;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:200:10: warning: variable name 'a1' is too short, expected at least 3 characters [readability-identifier-length]
  200 |   double a1 = -2 * cs;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:201:3: warning: variable 'a2' of type 'double' can be declared 'const' [misc-const-correctness]
  201 |   double a2 =  1 - AL;
      |   ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:201:10: warning: variable name 'a2' is too short, expected at least 3 characters [readability-identifier-length]
  201 |   double a2 =  1 - AL;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:205:1: warning: namespace 'RBJ' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  205 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:41:11: note: namespace 'RBJ' starts here
   41 | namespace RBJ {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:207:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  207 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.cpp:39:11: note: namespace 'Dsp' starts here
   39 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_RBJ_H
      |         ^~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_RBJ_H
   37 | #define DSPFILTERS_RBJ_H
      |         ~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_RBJ_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:39:1: warning: #includes are not sorted properly [llvm-include-order]
   39 | #include "DspFilters/Common.h"
      | ^        ~~~~~~~~~~~~~~~~~~~~~
   40 | #include "DspFilters/Biquad.h"
      |          ~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:44:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
   44 | namespace Dsp {
      | ^~~~~~~~~~~~~~~
   45 | 
   46 | /*
   47 |  * Filter realizations based on Robert Bristol-Johnson formulae:
   48 |  *
   49 |  * http://www.musicdsp.org/files/Audio-EQ-Cookbook.txt
   50 |  *
   51 |  */
   52 | 
   53 | namespace RBJ {
      | ~~~~~~~~~~~~~
      | namespace Dsp::RBJ
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:59:8: warning: accessing fields in struct 'LowPass' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
   59 | struct LowPass : BiquadBase
      |        ^
   60 | {
   61 |   void setup (double sampleRate,
   62 |               double cutoffFrequency,
   63 |               double q);
   64 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:59:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'LowPass'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:59:8: warning: accessing fields in struct 'LowPass' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
   59 | struct LowPass : BiquadBase
      |        ^
   60 | {
   61 |   void setup (double sampleRate,
   62 |               double cutoffFrequency,
   63 |               double q);
   64 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:59:8: note: use "__attribute__((aligned(1)))" to align struct 'LowPass' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:63:22: warning: parameter name 'q' is too short, expected at least 3 characters [readability-identifier-length]
   63 |               double q);
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:66:8: warning: accessing fields in struct 'HighPass' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
   66 | struct HighPass : BiquadBase
      |        ^
   67 | {
   68 |   void setup (double sampleRate,
   69 |               double cutoffFrequency,
   70 |               double q);
   71 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:66:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'HighPass'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:66:8: warning: accessing fields in struct 'HighPass' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
   66 | struct HighPass : BiquadBase
      |        ^
   67 | {
   68 |   void setup (double sampleRate,
   69 |               double cutoffFrequency,
   70 |               double q);
   71 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:66:8: note: use "__attribute__((aligned(1)))" to align struct 'HighPass' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:70:22: warning: parameter name 'q' is too short, expected at least 3 characters [readability-identifier-length]
   70 |               double q);
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:73:8: warning: accessing fields in struct 'BandPass1' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
   73 | struct BandPass1 : BiquadBase
      |        ^
   74 | {
   75 |   // (constant skirt gain, peak gain = Q)
   76 |   void setup (double sampleRate,
   77 |               double centerFrequency,
   78 |               double bandWidth);
   79 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:73:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandPass1'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:73:8: warning: accessing fields in struct 'BandPass1' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
   73 | struct BandPass1 : BiquadBase
      |        ^
   74 | {
   75 |   // (constant skirt gain, peak gain = Q)
   76 |   void setup (double sampleRate,
   77 |               double centerFrequency,
   78 |               double bandWidth);
   79 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:73:8: note: use "__attribute__((aligned(1)))" to align struct 'BandPass1' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:81:8: warning: accessing fields in struct 'BandPass2' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
   81 | struct BandPass2 : BiquadBase
      |        ^
   82 | {
   83 |   // (constant 0 dB peak gain)
   84 |   void setup (double sampleRate,
   85 |               double centerFrequency,
   86 |               double bandWidth);
   87 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:81:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandPass2'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:81:8: warning: accessing fields in struct 'BandPass2' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
   81 | struct BandPass2 : BiquadBase
      |        ^
   82 | {
   83 |   // (constant 0 dB peak gain)
   84 |   void setup (double sampleRate,
   85 |               double centerFrequency,
   86 |               double bandWidth);
   87 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:81:8: note: use "__attribute__((aligned(1)))" to align struct 'BandPass2' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:89:8: warning: accessing fields in struct 'BandStop' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
   89 | struct BandStop : BiquadBase
      |        ^
   90 | {
   91 |   void setup (double sampleRate,
   92 |               double centerFrequency,
   93 |               double bandWidth);
   94 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:89:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandStop'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:89:8: warning: accessing fields in struct 'BandStop' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
   89 | struct BandStop : BiquadBase
      |        ^
   90 | {
   91 |   void setup (double sampleRate,
   92 |               double centerFrequency,
   93 |               double bandWidth);
   94 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:89:8: note: use "__attribute__((aligned(1)))" to align struct 'BandStop' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:96:8: warning: accessing fields in struct 'LowShelf' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
   96 | struct LowShelf : BiquadBase
      |        ^
   97 | {
   98 |   void setup (double sampleRate,
   99 |               double cutoffFrequency,
  100 |               double gainDb,
  101 |               double shelfSlope);
  102 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:96:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'LowShelf'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:96:8: warning: accessing fields in struct 'LowShelf' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
   96 | struct LowShelf : BiquadBase
      |        ^
   97 | {
   98 |   void setup (double sampleRate,
   99 |               double cutoffFrequency,
  100 |               double gainDb,
  101 |               double shelfSlope);
  102 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:96:8: note: use "__attribute__((aligned(1)))" to align struct 'LowShelf' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:104:8: warning: accessing fields in struct 'HighShelf' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  104 | struct HighShelf : BiquadBase
      |        ^
  105 | {
  106 |   void setup (double sampleRate,
  107 |               double cutoffFrequency,
  108 |               double gainDb,
  109 |               double shelfSlope);
  110 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:104:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'HighShelf'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:104:8: warning: accessing fields in struct 'HighShelf' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  104 | struct HighShelf : BiquadBase
      |        ^
  105 | {
  106 |   void setup (double sampleRate,
  107 |               double cutoffFrequency,
  108 |               double gainDb,
  109 |               double shelfSlope);
  110 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:104:8: note: use "__attribute__((aligned(1)))" to align struct 'HighShelf' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:112:8: warning: accessing fields in struct 'BandShelf' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  112 | struct BandShelf : BiquadBase
      |        ^
  113 | {
  114 |   void setup (double sampleRate,
  115 |               double centerFrequency,
  116 |               double gainDb,
  117 |               double bandWidth);
  118 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:112:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandShelf'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:112:8: warning: accessing fields in struct 'BandShelf' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  112 | struct BandShelf : BiquadBase
      |        ^
  113 | {
  114 |   void setup (double sampleRate,
  115 |               double centerFrequency,
  116 |               double gainDb,
  117 |               double bandWidth);
  118 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:112:8: note: use "__attribute__((aligned(1)))" to align struct 'BandShelf' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:120:8: warning: accessing fields in struct 'AllPass' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  120 | struct AllPass : BiquadBase
      |        ^
  121 | {
  122 |   void setup (double sampleRate,
  123 |               double phaseFrequency,
  124 |               double q);
  125 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:120:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'AllPass'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:120:8: warning: accessing fields in struct 'AllPass' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  120 | struct AllPass : BiquadBase
      |        ^
  121 | {
  122 |   void setup (double sampleRate,
  123 |               double phaseFrequency,
  124 |               double q);
  125 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:120:8: note: use "__attribute__((aligned(1)))" to align struct 'AllPass' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:124:22: warning: parameter name 'q' is too short, expected at least 3 characters [readability-identifier-length]
  124 |               double q);
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:137:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:137:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  137 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:142:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  142 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:142:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  142 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:147:3: warning: 'getParamInfo_1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  147 |   static const ParamInfo getParamInfo_1 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:147:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  147 |   static const ParamInfo getParamInfo_1 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:147:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  147 |   static const ParamInfo getParamInfo_1 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:149:12: warning: 'defaultCutoffFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  149 |     return ParamInfo::defaultCutoffFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:213:20: note: resolves to this declaration
  213 |   static ParamInfo defaultCutoffFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:152:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  152 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:152:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  152 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:152:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  152 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:154:12: warning: 'defaultQParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  154 |     return ParamInfo::defaultQParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:215:20: note: resolves to this declaration
  215 |   static ParamInfo defaultQParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:159:8: warning: accessing fields in struct 'TypeI<Dsp::Dsp::RBJ::AllPass>' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  159 | struct TypeI : TypeIBase, FilterClass
      |        ^
  160 | {
  161 |   void setParams (const Params& params)
  162 |   {
  163 |     FilterClass::setup (params[0], params[1], params[2]);
  164 |   }
  165 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:159:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'TypeI<Dsp::Dsp::RBJ::AllPass>'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:159:8: warning: accessing fields in struct 'TypeI<Dsp::Dsp::RBJ::AllPass>' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  159 | struct TypeI : TypeIBase, FilterClass
      |        ^
  160 | {
  161 |   void setParams (const Params& params)
  162 |   {
  163 |     FilterClass::setup (params[0], params[1], params[2]);
  164 |   }
  165 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:159:8: note: use "__attribute__((aligned(1)))" to align struct 'TypeI<Dsp::Dsp::RBJ::AllPass>' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:159:8: warning: accessing fields in struct 'TypeI<Dsp::Dsp::RBJ::HighPass>' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  159 | struct TypeI : TypeIBase, FilterClass
      |        ^
  160 | {
  161 |   void setParams (const Params& params)
  162 |   {
  163 |     FilterClass::setup (params[0], params[1], params[2]);
  164 |   }
  165 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:159:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'TypeI<Dsp::Dsp::RBJ::HighPass>'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:159:8: warning: accessing fields in struct 'TypeI<Dsp::Dsp::RBJ::HighPass>' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  159 | struct TypeI : TypeIBase, FilterClass
      |        ^
  160 | {
  161 |   void setParams (const Params& params)
  162 |   {
  163 |     FilterClass::setup (params[0], params[1], params[2]);
  164 |   }
  165 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:159:8: note: use "__attribute__((aligned(1)))" to align struct 'TypeI<Dsp::Dsp::RBJ::HighPass>' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:159:8: warning: accessing fields in struct 'TypeI<Dsp::Dsp::RBJ::LowPass>' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  159 | struct TypeI : TypeIBase, FilterClass
      |        ^
  160 | {
  161 |   void setParams (const Params& params)
  162 |   {
  163 |     FilterClass::setup (params[0], params[1], params[2]);
  164 |   }
  165 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:159:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'TypeI<Dsp::Dsp::RBJ::LowPass>'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:159:8: warning: accessing fields in struct 'TypeI<Dsp::Dsp::RBJ::LowPass>' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  159 | struct TypeI : TypeIBase, FilterClass
      |        ^
  160 | {
  161 |   void setParams (const Params& params)
  162 |   {
  163 |     FilterClass::setup (params[0], params[1], params[2]);
  164 |   }
  165 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:159:8: note: use "__attribute__((aligned(1)))" to align struct 'TypeI<Dsp::Dsp::RBJ::LowPass>' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:161:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  161 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:163:31: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  163 |     FilterClass::setup (params[0], params[1], params[2]);
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:163:42: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  163 |     FilterClass::setup (params[0], params[1], params[2]);
      |                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:163:53: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  163 |     FilterClass::setup (params[0], params[1], params[2]);
      |                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:169:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:169:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  169 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:174:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  174 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:174:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  174 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:179:3: warning: 'getParamInfo_1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  179 |   static const ParamInfo getParamInfo_1 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:179:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  179 |   static const ParamInfo getParamInfo_1 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:179:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  179 |   static const ParamInfo getParamInfo_1 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:181:12: warning: 'defaultCenterFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  181 |     return ParamInfo::defaultCenterFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:214:20: note: resolves to this declaration
  214 |   static ParamInfo defaultCenterFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:184:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  184 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:184:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  184 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:184:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  184 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:186:12: warning: 'defaultBandwidthParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  186 |     return ParamInfo::defaultBandwidthParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:216:20: note: resolves to this declaration
  216 |   static ParamInfo defaultBandwidthParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:191:8: warning: accessing fields in struct 'TypeII<Dsp::Dsp::RBJ::BandPass1>' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  191 | struct TypeII : TypeIIBase, FilterClass
      |        ^
  192 | {
  193 |   void setParams (const Params& params)
  194 |   {
  195 |     FilterClass::setup (params[0], params[1], params[2]);
  196 |   }
  197 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:191:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'TypeII<Dsp::Dsp::RBJ::BandPass1>'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:191:8: warning: accessing fields in struct 'TypeII<Dsp::Dsp::RBJ::BandPass1>' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  191 | struct TypeII : TypeIIBase, FilterClass
      |        ^
  192 | {
  193 |   void setParams (const Params& params)
  194 |   {
  195 |     FilterClass::setup (params[0], params[1], params[2]);
  196 |   }
  197 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:191:8: note: use "__attribute__((aligned(1)))" to align struct 'TypeII<Dsp::Dsp::RBJ::BandPass1>' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:191:8: warning: accessing fields in struct 'TypeII<Dsp::Dsp::RBJ::BandPass2>' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  191 | struct TypeII : TypeIIBase, FilterClass
      |        ^
  192 | {
  193 |   void setParams (const Params& params)
  194 |   {
  195 |     FilterClass::setup (params[0], params[1], params[2]);
  196 |   }
  197 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:191:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'TypeII<Dsp::Dsp::RBJ::BandPass2>'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:191:8: warning: accessing fields in struct 'TypeII<Dsp::Dsp::RBJ::BandPass2>' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  191 | struct TypeII : TypeIIBase, FilterClass
      |        ^
  192 | {
  193 |   void setParams (const Params& params)
  194 |   {
  195 |     FilterClass::setup (params[0], params[1], params[2]);
  196 |   }
  197 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:191:8: note: use "__attribute__((aligned(1)))" to align struct 'TypeII<Dsp::Dsp::RBJ::BandPass2>' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:191:8: warning: accessing fields in struct 'TypeII<Dsp::Dsp::RBJ::BandStop>' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  191 | struct TypeII : TypeIIBase, FilterClass
      |        ^
  192 | {
  193 |   void setParams (const Params& params)
  194 |   {
  195 |     FilterClass::setup (params[0], params[1], params[2]);
  196 |   }
  197 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:191:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'TypeII<Dsp::Dsp::RBJ::BandStop>'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:191:8: warning: accessing fields in struct 'TypeII<Dsp::Dsp::RBJ::BandStop>' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  191 | struct TypeII : TypeIIBase, FilterClass
      |        ^
  192 | {
  193 |   void setParams (const Params& params)
  194 |   {
  195 |     FilterClass::setup (params[0], params[1], params[2]);
  196 |   }
  197 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:191:8: note: use "__attribute__((aligned(1)))" to align struct 'TypeII<Dsp::Dsp::RBJ::BandStop>' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:193:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  193 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:195:31: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  195 |     FilterClass::setup (params[0], params[1], params[2]);
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:195:42: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  195 |     FilterClass::setup (params[0], params[1], params[2]);
      |                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:195:53: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  195 |     FilterClass::setup (params[0], params[1], params[2]);
      |                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:201:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:201:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  201 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:206:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  206 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:206:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  206 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:211:3: warning: 'getParamInfo_1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  211 |   static const ParamInfo getParamInfo_1 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:211:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  211 |   static const ParamInfo getParamInfo_1 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:211:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  211 |   static const ParamInfo getParamInfo_1 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:213:12: warning: 'defaultCutoffFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  213 |     return ParamInfo::defaultCutoffFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:213:20: note: resolves to this declaration
  213 |   static ParamInfo defaultCutoffFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:216:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  216 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:216:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  216 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:216:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  216 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:218:12: warning: 'defaultGainParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  218 |     return ParamInfo::defaultGainParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:218:20: note: resolves to this declaration
  218 |   static ParamInfo defaultGainParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:221:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  221 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:221:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  221 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:221:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  221 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:223:12: warning: 'defaultSlopeParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  223 |     return ParamInfo::defaultSlopeParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:219:20: note: resolves to this declaration
  219 |   static ParamInfo defaultSlopeParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:228:8: warning: accessing fields in struct 'TypeIII<Dsp::Dsp::RBJ::HighShelf>' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  228 | struct TypeIII : TypeIIIBase, FilterClass
      |        ^
  229 | {
  230 |   void setParams (const Params& params)
  231 |   {
  232 |     FilterClass::setup (params[0], params[1], params[2], params[3]);
  233 |   }
  234 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:228:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'TypeIII<Dsp::Dsp::RBJ::HighShelf>'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:228:8: warning: accessing fields in struct 'TypeIII<Dsp::Dsp::RBJ::HighShelf>' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  228 | struct TypeIII : TypeIIIBase, FilterClass
      |        ^
  229 | {
  230 |   void setParams (const Params& params)
  231 |   {
  232 |     FilterClass::setup (params[0], params[1], params[2], params[3]);
  233 |   }
  234 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:228:8: note: use "__attribute__((aligned(1)))" to align struct 'TypeIII<Dsp::Dsp::RBJ::HighShelf>' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:228:8: warning: accessing fields in struct 'TypeIII<Dsp::Dsp::RBJ::LowShelf>' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  228 | struct TypeIII : TypeIIIBase, FilterClass
      |        ^
  229 | {
  230 |   void setParams (const Params& params)
  231 |   {
  232 |     FilterClass::setup (params[0], params[1], params[2], params[3]);
  233 |   }
  234 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:228:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'TypeIII<Dsp::Dsp::RBJ::LowShelf>'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:228:8: warning: accessing fields in struct 'TypeIII<Dsp::Dsp::RBJ::LowShelf>' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  228 | struct TypeIII : TypeIIIBase, FilterClass
      |        ^
  229 | {
  230 |   void setParams (const Params& params)
  231 |   {
  232 |     FilterClass::setup (params[0], params[1], params[2], params[3]);
  233 |   }
  234 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:228:8: note: use "__attribute__((aligned(1)))" to align struct 'TypeIII<Dsp::Dsp::RBJ::LowShelf>' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:230:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  230 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:232:31: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  232 |     FilterClass::setup (params[0], params[1], params[2], params[3]);
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:232:42: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  232 |     FilterClass::setup (params[0], params[1], params[2], params[3]);
      |                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:232:53: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  232 |     FilterClass::setup (params[0], params[1], params[2], params[3]);
      |                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:232:64: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  232 |     FilterClass::setup (params[0], params[1], params[2], params[3]);
      |                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:238:3: warning: enum '(unnamed enum at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:238:3)' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  238 |   enum
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:243:3: warning: 'getNumParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  243 |   static int getNumParams ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:243:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  243 |   static int getNumParams ()
      |          ~~~ ^              
      |          auto                -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:248:3: warning: 'getParamInfo_1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  248 |   static const ParamInfo getParamInfo_1 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:248:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  248 |   static const ParamInfo getParamInfo_1 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:248:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  248 |   static const ParamInfo getParamInfo_1 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:250:12: warning: 'defaultCenterFrequencyParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  250 |     return ParamInfo::defaultCenterFrequencyParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:214:20: note: resolves to this declaration
  214 |   static ParamInfo defaultCenterFrequencyParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:253:3: warning: 'getParamInfo_2' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  253 |   static const ParamInfo getParamInfo_2 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:253:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  253 |   static const ParamInfo getParamInfo_2 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:253:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  253 |   static const ParamInfo getParamInfo_2 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:255:12: warning: 'defaultGainParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  255 |     return ParamInfo::defaultGainParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:218:20: note: resolves to this declaration
  218 |   static ParamInfo defaultGainParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:258:3: warning: 'getParamInfo_3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  258 |   static const ParamInfo getParamInfo_3 ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:258:3: warning: return type 'const ParamInfo' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  258 |   static const ParamInfo getParamInfo_3 ()
      |   ^      ~~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:258:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  258 |   static const ParamInfo getParamInfo_3 ()
      |          ~~~~~~~~~~~~~~~ ^                
      |          auto                              -> const ParamInfo
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:260:12: warning: 'defaultBandwidthParam' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  260 |     return ParamInfo::defaultBandwidthParam ();
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:216:20: note: resolves to this declaration
  216 |   static ParamInfo defaultBandwidthParam ();
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:265:8: warning: accessing fields in struct 'TypeIV<Dsp::Dsp::RBJ::BandShelf>' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  265 | struct TypeIV : TypeIVBase , FilterClass
      |        ^
  266 | {
  267 |   void setParams (const Params& params)
  268 |   {
  269 |     FilterClass::setup (params[0], params[1], params[2], params[3]);
  270 |   }
  271 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:265:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'TypeIV<Dsp::Dsp::RBJ::BandShelf>'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:265:8: warning: accessing fields in struct 'TypeIV<Dsp::Dsp::RBJ::BandShelf>' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  265 | struct TypeIV : TypeIVBase , FilterClass
      |        ^
  266 | {
  267 |   void setParams (const Params& params)
  268 |   {
  269 |     FilterClass::setup (params[0], params[1], params[2], params[3]);
  270 |   }
  271 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:265:8: note: use "__attribute__((aligned(1)))" to align struct 'TypeIV<Dsp::Dsp::RBJ::BandShelf>' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:267:3: warning: 'setParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  267 |   void setParams (const Params& params)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:269:31: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  269 |     FilterClass::setup (params[0], params[1], params[2], params[3]);
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:269:42: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  269 |     FilterClass::setup (params[0], params[1], params[2], params[3]);
      |                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:269:53: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  269 |     FilterClass::setup (params[0], params[1], params[2], params[3]);
      |                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:269:64: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  269 |     FilterClass::setup (params[0], params[1], params[2], params[3]);
      |                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:96:17: note: resolves to this declaration
   96 |   const double& operator[] (int index) const
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:275:8: warning: accessing fields in struct 'LowPass' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  275 | struct LowPass : TypeI <RBJ::LowPass>
      |        ^
  276 | {
  277 |   static Kind getKind () { return kindLowPass; }
  278 |   static const char* getName() { return "RBJ Low Pass"; }
  279 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:275:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'LowPass'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:275:8: warning: accessing fields in struct 'LowPass' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  275 | struct LowPass : TypeI <RBJ::LowPass>
      |        ^
  276 | {
  277 |   static Kind getKind () { return kindLowPass; }
  278 |   static const char* getName() { return "RBJ Low Pass"; }
  279 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:275:8: note: use "__attribute__((aligned(1)))" to align struct 'LowPass' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:277:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  277 |   static Kind getKind () { return kindLowPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:277:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  277 |   static Kind getKind () { return kindLowPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:278:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  278 |   static const char* getName() { return "RBJ Low Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:278:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  278 |   static const char* getName() { return "RBJ Low Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:281:8: warning: accessing fields in struct 'HighPass' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  281 | struct HighPass : TypeI <RBJ::HighPass>
      |        ^
  282 | {
  283 |   static Kind getKind () { return kindHighPass; }
  284 |   static const char* getName() { return "RBJ High Pass"; }
  285 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:281:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'HighPass'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:281:8: warning: accessing fields in struct 'HighPass' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  281 | struct HighPass : TypeI <RBJ::HighPass>
      |        ^
  282 | {
  283 |   static Kind getKind () { return kindHighPass; }
  284 |   static const char* getName() { return "RBJ High Pass"; }
  285 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:281:8: note: use "__attribute__((aligned(1)))" to align struct 'HighPass' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:283:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  283 |   static Kind getKind () { return kindHighPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:283:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  283 |   static Kind getKind () { return kindHighPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:284:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  284 |   static const char* getName() { return "RBJ High Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:284:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  284 |   static const char* getName() { return "RBJ High Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:287:8: warning: accessing fields in struct 'BandPass1' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  287 | struct BandPass1 : TypeII <RBJ::BandPass1>
      |        ^
  288 | {
  289 |   static Kind getKind () { return kindBandPass; }
  290 |   static const char* getName() { return "RBJ Band Pass 1"; }
  291 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:287:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandPass1'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:287:8: warning: accessing fields in struct 'BandPass1' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  287 | struct BandPass1 : TypeII <RBJ::BandPass1>
      |        ^
  288 | {
  289 |   static Kind getKind () { return kindBandPass; }
  290 |   static const char* getName() { return "RBJ Band Pass 1"; }
  291 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:287:8: note: use "__attribute__((aligned(1)))" to align struct 'BandPass1' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:289:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  289 |   static Kind getKind () { return kindBandPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:289:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  289 |   static Kind getKind () { return kindBandPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:290:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  290 |   static const char* getName() { return "RBJ Band Pass 1"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:290:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  290 |   static const char* getName() { return "RBJ Band Pass 1"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:293:8: warning: accessing fields in struct 'BandPass2' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  293 | struct BandPass2 : TypeII <RBJ::BandPass2>
      |        ^
  294 | {
  295 |   static Kind getKind () { return kindBandPass; }
  296 |   static const char* getName() { return "RBJ Band Pass 2"; }
  297 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:293:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandPass2'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:293:8: warning: accessing fields in struct 'BandPass2' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  293 | struct BandPass2 : TypeII <RBJ::BandPass2>
      |        ^
  294 | {
  295 |   static Kind getKind () { return kindBandPass; }
  296 |   static const char* getName() { return "RBJ Band Pass 2"; }
  297 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:293:8: note: use "__attribute__((aligned(1)))" to align struct 'BandPass2' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:295:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  295 |   static Kind getKind () { return kindBandPass; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:295:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  295 |   static Kind getKind () { return kindBandPass; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:296:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  296 |   static const char* getName() { return "RBJ Band Pass 2"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:296:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  296 |   static const char* getName() { return "RBJ Band Pass 2"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:299:8: warning: accessing fields in struct 'BandStop' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  299 | struct BandStop : TypeII <RBJ::BandStop>
      |        ^
  300 | {
  301 |   static Kind getKind () { return kindBandStop; }
  302 |   static const char* getName() { return "RBJ Band Stop"; }
  303 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:299:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandStop'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:299:8: warning: accessing fields in struct 'BandStop' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  299 | struct BandStop : TypeII <RBJ::BandStop>
      |        ^
  300 | {
  301 |   static Kind getKind () { return kindBandStop; }
  302 |   static const char* getName() { return "RBJ Band Stop"; }
  303 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:299:8: note: use "__attribute__((aligned(1)))" to align struct 'BandStop' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:301:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  301 |   static Kind getKind () { return kindBandStop; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:301:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  301 |   static Kind getKind () { return kindBandStop; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:302:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  302 |   static const char* getName() { return "RBJ Band Stop"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:302:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  302 |   static const char* getName() { return "RBJ Band Stop"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:305:8: warning: accessing fields in struct 'LowShelf' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  305 | struct LowShelf : TypeIII <RBJ::LowShelf>
      |        ^
  306 | {
  307 |   static Kind getKind () { return kindLowShelf; }
  308 |   static const char* getName() { return "RBJ Low Shelf"; }
  309 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:305:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'LowShelf'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:305:8: warning: accessing fields in struct 'LowShelf' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  305 | struct LowShelf : TypeIII <RBJ::LowShelf>
      |        ^
  306 | {
  307 |   static Kind getKind () { return kindLowShelf; }
  308 |   static const char* getName() { return "RBJ Low Shelf"; }
  309 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:305:8: note: use "__attribute__((aligned(1)))" to align struct 'LowShelf' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:307:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  307 |   static Kind getKind () { return kindLowShelf; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:307:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  307 |   static Kind getKind () { return kindLowShelf; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:308:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  308 |   static const char* getName() { return "RBJ Low Shelf"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:308:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  308 |   static const char* getName() { return "RBJ Low Shelf"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:311:8: warning: accessing fields in struct 'HighShelf' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  311 | struct HighShelf : TypeIII <RBJ::HighShelf>
      |        ^
  312 | {
  313 |   static Kind getKind () { return kindHighShelf; }
  314 |   static const char* getName() { return "RBJ High Shelf"; }
  315 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:311:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'HighShelf'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:311:8: warning: accessing fields in struct 'HighShelf' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  311 | struct HighShelf : TypeIII <RBJ::HighShelf>
      |        ^
  312 | {
  313 |   static Kind getKind () { return kindHighShelf; }
  314 |   static const char* getName() { return "RBJ High Shelf"; }
  315 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:311:8: note: use "__attribute__((aligned(1)))" to align struct 'HighShelf' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:313:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  313 |   static Kind getKind () { return kindHighShelf; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:313:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  313 |   static Kind getKind () { return kindHighShelf; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:314:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  314 |   static const char* getName() { return "RBJ High Shelf"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:314:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  314 |   static const char* getName() { return "RBJ High Shelf"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:317:8: warning: accessing fields in struct 'BandShelf' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  317 | struct BandShelf : TypeIV <RBJ::BandShelf>
      |        ^
  318 | {
  319 |   static Kind getKind () { return kindBandShelf; }
  320 |   static const char* getName() { return "RBJ Band Shelf"; }
  321 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:317:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'BandShelf'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:317:8: warning: accessing fields in struct 'BandShelf' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  317 | struct BandShelf : TypeIV <RBJ::BandShelf>
      |        ^
  318 | {
  319 |   static Kind getKind () { return kindBandShelf; }
  320 |   static const char* getName() { return "RBJ Band Shelf"; }
  321 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:317:8: note: use "__attribute__((aligned(1)))" to align struct 'BandShelf' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:319:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  319 |   static Kind getKind () { return kindBandShelf; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:319:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  319 |   static Kind getKind () { return kindBandShelf; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:320:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  320 |   static const char* getName() { return "RBJ Band Shelf"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:320:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  320 |   static const char* getName() { return "RBJ Band Shelf"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:323:8: warning: accessing fields in struct 'AllPass' is inefficient due to padding; only needs 1 bytes but is using 48 bytes [altera-struct-pack-align]
  323 | struct AllPass : TypeI <RBJ::AllPass>
      |        ^
  324 | {
  325 |   static Kind getKind () { return kindOther; }
  326 |   static const char* getName() { return "RBJ All Pass"; }
  327 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:323:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'AllPass'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:323:8: warning: accessing fields in struct 'AllPass' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
  323 | struct AllPass : TypeI <RBJ::AllPass>
      |        ^
  324 | {
  325 |   static Kind getKind () { return kindOther; }
  326 |   static const char* getName() { return "RBJ All Pass"; }
  327 | };
      |  
      |   __attribute__((aligned(1)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:323:8: note: use "__attribute__((aligned(1)))" to align struct 'AllPass' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:325:3: warning: 'getKind' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  325 |   static Kind getKind () { return kindOther; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:325:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  325 |   static Kind getKind () { return kindOther; }
      |          ~~~~ ^
      |          auto            -> Kind
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:326:3: warning: 'getName' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  326 |   static const char* getName() { return "RBJ All Pass"; }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:326:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  326 |   static const char* getName() { return "RBJ All Pass"; }
      |          ~~~~~~~~~~~ ^
      |          auto                  -> const char*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:329:1: warning: namespace 'Design' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  329 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:133:11: note: namespace 'Design' starts here
  133 | namespace Design {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:331:1: warning: namespace 'RBJ' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  331 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:53:11: note: namespace 'RBJ' starts here
   53 | namespace RBJ {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:333:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  333 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RBJ.h:44:11: note: namespace 'Dsp' starts here
   44 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:38:1: warning: system include stdexcept not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp [llvmlibc-restrict-system-libc-headers]
   38 | #include <stdexcept>
      | ^~~~~~~~~~~~~~~~~~~~
   39 | 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:50:7: warning: variable 'its' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   50 |   int its;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:51:13: warning: initialization of 'x' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
   51 |   complex_t x, b, c;
      |             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:26: note: possibly throwing constructor declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:51:13: warning: variable 'x' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   51 |   complex_t x, b, c;
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:51:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:34: note: default parameter was declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:51:13: warning: variable name 'x' is too short, expected at least 3 characters [readability-identifier-length]
   51 |   complex_t x, b, c;
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:51:16: warning: initialization of 'b' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
   51 |   complex_t x, b, c;
      |                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:26: note: possibly throwing constructor declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:51:16: warning: variable 'b' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   51 |   complex_t x, b, c;
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:51:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:34: note: default parameter was declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:51:16: warning: variable name 'b' is too short, expected at least 3 characters [readability-identifier-length]
   51 |   complex_t x, b, c;
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:51:19: warning: initialization of 'c' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
   51 |   complex_t x, b, c;
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:26: note: possibly throwing constructor declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:51:19: warning: variable 'c' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   51 |   complex_t x, b, c;
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:51:19: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:34: note: default parameter was declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:51:19: warning: variable name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   51 |   complex_t x, b, c;
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:53:7: warning: variable 'm' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   53 |   int m = degree;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:53:7: warning: variable name 'm' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:56:12: warning: variable 'j' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   56 |   for (int j = 0; j <= m; ++j)
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:56:12: warning: variable name 'j' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:60:12: warning: variable 'j' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   60 |   for (int j = m - 1; j >= 0; --j)
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:60:12: warning: variable name 'j' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:73:14: warning: variable 'jj' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   73 |     for (int jj = j; jj >= 0; --jj)
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:73:14: warning: variable name 'jj' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:82:14: warning: variable 'j' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   82 |     for (int j = 0; j < m; ++j)
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:82:14: warning: variable name 'j' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:91:12: warning: variable 'j' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   91 |   for (int j = 1; j < degree; ++j)
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:91:12: warning: variable name 'j' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:93:15: warning: variable 'x' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   93 |     complex_t x = m_root[j];
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:93:15: warning: variable name 'x' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:95:9: warning: variable 'i' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   95 |     int i;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:95:9: warning: variable name 'i' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:115:13: warning: variable name 'MR' is too short, expected at least 3 characters [readability-identifier-length]
  115 |   const int MR = 8, MT = 10, MAXIT = MT * MR;
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:115:21: warning: variable name 'MT' is too short, expected at least 3 characters [readability-identifier-length]
  115 |   const int MR = 8, MT = 10, MAXIT = MT * MR;
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:118:16: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  118 |   static const double frac[MR + 1] =
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:13: warning: initialization of 'dx' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:26: note: possibly throwing constructor declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:13: warning: variable 'dx' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:34: note: default parameter was declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:13: warning: variable name 'dx' is too short, expected at least 3 characters [readability-identifier-length]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:17: warning: initialization of 'x1' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:26: note: possibly throwing constructor declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:17: warning: variable 'x1' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:17: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:34: note: default parameter was declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:17: warning: variable name 'x1' is too short, expected at least 3 characters [readability-identifier-length]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:21: warning: variable 'b' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:21: warning: variable name 'b' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:24: warning: initialization of 'd' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:26: note: possibly throwing constructor declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:24: warning: variable 'd' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:24: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:34: note: default parameter was declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:24: warning: variable name 'd' is too short, expected at least 3 characters [readability-identifier-length]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:27: warning: initialization of 'f' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:26: note: possibly throwing constructor declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:27: warning: variable 'f' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:27: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:34: note: default parameter was declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:27: warning: variable name 'f' is too short, expected at least 3 characters [readability-identifier-length]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:30: warning: initialization of 'g' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:26: note: possibly throwing constructor declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:30: warning: variable 'g' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:30: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:34: note: default parameter was declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:30: warning: variable name 'g' is too short, expected at least 3 characters [readability-identifier-length]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:33: warning: initialization of 'h' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:26: note: possibly throwing constructor declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:33: warning: variable 'h' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:33: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:34: note: default parameter was declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:33: warning: variable name 'h' is too short, expected at least 3 characters [readability-identifier-length]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:36: warning: initialization of 'sq' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:26: note: possibly throwing constructor declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:36: warning: variable 'sq' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:36: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:34: note: default parameter was declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:36: warning: variable name 'sq' is too short, expected at least 3 characters [readability-identifier-length]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:40: warning: initialization of 'gp' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:26: note: possibly throwing constructor declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:40: warning: variable 'gp' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:40: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:34: note: default parameter was declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:40: warning: variable name 'gp' is too short, expected at least 3 characters [readability-identifier-length]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:44: warning: initialization of 'gm' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:26: note: possibly throwing constructor declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:44: warning: variable 'gm' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:44: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:34: note: default parameter was declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:44: warning: variable name 'gm' is too short, expected at least 3 characters [readability-identifier-length]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:48: warning: initialization of 'g2' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:26: note: possibly throwing constructor declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:48: warning: variable 'g2' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:48: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:34: note: default parameter was declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:121:48: warning: variable name 'g2' is too short, expected at least 3 characters [readability-identifier-length]
  121 |   complex_t dx, x1, b, d, f, g, h, sq, gp, gm, g2;
      |                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:123:7: warning: variable 'm' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  123 |   int m = degree;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:123:7: warning: variable name 'm' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:124:12: warning: variable 'iter' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  124 |   for (int iter = 1; iter <= MAXIT; ++iter)
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:128:12: warning: variable 'err' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  128 |     double err = std::abs(b);
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:130:12: warning: variable 'abx' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  130 |     double abx = std::abs(x);
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:131:14: warning: variable 'j' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  131 |     for (int j = m - 1; j >= 0; --j)
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:131:14: warning: variable name 'j' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:149:12: warning: variable 'abp' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  149 |     double abp = std::abs (gp);
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:150:12: warning: variable 'abm' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  150 |     double abm = std::abs (gm);
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:171:13: warning: initialization of 'y' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  171 |   complex_t y;
      |             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:26: note: possibly throwing constructor declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:171:13: warning: variable 'y' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  171 |   complex_t y;
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:171:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:1509:34: note: default parameter was declared here
 1509 |       _GLIBCXX_CONSTEXPR complex(double __r = 0.0, double __i = 0.0)
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:171:13: warning: variable name 'y' is too short, expected at least 3 characters [readability-identifier-length]
  171 |   complex_t y;
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:175:14: warning: variable 'i' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  175 |     for (int i = 0; i <= degree; ++i)
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:175:14: warning: variable name 'i' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:187:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  187 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.cpp:40:11: note: namespace 'Dsp' starts here
   40 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_ROOTFINDER_H
      |         ^~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_ROOTFINDER_H
   37 | #define DSPFILTERS_ROOTFINDER_H
      |         ~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_ROOTFINDER_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:52:10: warning: accessing fields in struct 'Array' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 32 bytes [altera-struct-pack-align]
   52 |   struct Array
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:52:10: note: use "__attribute__((aligned(32)))" to align struct 'Array' to 32 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:54:5: warning: constructor does not initialize these fields: m_maxdegree, m_a, m_ad, m_root [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
   54 |     Array (int max, complex_t* values)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:54:5: warning: 'Array' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   54 |     Array (int max, complex_t* values)
      |     ^
      |     LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:55:11: error: member initializer 'm_max' does not name a non-static data member or base class [clang-diagnostic-error]
   55 |         : m_max (max)
      |           ^~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:56:11: error: member initializer 'm_values' does not name a non-static data member or base class [clang-diagnostic-error]
   56 |         , m_values (values)
      |           ^~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:76:15: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
   76 |               bool polish = true,
      |               ^           ~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:77:15: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
   77 |               bool doSort = true);
      |               ^           ~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:80:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   80 |   complex_t eval (int degree,
      |   ~~~~~~~~~ ^
      |   auto
   81 |                   const complex_t& x);
      |                                      
      |                                       -> complex_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:81:36: warning: parameter name 'x' is too short, expected at least 3 characters [readability-identifier-length]
   81 |                   const complex_t& x);
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:84:3: warning: 'coef' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   84 |   complex_t* coef()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:84:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   84 |   complex_t* coef()
      |   ~~~~~~~~~~ ^     
      |   auto              -> complex_t*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:90:3: warning: 'root' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   90 |   complex_t* root()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:90:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   90 |   complex_t* root()
      |   ~~~~~~~~~~ ^     
      |   auto              -> complex_t*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:102:18: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  102 |                  complex_t a[],
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:102:28: warning: parameter name 'a' is too short, expected at least 3 characters [readability-identifier-length]
  102 |                  complex_t a[],
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:103:29: warning: parameter name 'x' is too short, expected at least 3 characters [readability-identifier-length]
  103 |                  complex_t& x,
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:107:7: warning: member variable 'm_maxdegree' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  107 |   int m_maxdegree;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:108:14: warning: member variable 'm_a' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  108 |   complex_t* m_a;               // input coefficients (m_maxdegree+1 elements)
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:109:14: warning: member variable 'm_ad' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  109 |   complex_t* m_ad;      // copy of deflating coefficients
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:110:14: warning: member variable 'm_root' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  110 |   complex_t* m_root; // array of roots (maxdegree elements)
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:116:21: error: base class has incomplete type [clang-diagnostic-error]
  116 | struct RootFinder : RootFinderBase
      |                     ^~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:49:7: note: definition of 'Dsp::RootFinderBase' is not complete until the closing '}'
   49 | class RootFinderBase
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:118:3: warning: use '= default' to define a trivial default constructor [hicpp-use-equals-default,modernize-use-equals-default]
  118 |   RootFinder()
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:118:3: warning: 'RootFinder<maxdegree>' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  118 |   RootFinder()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:120:5: error: use of undeclared identifier 'm_maxdegree' [clang-diagnostic-error]
  120 |     m_maxdegree = maxdegree;
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:121:5: error: use of undeclared identifier 'm_a' [clang-diagnostic-error]
  121 |     m_a  = m_a0;
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:122:5: error: use of undeclared identifier 'm_ad' [clang-diagnostic-error]
  122 |     m_ad = m_ad0;
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:123:5: error: use of undeclared identifier 'm_root' [clang-diagnostic-error]
  123 |     m_root = m_r;
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:127:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  127 |   complex_t m_a0 [maxdegree+1];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:128:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  128 |   complex_t m_ad0[maxdegree+1];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:129:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  129 |   complex_t m_r  [maxdegree];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/RootFinder.h:132:2: error: expected ';' after class [clang-diagnostic-error]
  132 | }
      |  ^
      |  ;
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_SMOOTHEDFILTER_H
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_SMOOTHEDFILTER_H
   37 | #define DSPFILTERS_SMOOTHEDFILTER_H
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_SMOOTHEDFILTER_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:57:3: warning: use 'using' instead of 'typedef' [modernize-use-using]
   57 |   typedef FilterDesign <DesignClass, Channels, StateType> filter_type_t;
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |   using filter_type_t = FilterDesign<DesignClass, Channels, StateType>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:59:3: warning: constructor does not initialize these fields: m_transitionParams [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
   59 |   SmoothedFilterDesign (int transitionSamples)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:59:3: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
   59 |   SmoothedFilterDesign (int transitionSamples)
      |   ^
      |   explicit 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:59:3: warning: 'SmoothedFilterDesign<DesignClass, Channels, StateType>' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   59 |   SmoothedFilterDesign (int transitionSamples)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:67:3: warning: 'processBlock' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   67 |   void processBlock (int numSamples,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:76:28: warning: 'min<int>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   76 |     int remainingSamples = std::min (m_remainingSamples, numSamples);
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algobase.h:233:5: note: resolves to this declaration
  233 |     min(const _Tp& __a, const _Tp& __b)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:81:20: warning: variable name 't' is too short, expected at least 3 characters [readability-identifier-length]
   81 |       const double t = 1. / m_remainingSamples;
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:82:7: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
   82 |       double dp[maxParameters];
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:82:14: warning: variable name 'dp' is too short, expected at least 3 characters [readability-identifier-length]
   82 |       double dp[maxParameters];
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:83:7: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   83 |       for (int i = 0; i < DesignClass::NumParams; ++i)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:83:55: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   83 |       for (int i = 0; i < DesignClass::NumParams; ++i)
      |                                                       ^
      |                                                        {
   84 |         dp[i] = (this->getParams()[i] - m_transitionParams[i]) * t;
      |                                                                    
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:84:9: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
   84 |         dp[i] = (this->getParams()[i] - m_transitionParams[i]) * t;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:84:59: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   84 |         dp[i] = (this->getParams()[i] - m_transitionParams[i]) * t;
      |                                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:91:11: note: resolves to this declaration
   91 |   double& operator[] (int index)
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:86:16: warning: loop variable name 'n' is too short, expected at least 2 characters [readability-identifier-length]
   86 |       for (int n = 0; n < remainingSamples; ++n)
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:86:23: warning: backward branch (for loop) is ID-dependent due to variable reference to 'remainingSamples' and may cause performance degradation [altera-id-dependent-backward-branch]
   86 |       for (int n = 0; n < remainingSamples; ++n)
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:76:5: note: inferred assignment of ID-dependent value from ID-dependent 
   76 |     int remainingSamples = std::min (m_remainingSamples, numSamples);
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:88:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   88 |         for (int i = DesignClass::NumParams; --i >=0;)
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:88:55: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   88 |         for (int i = DesignClass::NumParams; --i >=0;)
      |                                                       ^
      |                                                        {
   89 |           m_transitionParams[i] += dp[i];
      |                                          
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:89:29: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   89 |           m_transitionParams[i] += dp[i];
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:91:11: note: resolves to this declaration
   91 |   double& operator[] (int index)
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:89:36: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
   89 |           m_transitionParams[i] += dp[i];
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:93:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   93 |         for (int i = numChannels; --i >= 0;)
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:93:35: warning: backward branch (for loop) is ID-dependent due to variable reference to 'i' and may cause performance degradation [altera-id-dependent-backward-branch]
   93 |         for (int i = numChannels; --i >= 0;)
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:93:14: note: inferred assignment of ID-dependent value from ID-dependent 
   93 |         for (int i = numChannels; --i >= 0;)
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:95:26: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   95 |           Sample* dest = destChannelArray[i]+n;
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:102:35: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  102 |       if (m_remainingSamples == 0)
      |                                   ^
      |                                    {
  103 |         m_transitionParams = this->getParams();
      |                                                
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:110:7: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  110 |       for (int i = 0; i < numChannels; ++i)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:110:44: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  110 |       for (int i = 0; i < numChannels; ++i)
      |                                            ^
      |                                             {
  111 |         this->m_design.process (numSamples - remainingSamples,
  112 |                           destChannelArray[i] + remainingSamples,
  113 |                           this->m_state[i]);
      |                                             
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:112:27: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  112 |                           destChannelArray[i] + remainingSamples,
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:117:3: warning: 'process' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  117 |   void process (int numSamples, float* const* arrayOfChannels)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:122:3: warning: 'process' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  122 |   void process (int numSamples, double* const* arrayOfChannels)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:128:3: warning: 'doSetParams' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  128 |   void doSetParams (const Params& parameters)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:138:26: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  138 |       m_transitionParams = parameters;
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Params.h:83:8: note: resolves to this declaration
   83 | struct Params
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:144:1: warning: redundant access specifier has the same accessibility as the previous access specifier [readability-redundant-access-specifiers]
  144 | protected:
      | ^~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:127:1: note: previously declared here
  127 | protected:
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:145:10: warning: member variable 'm_transitionParams' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  145 |   Params m_transitionParams;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:146:15: warning: member variable 'm_transitionFilter' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  146 |   DesignClass m_transitionFilter;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:147:7: warning: member variable 'm_transitionSamples' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  147 |   int m_transitionSamples;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:149:7: warning: member variable 'm_remainingSamples' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  149 |   int m_remainingSamples;        // remaining transition samples
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:149:7: warning: use default member initializer for 'm_remainingSamples' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   61 |   int m_remainingSamples;        // remaining transition samples
      |       ^                 
      |                         {-1}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:152:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  152 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/SmoothedFilter.h:42:11: note: namespace 'Dsp' starts here
   42 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.cpp:43:1: warning: namespace 'Dsp' not terminated with a closing comment [llvm-namespace-comment]
   43 | }
      | ^
      |   // namespace Dsp
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.cpp:39:11: note: namespace 'Dsp' starts here
   39 | namespace Dsp {
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_STATE_H
      |         ^~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_STATE_H
   37 | #define DSPFILTERS_STATE_H
      |         ~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_STATE_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:39:1: warning: #includes are not sorted properly [llvm-include-order]
   39 | #include "DspFilters/Common.h"
      | ^        ~~~~~~~~~~~~~~~~~~~~~
   40 | #include "DspFilters/Biquad.h"
      |          ~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:42:1: warning: system include stdexcept not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h [llvmlibc-restrict-system-libc-headers]
   42 | #include <stdexcept>
      | ^~~~~~~~~~~~~~~~~~~~
   43 | 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:65:3: warning: constructor does not initialize these fields: m_x2, m_y2, m_x1, m_y1 [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
   65 |   DirectFormI ()
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:65:3: warning: 'DirectFormI' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   65 |   DirectFormI ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:70:3: warning: 'reset' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   70 |   void reset ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:79:3: warning: 'process1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   79 |   inline Sample process1 (const Sample in,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:79:3: warning: function 'process1' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   79 |   inline Sample process1 (const Sample in,
      |   ^~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:79:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   79 |   inline Sample process1 (const Sample in,
      |          ~~~~~~ ^
      |          auto
   80 |                           const BiquadBase& s,
   81 |                           const double vsa) // very small amount
      |                                             -> Sample
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:79:40: warning: parameter name 'in' is too short, expected at least 3 characters [readability-identifier-length]
   79 |   inline Sample process1 (const Sample in,
      |                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:80:45: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
   80 |                           const BiquadBase& s,
      |                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:95:10: warning: member variable 'm_x2' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   95 |   double m_x2; // x[n-2]
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:96:10: warning: member variable 'm_y2' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   96 |   double m_y2; // y[n-2]
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:97:10: warning: member variable 'm_x1' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   97 |   double m_x1; // x[n-1]
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:98:10: warning: member variable 'm_y1' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   98 |   double m_y1; // y[n-1]
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:115:3: warning: constructor does not initialize these fields: m_v1, m_v2 [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
  115 |   DirectFormII ()
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:115:3: warning: 'DirectFormII' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  115 |   DirectFormII ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:120:3: warning: 'reset' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  120 |   void reset ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:127:3: warning: 'process1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  127 |   Sample process1 (const Sample in,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:127:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  127 |   Sample process1 (const Sample in,
      |   ~~~~~~ ^
      |   auto
  128 |                    const BiquadBase& s,
  129 |                    const double vsa)
      |                                     
      |                                      -> Sample
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:127:33: warning: parameter name 'in' is too short, expected at least 3 characters [readability-identifier-length]
  127 |   Sample process1 (const Sample in,
      |                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:128:38: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
  128 |                    const BiquadBase& s,
      |                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:131:12: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  131 |     double w   = in - s.m_a1*m_v1 - s.m_a2*m_v2 + vsa;
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:132:5: warning: variable 'out' of type 'double' can be declared 'const' [misc-const-correctness]
  132 |     double out =      s.m_b0*w    + s.m_b1*m_v1 + s.m_b2*m_v2;
      |     ^
      |            const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:160:3: warning: constructor does not initialize these fields: m_v, m_s1, m_s1_1, m_s2, m_s2_1, m_s3, m_s3_1, m_s4, m_s4_1 [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
  160 |   TransposedDirectFormI ()
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:160:3: warning: 'TransposedDirectFormI' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  160 |   TransposedDirectFormI ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:165:3: warning: 'reset' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  165 |   void reset ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:179:3: warning: 'process1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  179 |   inline Sample process1 (const Sample in,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:179:3: warning: function 'process1' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  179 |   inline Sample process1 (const Sample in,
      |   ^~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:179:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  179 |   inline Sample process1 (const Sample in,
      |          ~~~~~~ ^
      |          auto
  180 |                           const BiquadBase& s,
  181 |                           const double vsa)
      |                                            
      |                                             -> Sample
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:179:40: warning: parameter name 'in' is too short, expected at least 3 characters [readability-identifier-length]
  179 |   inline Sample process1 (const Sample in,
      |                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:180:45: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
  180 |                           const BiquadBase& s,
      |                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:181:40: warning: parameter 'vsa' is unused [misc-unused-parameters]
  181 |                           const double vsa)
      |                                        ^~~
      |                                         /*vsa*/
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:183:12: warning: variable 'out' is not initialized [cppcoreguidelines-init-variables]
   42 |     double out;
      |            ^  
      |                = NAN
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:218:3: warning: constructor does not initialize these fields: m_s1, m_s1_1, m_s2, m_s2_1 [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
  218 |   TransposedDirectFormII ()
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:218:3: warning: 'TransposedDirectFormII' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  218 |   TransposedDirectFormII ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:223:3: warning: 'reset' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  223 |   void reset ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:232:3: warning: 'process1' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  232 |   inline Sample process1 (const Sample in,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:232:3: warning: function 'process1' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  232 |   inline Sample process1 (const Sample in,
      |   ^~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:232:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  232 |   inline Sample process1 (const Sample in,
      |          ~~~~~~ ^
      |          auto
  233 |                           const BiquadBase& s,
  234 |                           const double vsa)
      |                                            
      |                                             -> Sample
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:232:40: warning: parameter name 'in' is too short, expected at least 3 characters [readability-identifier-length]
  232 |   inline Sample process1 (const Sample in,
      |                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:233:45: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
  233 |                           const BiquadBase& s,
      |                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:236:12: warning: variable 'out' is not initialized [cppcoreguidelines-init-variables]
  236 |     double out;
      |            ^  
      |                = NAN
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:261:3: warning: use '= default' to define a trivial default constructor [hicpp-use-equals-default,modernize-use-equals-default]
  261 |   ChannelsState ()
      |   ^
  262 |   {
      |   ~
      |   = default;
  263 |   }
      |   ~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:261:3: warning: 'ChannelsState<Channels, StateType>' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  261 |   ChannelsState ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:265:3: warning: 'getNumChannels' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  265 |   const int getNumChannels() const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:265:3: warning: function 'getNumChannels' should be marked [[nodiscard]] [modernize-use-nodiscard]
  265 |   const int getNumChannels() const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:265:3: warning: return type 'const int' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  265 |   const int getNumChannels() const
      |   ^~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:265:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  265 |   const int getNumChannels() const
      |   ~~~~~~~~~ ^                     
      |   auto                             -> const int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:270:3: warning: 'reset' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  270 |   void reset ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:272:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  272 |     for (int i = 0; i < Channels; ++i)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:272:39: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  272 |     for (int i = 0; i < Channels; ++i)
      |                                       ^
      |                                        {
  273 |       m_state[i].reset();
      |                          
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:276:3: warning: overloading 'operator[]' is disallowed [fuchsia-overloaded-operator]
  276 |   StateType& operator[] (int index)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:276:3: warning: 'operator[]' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  276 |   StateType& operator[] (int index)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:276:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  276 |   StateType& operator[] (int index)
      |   ~~~~~~~~~~ ^                     
      |   auto                              -> StateType&
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:283:3: warning: 'process' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  283 |   void process (int numSamples,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:287:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  287 |     for (int i = 0; i < Channels; ++i)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:287:39: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  287 |     for (int i = 0; i < Channels; ++i)
      |                                       ^
      |                                        {
  288 |       filter.process (numSamples, arrayOfChannels[i], m_state[i]);
      |                                                                   
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:288:35: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  288 |       filter.process (numSamples, arrayOfChannels[i], m_state[i]);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:292:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  292 |   StateType m_state[Channels];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:300:3: warning: 'getNumChannels' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  300 |   const int getNumChannels() const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:300:3: warning: function 'getNumChannels' should be marked [[nodiscard]] [modernize-use-nodiscard]
  300 |   const int getNumChannels() const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:300:3: warning: return type 'const int' is 'const'-qualified at the top level, which may reduce code readability without improving const correctness [readability-const-return-type]
  300 |   const int getNumChannels() const
      |   ^~~~~
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:300:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  300 |   const int getNumChannels() const
      |   ~~~~~~~~~ ^                     
      |   auto                             -> const int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:305:3: warning: 'reset' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  305 |   void reset ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:311:3: warning: 'process' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  311 |   void process (int numSamples,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:311:21: warning: parameter 'numSamples' is unused [misc-unused-parameters]
  311 |   void process (int numSamples,
      |                     ^~~~~~~~~~
      |                      /*numSamples*/
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:312:32: warning: parameter 'arrayOfChannels' is unused [misc-unused-parameters]
  312 |                 Sample* const* arrayOfChannels,
      |                                ^~~~~~~~~~~~~~~
      |                                 /*arrayOfChannels*/
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:313:31: warning: parameter 'filter' is unused [misc-unused-parameters]
  313 |                 FilterDesign& filter)
      |                               ^~~~~~
      |                                /*filter*/
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:321:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  321 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/State.h:44:11: note: namespace 'Dsp' starts here
   44 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_TYPES_H
      |         ^~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_TYPES_H
   37 | #define DSPFILTERS_TYPES_H
      |         ~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_TYPES_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:45:8: warning: accessing fields in struct 'ComplexPair' is inefficient due to padding; only needs 1 bytes but is using 32 bytes [altera-struct-pack-align]
   45 | struct ComplexPair : complex_pair_t
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:45:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'ComplexPair'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:45:8: warning: accessing fields in struct 'ComplexPair' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 1 bytes [altera-struct-pack-align]
   45 | struct ComplexPair : complex_pair_t
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:45:8: note: use "__attribute__((aligned(1)))" to align struct 'ComplexPair' to 1 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:47:3: warning: use '= default' to define a trivial default constructor [hicpp-use-equals-default,modernize-use-equals-default]
   47 |   ComplexPair ()
      |   ^
   48 |   {
      |   ~
      |   = default;
   49 |   }
      |   ~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:47:3: warning: 'ComplexPair' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   47 |   ComplexPair ()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:51:3: warning: 'ComplexPair' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   51 |   explicit ComplexPair (const complex_t& c1)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:51:42: warning: parameter name 'c1' is too short, expected at least 3 characters [readability-identifier-length]
   51 |   explicit ComplexPair (const complex_t& c1)
      |                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:57:3: warning: 'ComplexPair' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   57 |   ComplexPair (const complex_t& c1,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:57:33: warning: parameter name 'c1' is too short, expected at least 3 characters [readability-identifier-length]
   57 |   ComplexPair (const complex_t& c1,
      |                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:58:33: warning: parameter name 'c2' is too short, expected at least 3 characters [readability-identifier-length]
   58 |                const complex_t& c2)
      |                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:63:3: warning: 'isConjugate' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   63 |   bool isConjugate () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:63:3: warning: function 'isConjugate' should be marked [[nodiscard]] [modernize-use-nodiscard]
   63 |   bool isConjugate () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:63:8: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   63 |   bool isConjugate () const
      |   ~~~~ ^                   
      |   auto                      -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:65:19: warning: 'operator==<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   65 |     return second == std::conj (first);
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:467:5: note: resolves to this declaration
  467 |     operator==(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:65:22: warning: 'conj<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   65 |     return second == std::conj (first);
      |                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:970:5: note: resolves to this declaration
  970 |     conj(const complex<_Tp>& __z)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:68:3: warning: 'isReal' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   68 |   bool isReal () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:68:3: warning: function 'isReal' should be marked [[nodiscard]] [modernize-use-nodiscard]
   68 |   bool isReal () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:68:8: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   68 |   bool isReal () const
      |   ~~~~ ^              
      |   auto                 -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:75:3: warning: 'isMatchedPair' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   75 |   bool isMatchedPair () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:75:3: warning: function 'isMatchedPair' should be marked [[nodiscard]] [modernize-use-nodiscard]
   75 |   bool isMatchedPair () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:75:8: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   75 |   bool isMatchedPair () const
      |   ~~~~ ^                     
      |   auto                        -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:77:27: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   77 |     if (first.imag() != 0)
      |                           ^
      |                            {
   78 |       return second == std::conj (first);
   79 |     else
      |     } 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:78:21: warning: 'operator==<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   78 |       return second == std::conj (first);
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:467:5: note: resolves to this declaration
  467 |     operator==(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:78:24: warning: 'conj<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   78 |       return second == std::conj (first);
      |                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:970:5: note: resolves to this declaration
  970 |     conj(const complex<_Tp>& __z)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:79:5: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
   79 |     else
      |     ^~~~
   80 |       return second.imag () == 0 &&
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   81 |              second.real () != 0 &&
      |              ~~~~~~~~~~~~~~~~~~~~~~
   82 |              first.real () != 0;
      |              ~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:79:9: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   79 |     else
      |         ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:85:3: warning: 'is_nan' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   85 |   bool is_nan () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:85:3: warning: function 'is_nan' should be marked [[nodiscard]] [modernize-use-nodiscard]
   85 |   bool is_nan () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:85:8: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   85 |   bool is_nan () const
      |   ~~~~ ^              
      |   auto                 -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:87:12: warning: 'is_nan<std::complex<double>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   87 |     return Dsp::is_nan (first) || Dsp::is_nan (second);
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:112:13: note: resolves to this declaration
  112 | inline bool is_nan<complex_t> (complex_t v)
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:87:35: warning: 'is_nan<std::complex<double>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   87 |     return Dsp::is_nan (first) || Dsp::is_nan (second);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/MathSupplement.h:112:13: note: resolves to this declaration
  112 | inline bool is_nan<complex_t> (complex_t v)
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:92:8: warning: accessing fields in struct 'PoleZeroPair' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 64 bytes [altera-struct-pack-align]
   92 | struct PoleZeroPair
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:92:8: note: use "__attribute__((aligned(64)))" to align struct 'PoleZeroPair' to 64 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:94:15: warning: member variable 'poles' has public visibility [misc-non-private-member-variables-in-classes]
   94 |   ComplexPair poles;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:95:15: warning: member variable 'zeros' has public visibility [misc-non-private-member-variables-in-classes]
   95 |   ComplexPair zeros;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:97:3: warning: use '= default' to define a trivial default constructor [hicpp-use-equals-default,modernize-use-equals-default]
   97 |   PoleZeroPair () { }
      |   ^               ~~~
      |                   = default;
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:97:3: warning: 'PoleZeroPair' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   97 |   PoleZeroPair () { }
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:100:3: warning: 'PoleZeroPair' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  100 |   PoleZeroPair (const complex_t& p, const complex_t& z)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:100:17: warning: 2 adjacent parameters of 'PoleZeroPair' of similar type ('const complex_t &') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  100 |   PoleZeroPair (const complex_t& p, const complex_t& z)
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:100:34: note: the first parameter in the range is 'p'
  100 |   PoleZeroPair (const complex_t& p, const complex_t& z)
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:100:54: note: the last parameter in the range is 'z'
  100 |   PoleZeroPair (const complex_t& p, const complex_t& z)
      |                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:100:34: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  100 |   PoleZeroPair (const complex_t& p, const complex_t& z)
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:100:54: warning: parameter name 'z' is too short, expected at least 3 characters [readability-identifier-length]
  100 |   PoleZeroPair (const complex_t& p, const complex_t& z)
      |                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:106:3: warning: 'PoleZeroPair' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  106 |   PoleZeroPair (const complex_t& p1, const complex_t& z1,
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:106:34: warning: parameter name 'p1' is too short, expected at least 3 characters [readability-identifier-length]
  106 |   PoleZeroPair (const complex_t& p1, const complex_t& z1,
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:106:38: warning: 2 adjacent parameters of 'PoleZeroPair' of similar type ('const complex_t &') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  106 |   PoleZeroPair (const complex_t& p1, const complex_t& z1,
      |                                      ^~~~~~~~~~~~~~~~~~~~
  107 |                 const complex_t& p2, const complex_t& z2)
      |                 ~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:106:55: note: the first parameter in the range is 'z1'
  106 |   PoleZeroPair (const complex_t& p1, const complex_t& z1,
      |                                                       ^~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:107:34: note: the last parameter in the range is 'p2'
  107 |                 const complex_t& p2, const complex_t& z2)
      |                                  ^~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:106:55: warning: parameter name 'z1' is too short, expected at least 3 characters [readability-identifier-length]
  106 |   PoleZeroPair (const complex_t& p1, const complex_t& z1,
      |                                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:107:34: warning: parameter name 'p2' is too short, expected at least 3 characters [readability-identifier-length]
  107 |                 const complex_t& p2, const complex_t& z2)
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:107:55: warning: parameter name 'z2' is too short, expected at least 3 characters [readability-identifier-length]
  107 |                 const complex_t& p2, const complex_t& z2)
      |                                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:113:3: warning: 'isSinglePole' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  113 |   bool isSinglePole () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:113:3: warning: function 'isSinglePole' should be marked [[nodiscard]] [modernize-use-nodiscard]
  113 |   bool isSinglePole () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:113:8: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  113 |   bool isSinglePole () const
      |   ~~~~ ^                    
      |   auto                       -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:115:25: warning: 'operator==<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  115 |     return poles.second == 0. && zeros.second == 0.;
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:472:5: note: resolves to this declaration
  472 |     operator==(const complex<_Tp>& __x, const _Tp& __y)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:115:47: warning: 'operator==<double>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  115 |     return poles.second == 0. && zeros.second == 0.;
      |                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/complex:472:5: note: resolves to this declaration
  472 |     operator==(const complex<_Tp>& __x, const _Tp& __y)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:118:3: warning: 'is_nan' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  118 |   bool is_nan () const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:118:3: warning: function 'is_nan' should be marked [[nodiscard]] [modernize-use-nodiscard]
  118 |   bool is_nan () const
      |   ^
      |   [[nodiscard]] 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:118:8: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  118 |   bool is_nan () const
      |   ~~~~ ^              
      |   auto                 -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:125:6: warning: enum 'Kind' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  125 | enum Kind
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:137:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  137 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Types.h:42:11: note: namespace 'Dsp' starts here
   42 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:36:9: warning: header guard does not follow preferred style [llvm-header-guard]
   36 | #ifndef DSPFILTERS_UTILITIES_H
      |         ^~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_UTILITIES_H
   37 | #define DSPFILTERS_UTILITIES_H
      |         ~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_DSPFILTERS_UTILITIES_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:58:11: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
   58 |           int destSkip = 0,
      |           ^            ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:59:11: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
   59 |           int srcSkip = 0)
      |           ^           ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:65:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   65 |     while (--samples >= 0)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:74:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   74 |     while (--samples >= 0)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:74:27: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   74 |     while (--samples >= 0)
      |                           ^
      |                            {
   75 |       *dest++ += static_cast<Td>(*src++);
      |                                          
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:82:11: warning: 2 adjacent parameters of 'add' of similar type ('int') are easily swapped by mistake [bugprone-easily-swappable-parameters]
   82 | void add (int channels,
      |           ^~~~~~~~~~~~~
   83 |           int samples,
      |           ~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:82:15: note: the first parameter in the range is 'channels'
   82 | void add (int channels,
      |               ^~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:83:15: note: the last parameter in the range is 'samples'
   83 |           int samples,
      |               ^~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:87:3: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   87 |   for (int i = channels; --i >= 0;)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:87:26: warning: backward branch (for loop) is ID-dependent due to variable reference to 'i' and may cause performance degradation [altera-id-dependent-backward-branch]
   87 |   for (int i = channels; --i >= 0;)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:87:8: note: inferred assignment of ID-dependent value from ID-dependent 
   87 |   for (int i = channels; --i >= 0;)
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:87:36: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   87 |   for (int i = channels; --i >= 0;)
      |                                    ^
      |                                     {
   88 |     add (samples, dest[i], src[i]);
      |                                    
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:88:19: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   88 |     add (samples, dest[i], src[i]);
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:88:28: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   88 |     add (samples, dest[i], src[i]);
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:100:12: warning: 2 adjacent parameters of 'copy' of similar type ('int') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  100 |            int destSkip = 0,
      |            ^~~~~~~~~~~~~~~~~
  101 |            int srcSkip = 0)
      |            ~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:100:16: note: the first parameter in the range is 'destSkip'
  100 |            int destSkip = 0,
      |                ^~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:101:16: note: the last parameter in the range is 'srcSkip'
  101 |            int srcSkip = 0)
      |                ^~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:100:12: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  100 |            int destSkip = 0,
      |            ^            ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:101:12: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  101 |            int srcSkip = 0)
      |            ^           ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:109:7: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  109 |       while (--samples >= 0)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:119:7: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  119 |       while (--samples >= 0)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:129:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  129 |     while (--samples >= 0)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:137:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  137 |     while (--samples >= 0)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:137:27: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  137 |     while (--samples >= 0)
      |                           ^
      |                            {
  138 |       *dest++ = *src++;
      |                        
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:147:12: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  147 |            int destSkip = 0,
      |            ^            ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:148:12: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  148 |            int srcSkip = 0)
      |            ^           ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:150:37: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  150 |   if (destSkip != 0 || srcSkip != 0)
      |                                     ^
      |                                      {
  151 |     copy<Ty,Ty> (samples, dest, src, destSkip, srcSkip);
  152 |   else
      |   } 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:152:7: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  152 |   else
      |       ^
      |        {
  153 |     ::memcpy (dest, src, samples * sizeof(src[0]));
      |                                                    
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:153:43: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  153 |     ::memcpy (dest, src, samples * sizeof(src[0]));
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:159:12: warning: 2 adjacent parameters of 'copy' of similar type ('int') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  159 | void copy (int channels,
      |            ^~~~~~~~~~~~~
  160 |            int samples,
      |            ~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:159:16: note: the first parameter in the range is 'channels'
  159 | void copy (int channels,
      |                ^~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:160:16: note: the last parameter in the range is 'samples'
  160 |            int samples,
      |                ^~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:163:12: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  163 |            int destSkip = 0,
      |            ^            ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:164:12: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  164 |            int srcSkip = 0)
      |            ^           ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:166:3: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  166 |   for (int i = channels; --i >= 0;)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:166:26: warning: backward branch (for loop) is ID-dependent due to variable reference to 'i' and may cause performance degradation [altera-id-dependent-backward-branch]
  166 |   for (int i = channels; --i >= 0;)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:166:8: note: inferred assignment of ID-dependent value from ID-dependent 
  166 |   for (int i = channels; --i >= 0;)
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:166:36: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  166 |   for (int i = channels; --i >= 0;)
      |                                    ^
      |                                     {
  167 |     copy (samples, dest[i], src[i], destSkip, srcSkip);
      |                                                        
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:167:20: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  167 |     copy (samples, dest[i], src[i], destSkip, srcSkip);
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:167:29: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  167 |     copy (samples, dest[i], src[i], destSkip, srcSkip);
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:181:3: warning: switch could be better written as an if/else statement [hicpp-multiway-paths-covered]
  181 |   switch (channels)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:185:11: warning: variable name 'l' is too short, expected at least 3 characters [readability-identifier-length]
  185 |       Td* l = dest[0];
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:185:15: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  185 |       Td* l = dest[0];
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:186:11: warning: variable name 'r' is too short, expected at least 3 characters [readability-identifier-length]
  186 |       Td* r = dest[1];
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:186:15: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  186 |       Td* r = dest[1];
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:187:10: warning: variable name 'n' is too short, expected at least 3 characters [readability-identifier-length]
  187 |             int n = (samples + 7) / 8;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:187:25: warning: 7 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  187 |             int n = (samples + 7) / 8;
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:187:30: warning: 8 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  187 |             int n = (samples + 7) / 8;
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:188:6: warning: switching on non-enum value without default case may not cover all cases [bugprone-switch-missing-default-case]
  188 |             switch (samples % 8)
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:188:24: warning: 8 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  188 |             switch (samples % 8)
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:190:14: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  190 |             case 0: do
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:190:14: warning: avoid do-while loops [cppcoreguidelines-avoid-do-while]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:193:11: warning: 7 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  193 |             case 7:             *l++ = *src++; *r++ = *src++;
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:194:11: warning: 6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  194 |             case 6:             *l++ = *src++; *r++ = *src++;
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:195:11: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  195 |             case 5:             *l++ = *src++; *r++ = *src++;
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:201:22: warning: backward branch (do loop) is ID-dependent due to variable reference to 'n' and may cause performance degradation [altera-id-dependent-backward-branch]
  201 |               while (--n > 0);
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:187:6: note: inferred assignment of ID-dependent value from ID-dependent 
  187 |             int n = (samples + 7) / 8;
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:208:7: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  208 |       for (int i = channels; --i >= 0;)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:208:30: warning: backward branch (for loop) is ID-dependent due to variable reference to 'i' and may cause performance degradation [altera-id-dependent-backward-branch]
  208 |       for (int i = channels; --i >= 0;)
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:208:12: note: inferred assignment of ID-dependent value from ID-dependent 
  208 |       for (int i = channels; --i >= 0;)
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:208:40: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  208 |       for (int i = channels; --i >= 0;)
      |                                        ^
      |                                         {
  209 |         copy (samples, dest[i], src + i, 0, channels - 1);
      |                                                           
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:209:24: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  209 |         copy (samples, dest[i], src + i, 0, channels - 1);
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:219:20: warning: 2 adjacent parameters of 'deinterleave' of similar type ('Td *') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  219 |                    Td* left,
      |                    ^~~~~~~~~
  220 |                    Td* right,
      |                    ~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:219:24: note: the first parameter in the range is 'left'
  219 |                    Td* left,
      |                        ^~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:220:24: note: the last parameter in the range is 'right'
  220 |                    Td* right,
      |                        ^~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:223:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  223 |   Td* dest[2];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:236:12: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  236 |            Ty start = 0,
      |            ^        ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:237:12: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  237 |            Ty end = 1)
      |            ^      ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:239:6: warning: variable name 't' is too short, expected at least 3 characters [readability-identifier-length]
  239 |   Ty t = start;
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:240:6: warning: variable name 'dt' is too short, expected at least 3 characters [readability-identifier-length]
  240 |   Ty dt = (end - start) / samples;
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:242:3: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  242 |   while (--samples >= 0)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:252:12: warning: 2 adjacent parameters of 'fade' of similar type ('int') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  252 | void fade (int channels,
      |            ^~~~~~~~~~~~~
  253 |            int samples,
      |            ~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:252:16: note: the first parameter in the range is 'channels'
  252 | void fade (int channels,
      |                ^~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:253:16: note: the last parameter in the range is 'samples'
  253 |            int samples,
      |                ^~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:255:12: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  255 |            Ty start = 0,
      |            ^        ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:256:12: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  256 |            Ty end = 1)
      |            ^      ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:258:3: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  258 |   for (int i = channels; --i >= 0;)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:258:26: warning: backward branch (for loop) is ID-dependent due to variable reference to 'i' and may cause performance degradation [altera-id-dependent-backward-branch]
  258 |   for (int i = channels; --i >= 0;)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:258:8: note: inferred assignment of ID-dependent value from ID-dependent 
  258 |   for (int i = channels; --i >= 0;)
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:258:36: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  258 |   for (int i = channels; --i >= 0;)
      |                                    ^
      |                                     {
  259 |     fade (samples, dest[i], start, end);
      |                                         
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:259:20: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  259 |     fade (samples, dest[i], start, end);
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:269:12: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  269 |            Ty start = 0,
      |            ^        ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:270:12: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  270 |            Ty end = 1)
      |            ^      ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:272:6: warning: variable name 't' is too short, expected at least 3 characters [readability-identifier-length]
  272 |   Ty t = start;
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:273:6: warning: variable name 'dt' is too short, expected at least 3 characters [readability-identifier-length]
  273 |   Ty dt = (end - start) / samples;
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:275:3: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  275 |   while (--samples >= 0)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:287:12: warning: 2 adjacent parameters of 'fade' of similar type ('int') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  287 | void fade (int channels,
      |            ^~~~~~~~~~~~~
  288 |            int samples,
      |            ~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:287:16: note: the first parameter in the range is 'channels'
  287 | void fade (int channels,
      |                ^~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:288:16: note: the last parameter in the range is 'samples'
  288 |            int samples,
      |                ^~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:291:12: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  291 |            Ty start = 0,
      |            ^        ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:292:12: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  292 |            Ty end = 1)
      |            ^      ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:294:3: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  294 |   for (int i = channels; --i >= 0;)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:294:26: warning: backward branch (for loop) is ID-dependent due to variable reference to 'i' and may cause performance degradation [altera-id-dependent-backward-branch]
  294 |   for (int i = channels; --i >= 0;)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:294:8: note: inferred assignment of ID-dependent value from ID-dependent 
  294 |   for (int i = channels; --i >= 0;)
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:294:36: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  294 |   for (int i = channels; --i >= 0;)
      |                                    ^
      |                                     {
  295 |     fade (samples, dest[i], src[i], start, end);
      |                                                 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:295:20: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  295 |     fade (samples, dest[i], src[i], start, end);
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:295:29: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  295 |     fade (samples, dest[i], src[i], start, end);
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:312:18: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  312 |   if (samples==0)
      |                  ^
      |                   {
  313 |     return;
      |            
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:315:3: warning: switch could be better written as an if/else statement [hicpp-multiway-paths-covered]
  315 |   switch (channels)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:319:17: warning: variable name 'l' is too short, expected at least 3 characters [readability-identifier-length]
  319 |       const Ts* l = src[0];
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:319:21: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  319 |       const Ts* l = src[0];
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:320:17: warning: variable name 'r' is too short, expected at least 3 characters [readability-identifier-length]
  320 |       const Ts* r = src[1];
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:320:21: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  320 |       const Ts* r = src[1];
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:323:11: warning: variable name 'n' is too short, expected at least 3 characters [readability-identifier-length]
  323 |       int n = (samples + 7) / 8;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:323:15: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  323 |       int n = (samples + 7) / 8;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:323:26: warning: 7 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  323 |       int n = (samples + 7) / 8;
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:323:31: warning: 8 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  323 |       int n = (samples + 7) / 8;
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:324:6: warning: switching on non-enum value without default case may not cover all cases [bugprone-switch-missing-default-case]
  324 |             switch (samples % 8)
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:324:24: warning: 8 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  324 |             switch (samples % 8)
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:326:14: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  326 |             case 0: do
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:326:14: warning: avoid do-while loops [cppcoreguidelines-avoid-do-while]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:329:11: warning: 7 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  329 |             case 7:             *dest++ = *l++; *dest++ = *r++;
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:330:11: warning: 6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  330 |             case 6:             *dest++ = *l++; *dest++ = *r++;
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:331:11: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  331 |             case 5:             *dest++ = *l++; *dest++ = *r++;
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:337:22: warning: backward branch (do loop) is ID-dependent due to variable reference to 'n' and may cause performance degradation [altera-id-dependent-backward-branch]
  337 |               while (--n > 0);
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:323:7: note: inferred assignment of ID-dependent value from ID-dependent 
  323 |       int n = (samples + 7) / 8;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:344:7: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  344 |       for (int i = channels; --i >= 0;)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:344:30: warning: backward branch (for loop) is ID-dependent due to variable reference to 'i' and may cause performance degradation [altera-id-dependent-backward-branch]
  344 |       for (int i = channels; --i >= 0;)
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:344:12: note: inferred assignment of ID-dependent value from ID-dependent 
  344 |       for (int i = channels; --i >= 0;)
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:344:40: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  344 |       for (int i = channels; --i >= 0;)
      |                                        ^
      |                                         {
  345 |         copy (samples, dest + i, src[i], channels - 1, 0);
      |                                                           
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:345:34: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  345 |         copy (samples, dest + i, src[i], channels - 1, 0);
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:358:18: warning: 2 adjacent parameters of 'interleave' of similar type ('const Ts *') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  358 |                  Ts const* left,
      |                  ^~~~~~~~~~~~~~~
  359 |                  Ts const* right)
      |                  ~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:358:28: note: the first parameter in the range is 'left'
  358 |                  Ts const* left,
      |                            ^~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:359:28: note: the last parameter in the range is 'right'
  359 |                  Ts const* right)
      |                            ^~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:361:9: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  361 |   const Ts* src[2];
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:375:16: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  375 |                int destSkip = 0)
      |                ^            ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:380:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  380 |     while (--samples >= 0)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:388:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  388 |     while (--samples >= 0) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:398:16: warning: 2 adjacent parameters of 'multiply' of similar type ('int') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  398 | void multiply (int channels,
      |                ^~~~~~~~~~~~~
  399 |                int samples,
      |                ~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:398:20: note: the first parameter in the range is 'channels'
  398 | void multiply (int channels,
      |                    ^~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:399:20: note: the last parameter in the range is 'samples'
  399 |                int samples,
      |                    ^~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:402:16: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  402 |                int destSkip = 0)
      |                ^            ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:404:3: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  404 |   for (int i = channels; --i >= 0;)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:404:26: warning: backward branch (for loop) is ID-dependent due to variable reference to 'i' and may cause performance degradation [altera-id-dependent-backward-branch]
  404 |   for (int i = channels; --i >= 0;)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:404:8: note: inferred assignment of ID-dependent value from ID-dependent 
  404 |   for (int i = channels; --i >= 0;)
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:404:36: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  404 |   for (int i = channels; --i >= 0;)
      |                                    ^
      |                                     {
  405 |     multiply (samples, dest[i], factor, destSkip);
      |                                                   
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:405:24: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  405 |     multiply (samples, dest[i], factor, destSkip);
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:417:15: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  417 |               int destSkip = 0,
      |               ^            ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:418:15: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  418 |               int srcSkip = 0 )
      |               ^           ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:426:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  426 |     while (--samples >= 0)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:435:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  435 |     while (--samples >= 0)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:435:27: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  435 |     while (--samples >= 0)
      |                           ^
      |                            {
  436 |       *dest++ = *--src;
      |                        
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:441:15: warning: 2 adjacent parameters of 'reverse' of convertible types are easily swapped by mistake [bugprone-easily-swappable-parameters]
  441 | void reverse (int channels, size_t frames, Td* const* dest, const Ts* const* src)
      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:441:19: note: the first parameter in the range is 'channels'
  441 | void reverse (int channels, size_t frames, Td* const* dest, const Ts* const* src)
      |                   ^~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:441:36: note: the last parameter in the range is 'frames'
  441 | void reverse (int channels, size_t frames, Td* const* dest, const Ts* const* src)
      |                                    ^~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:441:15: note: 
  441 | void reverse (int channels, size_t frames, Td* const* dest, const Ts* const* src)
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:441:29: note: 'int' and 'size_t' may be implicitly converted: 'int' -> 'size_t' (as 'unsigned long'), 'size_t' (as 'unsigned long') -> 'int'
  441 | void reverse (int channels, size_t frames, Td* const* dest, const Ts* const* src)
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:443:3: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  443 |   for (int i = channels; --i >= 0;)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:443:26: warning: backward branch (for loop) is ID-dependent due to variable reference to 'i' and may cause performance degradation [altera-id-dependent-backward-branch]
  443 |   for (int i = channels; --i >= 0;)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:443:8: note: inferred assignment of ID-dependent value from ID-dependent 
  443 |   for (int i = channels; --i >= 0;)
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:443:36: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  443 |   for (int i = channels; --i >= 0;)
      |                                    ^
      |                                     {
  444 |     reverse (frames, dest[i], src[i]);
      |                                       
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:444:22: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  444 |     reverse (frames, dest[i], src[i]);
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:444:31: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  444 |     reverse (frames, dest[i], src[i]);
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:452:2: warning: preprocessor condition is always 'true', consider removing condition but leaving its contents [readability-avoid-unconditional-preprocessor-if]
  452 | #if 1
      |  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:453:3: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  453 |   while (samples-- > 0)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:453:24: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  453 |   while (samples-- > 0)
      |                        ^
      |                         {
  454 |     *dest++ = (*left++ + *right++) * Tn(0.70710678118654752440084436210485);
      |                                                                             
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:454:41: warning: 0.70710678118654752440084436210485 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  454 |     *dest++ = (*left++ + *right++) * Tn(0.70710678118654752440084436210485);
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:464:16: warning: 2 adjacent parameters of 'validate' of similar type ('int') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  464 | void validate (int numChannels, int numSamples, T const* const* src)
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:464:20: note: the first parameter in the range is 'numChannels'
  464 | void validate (int numChannels, int numSamples, T const* const* src)
      |                    ^~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:464:37: note: the last parameter in the range is 'numSamples'
  464 | void validate (int numChannels, int numSamples, T const* const* src)
      |                                     ^~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:468:14: warning: variable name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  468 |     T const* p = src [i];
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:468:18: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  468 |     T const* p = src [i];
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:469:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  469 |     for (int j = numSamples; j > 0; --j)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:469:30: warning: backward branch (for loop) is ID-dependent due to variable reference to 'j' and may cause performance degradation [altera-id-dependent-backward-branch]
  469 |     for (int j = numSamples; j > 0; --j)
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:469:10: note: inferred assignment of ID-dependent value from ID-dependent 
  469 |     for (int j = numSamples; j > 0; --j)
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:471:9: warning: variable name 'v' is too short, expected at least 3 characters [readability-identifier-length]
  471 |       T v = *p++;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:479:2: warning: preprocessor condition is always 'false', consider removing both the condition and its contents [readability-avoid-unconditional-preprocessor-if]
  479 | #if 0
      |  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:540:12: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  540 |            int destSkip = 0)
      |            ^            ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:545:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  545 |     while (--samples >= 0)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:561:12: warning: 2 adjacent parameters of 'zero' of similar type ('int') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  561 | void zero (int channels,
      |            ^~~~~~~~~~~~~
  562 |            int samples,
      |            ~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:561:16: note: the first parameter in the range is 'channels'
  561 | void zero (int channels,
      |                ^~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:562:16: note: the last parameter in the range is 'samples'
  562 |            int samples,
      |                ^~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:564:12: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  564 |            int destSkip = 0)
      |            ^            ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:566:3: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  566 |   for (int i = channels; --i >= 0;)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:566:26: warning: backward branch (for loop) is ID-dependent due to variable reference to 'i' and may cause performance degradation [altera-id-dependent-backward-branch]
  566 |   for (int i = channels; --i >= 0;)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:566:8: note: inferred assignment of ID-dependent value from ID-dependent 
  566 |   for (int i = channels; --i >= 0;)
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:566:36: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  566 |   for (int i = channels; --i >= 0;)
      |                                    ^
      |                                     {
  567 |     zero (samples, dest[i], destSkip);
      |                                       
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:567:20: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  567 |     zero (samples, dest[i], destSkip);
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:583:8: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  583 | double BrentMinimize
      | ~~~~~~ ^
      | auto
  584 | (
  585 |   TFunction& f, // [in] objective function to minimize
  586 |   double leftEnd,       // [in] smaller value of bracketing interval
  587 |   double rightEnd,      // [in] larger value of bracketing interval
  588 |   double epsilon,       // [in] stopping tolerance
  589 |   double& minLoc        // [out] location of minimum
  590 | )
      |  
      |   -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:583:8: warning: function 'BrentMinimize' has cognitive complexity of 41 (threshold 25) [readability-function-cognitive-complexity]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:610:3: note: +1, including nesting penalty of 0, nesting level increased to 1
  610 |   if (::fabs(x - m) > t2 - 0.5*(b - a))
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:613:5: note: +2, including nesting penalty of 1, nesting level increased to 2
  613 |     if (::fabs(e) > tol)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:620:17: note: +3, including nesting penalty of 2, nesting level increased to 3
  620 |       (q > 0.0) ? p = -p : q = -q;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:624:5: note: +2, including nesting penalty of 1, nesting level increased to 2
  624 |     if (::fabs(p) < ::fabs(0.5*q*r) && p < q*(a - x) && p < q*(b - x))
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:624:54: note: +1
  624 |     if (::fabs(p) < ::fabs(0.5*q*r) && p < q*(a - x) && p < q*(b - x))
      |                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:630:7: note: +3, including nesting penalty of 2, nesting level increased to 3
  630 |       if (u - a < t2 || b - u < t2)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:630:22: note: +1
  630 |       if (u - a < t2 || b - u < t2)
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:631:21: note: +4, including nesting penalty of 3, nesting level increased to 4
  631 |         d = (x < m) ? tol : -tol;
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:633:5: note: +1, nesting level increased to 2
  633 |     else
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:636:19: note: +3, including nesting penalty of 2, nesting level increased to 3
  636 |       e = (x < m) ? b : a;
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:641:5: note: +2, including nesting penalty of 1, nesting level increased to 2
  641 |     if (::fabs(d) >= tol)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:643:10: note: +1, nesting level increased to 2
  643 |     else if (d > 0.0)
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:645:5: note: +1, nesting level increased to 2
  645 |     else
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:649:5: note: +2, including nesting penalty of 1, nesting level increased to 2
  649 |     if (fu <= fx)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:651:15: note: +3, including nesting penalty of 2, nesting level increased to 3
  651 |       (u < x) ? b = x : a = x;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:659:5: note: +1, nesting level increased to 2
  659 |     else
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:661:15: note: +3, including nesting penalty of 2, nesting level increased to 3
  661 |       (u < x) ? a = u : b = u;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:662:7: note: +3, including nesting penalty of 2, nesting level increased to 3
  662 |       if (fu <= fw || w == x)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:662:20: note: +1
  662 |       if (fu <= fw || w == x)
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:669:12: note: +1, nesting level increased to 3
  669 |       else if (fu <= fv || v == x || v == w)
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:669:35: note: +1
  669 |       else if (fu <= fv || v == x || v == w)
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:675:5: note: +1
  675 |     goto loop;  // Yes, the dreaded goto statement. But the code
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:585:14: warning: parameter name 'f' is too short, expected at least 3 characters [readability-identifier-length]
  585 |   TFunction& f, // [in] objective function to minimize
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:586:3: warning: 3 adjacent parameters of 'BrentMinimize' of similar type ('double') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  586 |   double leftEnd,       // [in] smaller value of bracketing interval
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  587 |   double rightEnd,      // [in] larger value of bracketing interval
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  588 |   double epsilon,       // [in] stopping tolerance
      |   ~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:586:10: note: the first parameter in the range is 'leftEnd'
  586 |   double leftEnd,       // [in] smaller value of bracketing interval
      |          ^~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:588:10: note: the last parameter in the range is 'epsilon'
  588 |   double epsilon,       // [in] stopping tolerance
      |          ^~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:3: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
  592 |   double d, e, m, p, q, r, tol, t2, u, v, w, fu, fv, fw, fx;
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:10: warning: variable 'd' is not initialized [cppcoreguidelines-init-variables]
  592 |   double d, e, m, p, q, r, tol, t2, u, v, w, fu, fv, fw, fx;
      |          ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:10: warning: variable name 'd' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:13: warning: variable 'e' is not initialized [cppcoreguidelines-init-variables]
  592 |   double d, e, m, p, q, r, tol, t2, u, v, w, fu, fv, fw, fx;
      |             ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:13: warning: variable name 'e' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:16: warning: variable 'm' is not initialized [cppcoreguidelines-init-variables]
  592 |   double d, e, m, p, q, r, tol, t2, u, v, w, fu, fv, fw, fx;
      |                ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:16: warning: variable name 'm' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:19: warning: variable 'p' is not initialized [cppcoreguidelines-init-variables]
  592 |   double d, e, m, p, q, r, tol, t2, u, v, w, fu, fv, fw, fx;
      |                   ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:19: warning: variable name 'p' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:22: warning: variable 'q' is not initialized [cppcoreguidelines-init-variables]
  592 |   double d, e, m, p, q, r, tol, t2, u, v, w, fu, fv, fw, fx;
      |                      ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:22: warning: variable name 'q' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:25: warning: variable 'r' is not initialized [cppcoreguidelines-init-variables]
  592 |   double d, e, m, p, q, r, tol, t2, u, v, w, fu, fv, fw, fx;
      |                         ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:25: warning: variable name 'r' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:28: warning: variable 'tol' is not initialized [cppcoreguidelines-init-variables]
  592 |   double d, e, m, p, q, r, tol, t2, u, v, w, fu, fv, fw, fx;
      |                            ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:33: warning: variable 't2' is not initialized [cppcoreguidelines-init-variables]
  592 |   double d, e, m, p, q, r, tol, t2, u, v, w, fu, fv, fw, fx;
      |                                 ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:33: warning: variable name 't2' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:37: warning: variable 'u' is not initialized [cppcoreguidelines-init-variables]
  592 |   double d, e, m, p, q, r, tol, t2, u, v, w, fu, fv, fw, fx;
      |                                     ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:37: warning: variable name 'u' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:40: warning: variable 'v' is not initialized [cppcoreguidelines-init-variables]
  592 |   double d, e, m, p, q, r, tol, t2, u, v, w, fu, fv, fw, fx;
      |                                        ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:40: warning: variable name 'v' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:43: warning: variable 'w' is not initialized [cppcoreguidelines-init-variables]
  592 |   double d, e, m, p, q, r, tol, t2, u, v, w, fu, fv, fw, fx;
      |                                           ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:43: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:46: warning: variable 'fu' is not initialized [cppcoreguidelines-init-variables]
  592 |   double d, e, m, p, q, r, tol, t2, u, v, w, fu, fv, fw, fx;
      |                                              ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:46: warning: variable name 'fu' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:50: warning: variable 'fv' is not initialized [cppcoreguidelines-init-variables]
  592 |   double d, e, m, p, q, r, tol, t2, u, v, w, fu, fv, fw, fx;
      |                                                  ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:50: warning: variable name 'fv' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:54: warning: variable 'fw' is not initialized [cppcoreguidelines-init-variables]
  592 |   double d, e, m, p, q, r, tol, t2, u, v, w, fu, fv, fw, fx;
      |                                                      ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:54: warning: variable name 'fw' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:58: warning: variable 'fx' is not initialized [cppcoreguidelines-init-variables]
  592 |   double d, e, m, p, q, r, tol, t2, u, v, w, fu, fv, fw, fx;
      |                                                          ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:592:58: warning: variable name 'fx' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:593:23: warning: variable name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  593 |   static const double c = 0.5*(3.0 - ::std::sqrt(5.0));
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:596:11: warning: variable name 'a' is too short, expected at least 3 characters [readability-identifier-length]
  596 |   double& a = leftEnd;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:597:11: warning: variable name 'b' is too short, expected at least 3 characters [readability-identifier-length]
  597 |   double& b = rightEnd;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:598:11: warning: variable name 'x' is too short, expected at least 3 characters [readability-identifier-length]
  598 |   double& x = minLoc;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:606:7: warning: 0.5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  606 |   m = 0.5*(a + b);
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:608:8: warning: 2.0 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  608 |   t2 = 2.0*tol;
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:610:28: warning: 0.5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  610 |   if (::fabs(x - m) > t2 - 0.5*(b - a))
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:619:11: warning: 2.0 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  619 |       q = 2.0*(q - r);
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:624:28: warning: 0.5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  624 |     if (::fabs(p) < ::fabs(0.5*q*r) && p < q*(a - x) && p < q*(b - x))
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:630:36: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  630 |       if (u - a < t2 || b - u < t2)
      |                                    ^
      |                                     {
  631 |         d = (x < m) ? tol : -tol;
      |                                  
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:641:26: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  641 |     if (::fabs(d) >= tol)
      |                          ^
      |                           {
  642 |       u = x + d;
  643 |     else if (d > 0.0)
      |     } 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:643:22: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  643 |     else if (d > 0.0)
      |                      ^
      |                       {
  644 |       u = x + tol;
  645 |     else
      |     } 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:645:9: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  645 |     else
      |         ^
      |          {
  646 |       u = x - tol;
      |                   
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:675:5: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
  675 |     goto loop;  // Yes, the dreaded goto statement. But the code
      |     ^~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:604:1: note: label defined here
  604 | loop:
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:688:3: warning: constructor does not initialize these fields: m_env, m_a, m_r [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
  688 |   EnvelopeFollower()
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:688:3: warning: 'EnvelopeFollower<Channels, Value>' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  688 |   EnvelopeFollower()
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:690:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  690 |     for (int i = 0; i < Channels; i++)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:690:39: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  690 |     for (int i = 0; i < Channels; i++)
      |                                       ^
      |                                        {
  691 |       m_env[i]=0;
      |                  
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:694:3: warning: overloading 'operator[]' is disallowed [fuchsia-overloaded-operator]
  694 |   Value operator[] (int channel) const
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:694:3: warning: 'operator[]' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  694 |   Value operator[] (int channel) const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:694:9: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  694 |   Value operator[] (int channel) const
      |   ~~~~~ ^                             
      |   auto                                 -> Value
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:699:3: warning: 'Setup' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  699 |   void Setup (int sampleRate, double attackMs, double releaseMs)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:699:31: warning: 2 adjacent parameters of 'Setup' of similar type ('double') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  699 |   void Setup (int sampleRate, double attackMs, double releaseMs)
      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:699:38: note: the first parameter in the range is 'attackMs'
  699 |   void Setup (int sampleRate, double attackMs, double releaseMs)
      |                                      ^~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:699:55: note: the last parameter in the range is 'releaseMs'
  699 |   void Setup (int sampleRate, double attackMs, double releaseMs)
      |                                                       ^~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:701:16: warning: 0.01 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  701 |     m_a = pow (0.01, 1.0 / (attackMs * sampleRate * 0.001));
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:701:53: warning: 0.001 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  701 |     m_a = pow (0.01, 1.0 / (attackMs * sampleRate * 0.001));
      |                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:702:16: warning: 0.01 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  702 |     m_r = pow (0.01, 1.0 / (releaseMs * sampleRate * 0.001));
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:702:54: warning: 0.001 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  702 |     m_r = pow (0.01, 1.0 / (releaseMs * sampleRate * 0.001));
      |                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:705:3: warning: 'Process' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  705 |   void Process (size_t samples, const Value** src)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:709:26: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  709 |       const Value* cur = src[i];
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:711:14: warning: variable name 'e' is too short, expected at least 3 characters [readability-identifier-length]
  711 |       double e = m_env[i];
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:712:7: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  712 |       for (int n = samples; n; n--)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:712:16: warning: loop variable name 'n' is too short, expected at least 2 characters [readability-identifier-length]
  712 |       for (int n = samples; n; n--)
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:712:20: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  712 |       for (int n = samples; n; n--)
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:712:29: warning: backward branch (for loop) is ID-dependent due to variable reference to 'n' and may cause performance degradation [altera-id-dependent-backward-branch]
  712 |       for (int n = samples; n; n--)
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:712:12: note: inferred assignment of ID-dependent value from ID-dependent 
  712 |       for (int n = samples; n; n--)
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:712:29: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
  712 |       for (int n = samples; n; n--)
      |                             ^
      |                               != 0
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:714:16: warning: variable name 'v' is too short, expected at least 3 characters [readability-identifier-length]
  714 |         double v = std::abs(*cur++);
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:715:19: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  715 |         if (v > e)
      |                   ^
      |                    {
  716 |           e = m_a * (e - v) + v;
  717 |         else
      |         } 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:717:13: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  717 |         else
      |             ^
      |              {
  718 |           e = m_r * (e - v) + v;
      |                                 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:724:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  724 |   double m_env[Channels];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:724:10: warning: member variable 'm_env' has public visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  724 |   double m_env[Channels];
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:727:10: warning: member variable 'm_a' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  727 |   double m_a;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:728:10: warning: member variable 'm_r' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  728 |   double m_r;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:738:3: warning: 'SlopeDetector<Channels, Value>' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  738 |   SlopeDetector () : m_firstTime(true)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:740:2: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  740 |         for (int i = 0; i < Channels; ++i)
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:740:36: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  740 |         for (int i = 0; i < Channels; ++i)
      |                                           ^
      |                                            {
  741 |           m_slope [i] = 0;
      |                           
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:744:3: warning: 'getSlope' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  744 |   Value getSlope (int channel) const
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:744:9: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  744 |   Value getSlope (int channel) const
      |   ~~~~~ ^                           
      |   auto                               -> Value
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:749:3: warning: 'process' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  749 |   void process (size_t numSamples, const Value** input)
      |   ^
      |   LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:753:23: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  753 |           const Value* src = input [i];
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:754:8: warning: variable name 'n' is too short, expected at least 3 characters [readability-identifier-length]
  754 |           int n = numSamples;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:754:12: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  754 |           int n = numSamples;
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:762:4: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  762 |           while (n > 0)
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:762:11: warning: backward branch (while loop) is ID-dependent due to variable reference to 'n' and may cause performance degradation [altera-id-dependent-backward-branch]
  762 |           while (n > 0)
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:754:4: note: inferred assignment of ID-dependent value from ID-dependent 
  754 |           int n = numSamples;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:776:8: warning: use default member initializer for 'm_firstTime' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  738 |   bool m_firstTime;
      |        ^          
      |                   {true}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:777:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  777 |   Value m_slope [Channels];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:778:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  778 |   Value m_prev [Channels];
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:781:1: warning: namespace 'Dsp' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  781 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/DspFilters/Utilities.h:41:11: note: namespace 'Dsp' starts here
   41 | namespace Dsp {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:17:1: warning: included header audio.h is not used directly [misc-include-cleaner]
   17 | #include "audio.h"
      | ^~~~~~~~~~~~~~~~~~
   18 | #include "noise/phil_burk_19990905_patest_pink.c"  // pink noise generator from  Phil Burk, http://www.softsynth.com
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:18:1: warning: #includes are not sorted properly [llvm-include-order]
   18 | #include "noise/phil_burk_19990905_patest_pink.c"  // pink noise generator from  Phil Burk, http://www.softsynth.com
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:18:11: warning: suspicious #include of file with '.c' extension [bugprone-suspicious-include]
   18 | #include "noise/phil_burk_19990905_patest_pink.c"  // pink noise generator from  Phil Burk, http://www.softsynth.com
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:19:1: warning: included header frequency_offset.h is not used directly [misc-include-cleaner]
   19 | #include "frequency_offset.h"
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   20 | 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:22:1: warning: #includes are not sorted properly [llvm-include-order]
   22 | #include "DspFilters/Dsp.h"
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:22:1: warning: included header Dsp.h is not used directly [misc-include-cleaner]
   22 | #include "DspFilters/Dsp.h"
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
   23 | #include "DspFilters/Param.cpp"
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:23:11: warning: suspicious #include of file with '.cpp' extension [bugprone-suspicious-include]
   23 | #include "DspFilters/Param.cpp"
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:24:11: warning: suspicious #include of file with '.cpp' extension [bugprone-suspicious-include]
   24 | #include "DspFilters/Design.cpp"
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:24:11: note: did you mean to include 'DspFilters/Design.h'?
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:25:11: warning: suspicious #include of file with '.cpp' extension [bugprone-suspicious-include]
   25 | #include "DspFilters/Filter.cpp"
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:25:11: note: did you mean to include 'DspFilters/Filter.h'?
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:26:11: warning: suspicious #include of file with '.cpp' extension [bugprone-suspicious-include]
   26 | #include "DspFilters/State.cpp"
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:26:11: note: did you mean to include 'DspFilters/State.h'?
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:27:11: warning: suspicious #include of file with '.cpp' extension [bugprone-suspicious-include]
   27 | #include "DspFilters/RootFinder.cpp"
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:27:11: note: did you mean to include 'DspFilters/RootFinder.h'?
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:28:11: warning: suspicious #include of file with '.cpp' extension [bugprone-suspicious-include]
   28 | #include "DspFilters/RBJ.cpp"
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:28:11: note: did you mean to include 'DspFilters/RBJ.h'?
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:29:11: warning: suspicious #include of file with '.cpp' extension [bugprone-suspicious-include]
   29 | #include "DspFilters/Biquad.cpp"
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:29:11: note: did you mean to include 'DspFilters/Biquad.h'?
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:31:1: warning: system include memory not allowed [llvmlibc-restrict-system-libc-headers]
   31 | #include <memory>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:31:1: warning: included header memory is not used directly [misc-include-cleaner]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:43:5: warning: 'InitializePinkNoise' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   43 |     InitializePinkNoise(&fgcom_PinkSource, 12);     // Init new PinkNoise source with num of rows
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:58:6: note: resolves to this declaration
   58 | void InitializePinkNoise( PinkNoise *pink, int numRows )
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:43:44: warning: 12 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   43 |     InitializePinkNoise(&fgcom_PinkSource, 12);     // Init new PinkNoise source with num of rows
      |                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:44:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   44 |     for (uint32_t s=0; s<channelCount*sampleCount; s++) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:44:19: warning: loop variable name 's' is too short, expected at least 2 characters [readability-identifier-length]
   44 |     for (uint32_t s=0; s<channelCount*sampleCount; s++) {
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:45:23: warning: 'GeneratePinkNoise' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   45 |         float noise = GeneratePinkNoise( &fgcom_PinkSource );
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:79:7: note: resolves to this declaration
   79 | float GeneratePinkNoise( PinkNoise *pink )
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:47:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   47 |         outputPCM[s] = outputPCM[s] + noise;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:47:24: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   47 |         outputPCM[s] = outputPCM[s] + noise;
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:55:23: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
   55 |     if (volume == 1.0) return; // no adjustment requested
      |                       ^                                  
      |                        {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:58:22: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
   58 |     if (volume < 0.0) volume = 0.0;
      |                      ^             
      |                       {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:59:18: warning: 2.0 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   59 |     if (volume > 2.0) volume = 2.0;  // Allow some headroom but prevent excessive amplification
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:59:22: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
   59 |     if (volume > 2.0) volume = 2.0;  // Allow some headroom but prevent excessive amplification
      |                      ^                                                                         
      |                       {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:59:32: warning: 2.0 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   59 |     if (volume > 2.0) volume = 2.0;  // Allow some headroom but prevent excessive amplification
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:61:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   61 |     for (uint32_t s=0; s<channelCount*sampleCount; s++) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:61:19: warning: loop variable name 's' is too short, expected at least 2 characters [readability-identifier-length]
   61 |     for (uint32_t s=0; s<channelCount*sampleCount; s++) {
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:62:10: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   62 |          outputPCM[s] = outputPCM[s] * volume;
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:62:25: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   62 |          outputPCM[s] = outputPCM[s] * volume;
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:65:14: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   65 |          if (outputPCM[s] > 1.0f) outputPCM[s] = 1.0f;
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:65:29: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   65 |          if (outputPCM[s] > 1.0f) outputPCM[s] = 1.0f;
      |                             ^  ~
      |                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:65:34: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
   65 |          if (outputPCM[s] > 1.0f) outputPCM[s] = 1.0f;
      |                                  ^                    
      |                                   {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:65:35: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   65 |          if (outputPCM[s] > 1.0f) outputPCM[s] = 1.0f;
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:65:50: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   65 |          if (outputPCM[s] > 1.0f) outputPCM[s] = 1.0f;
      |                                                  ^  ~
      |                                                     F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:66:14: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   66 |          if (outputPCM[s] < -1.0f) outputPCM[s] = -1.0f;
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:66:30: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   66 |          if (outputPCM[s] < -1.0f) outputPCM[s] = -1.0f;
      |                              ^  ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:66:35: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
   66 |          if (outputPCM[s] < -1.0f) outputPCM[s] = -1.0f;
      |                                   ^                     
      |                                    {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:66:36: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   66 |          if (outputPCM[s] < -1.0f) outputPCM[s] = -1.0f;
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:66:52: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   66 |          if (outputPCM[s] < -1.0f) outputPCM[s] = -1.0f;
      |                                                    ^  ~
      |                                                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:70:88: warning: 2 adjacent parameters of 'fgcom_audio_applySignalQualityDegradation' of convertible types are easily swapped by mistake [bugprone-easily-swappable-parameters]
   70 | void fgcom_audio_applySignalQualityDegradation(float *outputPCM, uint32_t sampleCount, uint16_t channelCount, float dropoutProbability) {
      |                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:70:97: note: the first parameter in the range is 'channelCount'
   70 | void fgcom_audio_applySignalQualityDegradation(float *outputPCM, uint32_t sampleCount, uint16_t channelCount, float dropoutProbability) {
      |                                                                                                 ^~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:70:117: note: the last parameter in the range is 'dropoutProbability'
   70 | void fgcom_audio_applySignalQualityDegradation(float *outputPCM, uint32_t sampleCount, uint16_t channelCount, float dropoutProbability) {
      |                                                                                                                     ^~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:70:88: note: 
   70 | void fgcom_audio_applySignalQualityDegradation(float *outputPCM, uint32_t sampleCount, uint16_t channelCount, float dropoutProbability) {
      |                                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:70:111: note: 'uint16_t' and 'float' may be implicitly converted: 'uint16_t' (as 'unsigned short') -> 'float', 'float' -> 'uint16_t' (as 'unsigned short')
   70 | void fgcom_audio_applySignalQualityDegradation(float *outputPCM, uint32_t sampleCount, uint16_t channelCount, float dropoutProbability) {
      |                                                                                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:75:35: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
   75 |     if (dropoutProbability <= 0.0) return; // No degradation needed
      |                                   ^                                
      |                                    {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:78:32: warning: 12345 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   78 |     static unsigned int seed = 12345;
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:80:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   80 |     for (uint32_t s=0; s<channelCount*sampleCount; s++) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:80:19: warning: loop variable name 's' is too short, expected at least 2 characters [readability-identifier-length]
   80 |     for (uint32_t s=0; s<channelCount*sampleCount; s++) {
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:82:24: warning: 1103515245 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   82 |         seed = (seed * 1103515245 + 12345) & 0x7fffffff;
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:82:37: warning: 12345 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   82 |         seed = (seed * 1103515245 + 12345) & 0x7fffffff;
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:82:46: warning: 0x7fffffff is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   82 |         seed = (seed * 1103515245 + 12345) & 0x7fffffff;
      |                                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:82:46: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
   82 |         seed = (seed * 1103515245 + 12345) & 0x7fffffff;
      |                                            ~ ^~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:83:9: warning: variable 'random' of type 'float' can be declared 'const' [misc-const-correctness]
   83 |         float random = (float)seed / 2147483647.0f;
      |         ^
      |               const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:83:24: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
   83 |         float random = (float)seed / 2147483647.0f;
      |                        ^~~~~~~
      |                        static_cast<float>( )
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:83:38: warning: 2147483647.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   83 |         float random = (float)seed / 2147483647.0f;
      |                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:83:38: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   83 |         float random = (float)seed / 2147483647.0f;
      |                                      ^           ~
      |                                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:87:13: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   87 |             outputPCM[s] *= 0.1f;  // Reduce to 10% of original signal
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:87:29: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   87 |             outputPCM[s] *= 0.1f;  // Reduce to 10% of original signal
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:87:29: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   87 |             outputPCM[s] *= 0.1f;  // Reduce to 10% of original signal
      |                             ^  ~
      |                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:94:27: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
   94 |     if (channelCount == 1) return; // no need to convert ono to mono!
      |                           ^                                          
      |                            {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:98:19: warning: loop variable name 's' is too short, expected at least 2 characters [readability-identifier-length]
   98 |     for (uint32_t s=0; s<channelCount*sampleCount; s+=channelCount) {
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:98:24: warning: backward branch (for loop) is ID-dependent due to variable reference to 's' and may cause performance degradation [altera-id-dependent-backward-branch]
   98 |     for (uint32_t s=0; s<channelCount*sampleCount; s+=channelCount) {
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:98:10: note: inferred assignment of ID-dependent value from ID-dependent 
   98 |     for (uint32_t s=0; s<channelCount*sampleCount; s+=channelCount) {
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:100:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  100 |         for (uint32_t c=0; c<channelCount; c++) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:100:23: warning: loop variable name 'c' is too short, expected at least 2 characters [readability-identifier-length]
  100 |         for (uint32_t c=0; c<channelCount; c++) {
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:101:20: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  101 |             sum += outputPCM[s+c]; // get the sum of the following channels sample
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:103:9: warning: variable 'avg' of type 'float' can be declared 'const' [misc-const-correctness]
  103 |         float avg = sum/channelCount;
      |         ^
      |               const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:103:25: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  103 |         float avg = sum/channelCount;
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:104:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  104 |         for (uint32_t c=0; c<channelCount; c++) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:104:23: warning: loop variable name 'c' is too short, expected at least 2 characters [readability-identifier-length]
  104 |         for (uint32_t c=0; c<channelCount; c++) {
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:105:13: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  105 |             outputPCM[s+c] = avg; // set average into stream
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:111:30: warning: variable 'f_highpass' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  111 | std::unique_ptr<Dsp::Filter> f_highpass(new Dsp::SmoothedFilterDesign <Dsp::RBJ::Design::HighPass, 1> (fadeOverNumSamples));
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:112:30: warning: variable 'f_lowpass' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  112 | std::unique_ptr<Dsp::Filter> f_lowpass(new Dsp::SmoothedFilterDesign <Dsp::RBJ::Design::LowPass, 1> (fadeOverNumSamples));
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:145:25: warning: 2 adjacent parameters of 'fgcom_audio_filter' of similar type ('int') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  145 | void fgcom_audio_filter(int highpass_cutoff, int lowpass_cutoff, float *outputPCM, uint32_t sampleCount, uint16_t channelCount, uint32_t sampleRateHz) {
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:145:29: note: the first parameter in the range is 'highpass_cutoff'
  145 | void fgcom_audio_filter(int highpass_cutoff, int lowpass_cutoff, float *outputPCM, uint32_t sampleCount, uint16_t channelCount, uint32_t sampleRateHz) {
      |                             ^~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:145:50: note: the last parameter in the range is 'lowpass_cutoff'
  145 | void fgcom_audio_filter(int highpass_cutoff, int lowpass_cutoff, float *outputPCM, uint32_t sampleCount, uint16_t channelCount, uint32_t sampleRateHz) {
      |                                                  ^~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:145:106: warning: 2 adjacent parameters of 'fgcom_audio_filter' of convertible types are easily swapped by mistake [bugprone-easily-swappable-parameters]
  145 | void fgcom_audio_filter(int highpass_cutoff, int lowpass_cutoff, float *outputPCM, uint32_t sampleCount, uint16_t channelCount, uint32_t sampleRateHz) {
      |                                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:145:115: note: the first parameter in the range is 'channelCount'
  145 | void fgcom_audio_filter(int highpass_cutoff, int lowpass_cutoff, float *outputPCM, uint32_t sampleCount, uint16_t channelCount, uint32_t sampleRateHz) {
      |                                                                                                                   ^~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:145:138: note: the last parameter in the range is 'sampleRateHz'
  145 | void fgcom_audio_filter(int highpass_cutoff, int lowpass_cutoff, float *outputPCM, uint32_t sampleCount, uint16_t channelCount, uint32_t sampleRateHz) {
      |                                                                                                                                          ^~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:145:106: note: 
  145 | void fgcom_audio_filter(int highpass_cutoff, int lowpass_cutoff, float *outputPCM, uint32_t sampleCount, uint16_t channelCount, uint32_t sampleRateHz) {
      |                                                                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:145:129: note: 'uint16_t' and 'uint32_t' may be implicitly converted: 'uint16_t' (as 'unsigned short') -> 'uint32_t' (as 'unsigned int'), 'uint32_t' (as 'unsigned int') -> 'uint16_t' (as 'unsigned short')
  145 | void fgcom_audio_filter(int highpass_cutoff, int lowpass_cutoff, float *outputPCM, uint32_t sampleCount, uint16_t channelCount, uint32_t sampleRateHz) {
      |                                                                                                                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:159:5: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  159 |     float* audioDataPtr[1];
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:165:14: warning: variable name 'ai' is too short, expected at least 3 characters [readability-identifier-length]
  165 |     uint32_t ai = 0;
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:166:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  166 |     for (uint32_t s=0; s<channelCount*sampleCount; s+=channelCount) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:166:19: warning: loop variable name 's' is too short, expected at least 2 characters [readability-identifier-length]
  166 |     for (uint32_t s=0; s<channelCount*sampleCount; s+=channelCount) {
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:166:24: warning: backward branch (for loop) is ID-dependent due to variable reference to 's' and may cause performance degradation [altera-id-dependent-backward-branch]
  166 |     for (uint32_t s=0; s<channelCount*sampleCount; s+=channelCount) {
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:166:10: note: inferred assignment of ID-dependent value from ID-dependent 
  166 |     for (uint32_t s=0; s<channelCount*sampleCount; s+=channelCount) {
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:187:27: warning: 2.0 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  187 |         f_highpass_p[2] = 2.0;                // Q factor (moderate rolloff)
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:199:26: warning: 0.97 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  199 |         f_lowpass_p[2] = 0.97;               // Q factor (gentle rolloff)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:208:19: warning: loop variable name 's' is too short, expected at least 2 characters [readability-identifier-length]
  208 |     for (uint32_t s=0; s<channelCount*sampleCount; s+=channelCount) {
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:208:24: warning: backward branch (for loop) is ID-dependent due to variable reference to 's' and may cause performance degradation [altera-id-dependent-backward-branch]
  208 |     for (uint32_t s=0; s<channelCount*sampleCount; s+=channelCount) {
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:208:10: note: inferred assignment of ID-dependent value from ID-dependent 
  208 |     for (uint32_t s=0; s<channelCount*sampleCount; s+=channelCount) {
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:209:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  209 |         for (uint32_t c=0; c<channelCount; c++) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:209:23: warning: loop variable name 'c' is too short, expected at least 2 characters [readability-identifier-length]
  209 |         for (uint32_t c=0; c<channelCount; c++) {
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:224:10: warning: implicit conversion 'float *' -> 'bool' [readability-implicit-bool-conversion]
  224 |     if (!outputPCM || sampleCount == 0 || channelCount == 0 || sampleRateHz == 0) {
      |         ~^
      |         (          == nullptr)
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:229:23: warning: 'getInstance' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  229 |     auto& processor = FGCom_FrequencyOffsetProcessor::getInstance();
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:101:44: note: resolves to this declaration
  101 |     static FGCom_FrequencyOffsetProcessor& getInstance();
      |                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:238:41: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  238 |         float* channel_data = outputPCM + channel;
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:242:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  242 |         for (uint32_t i = 0; i < sampleCount; i++) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:249:13: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  249 |             for (uint32_t i = 0; i < sampleCount; i++) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:260:10: warning: implicit conversion 'float *' -> 'bool' [readability-implicit-bool-conversion]
  260 |     if (!outputPCM || sampleCount == 0 || channelCount == 0 || sampleRateHz == 0 || intensity <= 0.0f) {
      |         ~^
      |         (          == nullptr)
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:260:98: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  260 |     if (!outputPCM || sampleCount == 0 || channelCount == 0 || sampleRateHz == 0 || intensity <= 0.0f) {
      |                                                                                                  ^  ~
      |                                                                                                     F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:266:5: warning: variable 'max_offset' of type 'float' can be declared 'const' [misc-const-correctness]
  266 |     float max_offset = 800.0f; // Maximum offset in Hz
      |     ^
      |           const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:266:24: warning: 800.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  266 |     float max_offset = 800.0f; // Maximum offset in Hz
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:266:24: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  266 |     float max_offset = 800.0f; // Maximum offset in Hz
      |                        ^    ~
      |                             F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:267:5: warning: variable 'offset_hz' of type 'float' can be declared 'const' [misc-const-correctness]
  267 |     float offset_hz = intensity * max_offset;
      |     ^
      |           const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:270:5: warning: 'fgcom_audio_applyFrequencyOffset' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  270 |     fgcom_audio_applyFrequencyOffset(offset_hz, outputPCM, sampleCount, channelCount, sampleRateHz);
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:223:6: note: resolves to this declaration
  223 | void fgcom_audio_applyFrequencyOffset(float offset_hz, float *outputPCM, uint32_t sampleCount, uint16_t channelCount, uint32_t sampleRateHz) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:276:36: warning: 2 adjacent parameters of 'fgcom_audio_applyDopplerShift' of similar type ('float') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  276 | void fgcom_audio_applyDopplerShift(float relative_velocity_mps, float carrier_frequency_hz, float *outputPCM, uint32_t sampleCount, uint16_t channelCount, uint32_t sampleRateHz) {
      |                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:276:42: note: the first parameter in the range is 'relative_velocity_mps'
  276 | void fgcom_audio_applyDopplerShift(float relative_velocity_mps, float carrier_frequency_hz, float *outputPCM, uint32_t sampleCount, uint16_t channelCount, uint32_t sampleRateHz) {
      |                                          ^~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:276:71: note: the last parameter in the range is 'carrier_frequency_hz'
  276 | void fgcom_audio_applyDopplerShift(float relative_velocity_mps, float carrier_frequency_hz, float *outputPCM, uint32_t sampleCount, uint16_t channelCount, uint32_t sampleRateHz) {
      |                                                                       ^~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:277:10: warning: implicit conversion 'float *' -> 'bool' [readability-implicit-bool-conversion]
  277 |     if (!outputPCM || sampleCount == 0 || channelCount == 0 || sampleRateHz == 0) {
      |         ~^
      |         (          == nullptr)
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:282:23: warning: 'getInstance' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  282 |     auto& processor = FGCom_FrequencyOffsetProcessor::getInstance();
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:101:44: note: resolves to this declaration
  101 |     static FGCom_FrequencyOffsetProcessor& getInstance();
      |                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:293:41: warning: 299792458.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  293 |     doppler_params.speed_of_light_mps = 299792458.0f;
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:293:41: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  293 |     doppler_params.speed_of_light_mps = 299792458.0f;
      |                                         ^          ~
      |                                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:295:52: warning: 1.0003f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  295 |     doppler_params.atmospheric_refraction_factor = 1.0003f;
      |                                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:295:52: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  295 |     doppler_params.atmospheric_refraction_factor = 1.0003f;
      |                                                    ^     ~
      |                                                          F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:301:41: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  301 |         float* channel_data = outputPCM + channel;
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:305:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  305 |         for (uint32_t i = 0; i < sampleCount; i++) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.cpp:312:13: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  312 |             for (uint32_t i = 0; i < sampleCount; i++) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.h:17:9: warning: header guard does not follow preferred style [llvm-header-guard]
   17 | #ifndef FGCOM_AUDIO_H
      |         ^~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_AUDIO_H
   18 | #define FGCOM_AUDIO_H
      |         ~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_AUDIO_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio.h:19:1: warning: #includes are not sorted properly [llvm-include-order]
   19 | #include "mumble/PluginComponents_v_1_0_x.h"
      | ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |          "frequency_offset.h"
   20 | #include "frequency_offset.h"
      |          ~~~~~~~~~~~~~~~~~~~~
      |          "mumble/PluginComponents_v_1_0_x.h"
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:1:9: warning: header guard does not follow preferred style [llvm-header-guard]
    1 | #ifndef FGCOM_FREQUENCY_OFFSET_H
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_FREQUENCY_OFFSET_H
    2 | #define FGCOM_FREQUENCY_OFFSET_H
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_FREQUENCY_OFFSET_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:4:1: warning: #includes are not sorted properly [llvm-include-order]
    4 | #include <complex>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:4:1: warning: system include complex not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h [llvmlibc-restrict-system-libc-headers]
    4 | #include <complex>
      | ^~~~~~~~~~~~~~~~~~
    5 | #include <vector>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:5:1: warning: system include vector not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h [llvmlibc-restrict-system-libc-headers]
    5 | #include <vector>
      | ^~~~~~~~~~~~~~~~~
    6 | #include <memory>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:6:1: warning: system include memory not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h [llvmlibc-restrict-system-libc-headers]
    6 | #include <memory>
      | ^~~~~~~~~~~~~~~~~
    7 | #include <cmath>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:7:1: warning: system include cmath not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h [llvmlibc-restrict-system-libc-headers]
    7 | #include <cmath>
      | ^~~~~~~~~~~~~~~~
    8 | #include <algorithm>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:8:1: warning: system include algorithm not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h [llvmlibc-restrict-system-libc-headers]
    8 | #include <algorithm>
      | ^~~~~~~~~~~~~~~~~~~~
    9 | #include <mutex>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:9:1: warning: system include mutex not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h [llvmlibc-restrict-system-libc-headers]
    9 | #include <mutex>
      | ^~~~~~~~~~~~~~~~
   10 | #include <chrono>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:10:1: warning: system include chrono not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h [llvmlibc-restrict-system-libc-headers]
   10 | #include <chrono>
      | ^~~~~~~~~~~~~~~~~
   11 | #include <functional>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:11:1: warning: system include functional not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h [llvmlibc-restrict-system-libc-headers]
   11 | #include <functional>
      | ^~~~~~~~~~~~~~~~~~~~~
   12 | 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:14:8: warning: accessing fields in struct 'FrequencyOffsetConfig' is inefficient due to padding; only needs 32 bytes but is using 36 bytes [altera-struct-pack-align]
   14 | struct FrequencyOffsetConfig {
      |        ^
   15 |     bool enable_frequency_offset = true;
   16 |     bool enable_donald_duck_effect = true;
   17 |     bool enable_doppler_shift = true;
   18 |     bool enable_heterodyne_mixing = true;
   19 |     float max_offset_hz = 1000.0f;        // Maximum frequency offset in Hz
   20 |     float min_offset_hz = -1000.0f;       // Minimum frequency offset in Hz
   21 |     float offset_smoothing_factor = 0.1f; // Smoothing factor for offset changes
   22 |     bool enable_analog_artifacts = true;  // Enable analog radio artifacts
   23 |     bool enable_digital_artifacts = false; // Enable digital radio artifacts
   24 |     float sample_rate = 48000.0f;         // Audio sample rate
   25 |     int fft_size = 1024;                  // FFT size for processing
   26 |     bool enable_real_time_processing = true;
   27 |     bool enable_batch_processing = false;
   28 |     float processing_latency_ms = 10.0f;  // Maximum processing latency
   29 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:14:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'FrequencyOffsetConfig'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:14:8: warning: accessing fields in struct 'FrequencyOffsetConfig' is inefficient due to poor alignment; currently aligned to 4 bytes, but recommended alignment is 32 bytes [altera-struct-pack-align]
   14 | struct FrequencyOffsetConfig {
      |        ^
   15 |     bool enable_frequency_offset = true;
   16 |     bool enable_donald_duck_effect = true;
   17 |     bool enable_doppler_shift = true;
   18 |     bool enable_heterodyne_mixing = true;
   19 |     float max_offset_hz = 1000.0f;        // Maximum frequency offset in Hz
   20 |     float min_offset_hz = -1000.0f;       // Minimum frequency offset in Hz
   21 |     float offset_smoothing_factor = 0.1f; // Smoothing factor for offset changes
   22 |     bool enable_analog_artifacts = true;  // Enable analog radio artifacts
   23 |     bool enable_digital_artifacts = false; // Enable digital radio artifacts
   24 |     float sample_rate = 48000.0f;         // Audio sample rate
   25 |     int fft_size = 1024;                  // FFT size for processing
   26 |     bool enable_real_time_processing = true;
   27 |     bool enable_batch_processing = false;
   28 |     float processing_latency_ms = 10.0f;  // Maximum processing latency
   29 | };
      |  
      |   __attribute__((aligned(32)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:14:8: note: use "__attribute__((aligned(32)))" to align struct 'FrequencyOffsetConfig' to 32 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:19:27: warning: 1000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   19 |     float max_offset_hz = 1000.0f;        // Maximum frequency offset in Hz
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:19:27: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   19 |     float max_offset_hz = 1000.0f;        // Maximum frequency offset in Hz
      |                           ^     ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:20:28: warning: 1000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   20 |     float min_offset_hz = -1000.0f;       // Minimum frequency offset in Hz
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:20:28: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   20 |     float min_offset_hz = -1000.0f;       // Minimum frequency offset in Hz
      |                            ^     ~
      |                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:21:37: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   21 |     float offset_smoothing_factor = 0.1f; // Smoothing factor for offset changes
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:21:37: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   21 |     float offset_smoothing_factor = 0.1f; // Smoothing factor for offset changes
      |                                     ^  ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:24:25: warning: 48000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   24 |     float sample_rate = 48000.0f;         // Audio sample rate
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:24:25: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   24 |     float sample_rate = 48000.0f;         // Audio sample rate
      |                         ^      ~
      |                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:25:20: warning: 1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   25 |     int fft_size = 1024;                  // FFT size for processing
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:28:35: warning: 10.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   28 |     float processing_latency_ms = 10.0f;  // Maximum processing latency
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:28:35: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   28 |     float processing_latency_ms = 10.0f;  // Maximum processing latency
      |                                   ^   ~
      |                                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:32:8: warning: accessing fields in struct 'FrequencyOffsetStats' is inefficient due to padding; only needs 69 bytes but is using 80 bytes [altera-struct-pack-align]
   32 | struct FrequencyOffsetStats {
      |        ^
   33 |     float current_offset_hz;
   34 |     float average_offset_hz;
   35 |     float peak_offset_hz;
   36 |     float offset_variance;
   37 |     int total_offsets_applied;
   38 |     float processing_time_ms;
   39 |     float cpu_usage_percent;
   40 |     std::chrono::system_clock::time_point last_update;
   41 |     std::vector<float> offset_history;    // Recent offset history
   42 |     bool is_processing_active;
   43 |     int dropped_samples;
   44 |     int processed_samples;
   45 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:32:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'FrequencyOffsetStats'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:32:8: warning: accessing fields in struct 'FrequencyOffsetStats' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 128 bytes [altera-struct-pack-align]
   32 | struct FrequencyOffsetStats {
      |        ^
   33 |     float current_offset_hz;
   34 |     float average_offset_hz;
   35 |     float peak_offset_hz;
   36 |     float offset_variance;
   37 |     int total_offsets_applied;
   38 |     float processing_time_ms;
   39 |     float cpu_usage_percent;
   40 |     std::chrono::system_clock::time_point last_update;
   41 |     std::vector<float> offset_history;    // Recent offset history
   42 |     bool is_processing_active;
   43 |     int dropped_samples;
   44 |     int processed_samples;
   45 | };
      |  
      |   __attribute__((aligned(128)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:32:8: note: use "__attribute__((aligned(128)))" to align struct 'FrequencyOffsetStats' to 128 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:48:8: warning: accessing fields in struct 'DopplerShiftParams' is inefficient due to padding; only needs 17 bytes but is using 20 bytes [altera-struct-pack-align]
   48 | struct DopplerShiftParams {
      |        ^
   49 |     float relative_velocity_mps;          // Relative velocity in m/s
   50 |     float carrier_frequency_hz;           // Carrier frequency in Hz
   51 |     float speed_of_light_mps = 299792458.0f; // Speed of light in m/s
   52 |     bool enable_relativistic_correction = true;
   53 |     float atmospheric_refraction_factor = 1.0003f;
   54 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:48:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'DopplerShiftParams'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:48:8: warning: accessing fields in struct 'DopplerShiftParams' is inefficient due to poor alignment; currently aligned to 4 bytes, but recommended alignment is 32 bytes [altera-struct-pack-align]
   48 | struct DopplerShiftParams {
      |        ^
   49 |     float relative_velocity_mps;          // Relative velocity in m/s
   50 |     float carrier_frequency_hz;           // Carrier frequency in Hz
   51 |     float speed_of_light_mps = 299792458.0f; // Speed of light in m/s
   52 |     bool enable_relativistic_correction = true;
   53 |     float atmospheric_refraction_factor = 1.0003f;
   54 | };
      |  
      |   __attribute__((aligned(32)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:48:8: note: use "__attribute__((aligned(32)))" to align struct 'DopplerShiftParams' to 32 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:48:8: warning: constructor does not initialize these fields: relative_velocity_mps, carrier_frequency_hz [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
   48 | struct DopplerShiftParams {
      |        ^
   49 |     float relative_velocity_mps;          // Relative velocity in m/s
      |                                
      |                                {}
   50 |     float carrier_frequency_hz;           // Carrier frequency in Hz
      |                               
      |                               {}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:51:32: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   51 |     float speed_of_light_mps = 299792458.0f; // Speed of light in m/s
      |                                ^          ~
      |                                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:53:43: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   53 |     float atmospheric_refraction_factor = 1.0003f;
      |                                           ^     ~
      |                                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:57:8: warning: accessing fields in struct 'HeterodyneMixingParams' is inefficient due to padding; only needs 18 bytes but is using 24 bytes [altera-struct-pack-align]
   57 | struct HeterodyneMixingParams {
      |        ^
   58 |     float local_oscillator_freq_hz;       // Local oscillator frequency
   59 |     float intermediate_freq_hz;           // Intermediate frequency
   60 |     bool enable_image_rejection = true;
   61 |     float image_rejection_db = 40.0f;     // Image rejection in dB
   62 |     bool enable_phase_noise = true;
   63 |     float phase_noise_db_hz = -80.0f;     // Phase noise in dB/Hz
   64 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:57:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'HeterodyneMixingParams'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:57:8: warning: accessing fields in struct 'HeterodyneMixingParams' is inefficient due to poor alignment; currently aligned to 4 bytes, but recommended alignment is 32 bytes [altera-struct-pack-align]
   57 | struct HeterodyneMixingParams {
      |        ^
   58 |     float local_oscillator_freq_hz;       // Local oscillator frequency
   59 |     float intermediate_freq_hz;           // Intermediate frequency
   60 |     bool enable_image_rejection = true;
   61 |     float image_rejection_db = 40.0f;     // Image rejection in dB
   62 |     bool enable_phase_noise = true;
   63 |     float phase_noise_db_hz = -80.0f;     // Phase noise in dB/Hz
   64 | };
      |  
      |   __attribute__((aligned(32)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:57:8: note: use "__attribute__((aligned(32)))" to align struct 'HeterodyneMixingParams' to 32 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:61:32: warning: 40.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   61 |     float image_rejection_db = 40.0f;     // Image rejection in dB
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:61:32: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   61 |     float image_rejection_db = 40.0f;     // Image rejection in dB
      |                                ^   ~
      |                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:63:32: warning: 80.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   63 |     float phase_noise_db_hz = -80.0f;     // Phase noise in dB/Hz
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:63:32: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   63 |     float phase_noise_db_hz = -80.0f;     // Phase noise in dB/Hz
      |                                ^   ~
      |                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:101:44: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  101 |     static FGCom_FrequencyOffsetProcessor& getInstance();
      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^            
      |            auto                                          -> FGCom_FrequencyOffsetProcessor&
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:105:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  105 |     bool applyFrequencyOffset(float* audio_buffer, size_t samples, float offset_hz);
      |     ~~~~ ^                                                                         
      |     auto                                                                            -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:106:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  106 |     bool applyDonaldDuckEffect(float* audio_buffer, size_t samples, float offset_hz);
      |     ~~~~ ^                                                                          
      |     auto                                                                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:107:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  107 |     bool applyDopplerShift(float* audio_buffer, size_t samples, const DopplerShiftParams& params);
      |     ~~~~ ^                                                                                       
      |     auto                                                                                          -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:108:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  108 |     bool applyHeterodyneMixing(float* audio_buffer, size_t samples, const HeterodyneMixingParams& params);
      |     ~~~~ ^                                                                                               
      |     auto                                                                                                  -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:111:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  111 |     bool applyComplexExponentialOffset(float* audio_buffer, size_t samples, float offset_hz);
      |     ~~~~ ^                                                                                  
      |     auto                                                                                     -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:112:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  112 |     bool applyAnalyticSignalOffset(float* audio_buffer, size_t samples, float offset_hz);
      |     ~~~~ ^                                                                              
      |     auto                                                                                 -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:113:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  113 |     bool applyFFTBasedOffset(float* audio_buffer, size_t samples, float offset_hz);
      |     ~~~~ ^                                                                        
      |     auto                                                                           -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:114:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  114 |     bool applyRealTimeOffset(float* audio_buffer, size_t samples, float offset_hz);
      |     ~~~~ ^                                                                        
      |     auto                                                                           -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:117:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  117 |     std::complex<float>* createAnalyticSignal(const float* audio_buffer, size_t samples);
      |     ~~~~~~~~~~~~~~~~~~~~ ^                                                              
      |     auto                                                                                 -> std::complex<float>*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:120:61: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  120 |     void applyWindowFunction(float* buffer, size_t samples, const std::string& window_type = "hann");
      |                                                             ^                              ~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:120:94: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  120 |     void applyWindowFunction(float* buffer, size_t samples, const std::string& window_type = "hann");
      |                                                                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:123:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  123 |     bool initializeFFT(int fft_size);
      |     ~~~~ ^                          
      |     auto                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:124:58: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  124 |     void performFFT(std::complex<float>* data, int size, bool inverse = false);
      |                                                          ^            ~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:130:27: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  130 |     FrequencyOffsetConfig getConfig() const;
      |     ~~~~~~~~~~~~~~~~~~~~~ ^                
      |     auto                                    -> FrequencyOffsetConfig
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:131:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  131 |     bool loadConfigFromFile(const std::string& config_file);
      |     ~~~~ ^                                                 
      |     auto                                                    -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:132:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  132 |     bool saveConfigToFile(const std::string& config_file) const;
      |     ~~~~ ^                                                     
      |     auto                                                        -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:136:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  136 |     DopplerShiftParams getDopplerParams() const;
      |     ~~~~~~~~~~~~~~~~~~ ^                       
      |     auto                                        -> DopplerShiftParams
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:137:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  137 |     float calculateDopplerShift(const DopplerShiftParams& params);
      |     ~~~~~ ^                                                      
      |     auto                                                          -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:138:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  138 |     bool updateDopplerShift(float relative_velocity_mps, float carrier_frequency_hz);
      |     ~~~~ ^                                                                          
      |     auto                                                                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:142:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  142 |     HeterodyneMixingParams getHeterodyneParams() const;
      |     ~~~~~~~~~~~~~~~~~~~~~~ ^                          
      |     auto                                               -> HeterodyneMixingParams
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:143:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  143 |     bool applyImageRejection(std::complex<float>* signal, size_t samples, float rejection_db);
      |     ~~~~ ^                                                                                   
      |     auto                                                                                      -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:144:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  144 |     bool applyPhaseNoise(std::complex<float>* signal, size_t samples, float noise_db_hz);
      |     ~~~~ ^                                                                              
      |     auto                                                                                 -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:147:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  147 |     bool startRealTimeProcessing();
      |     ~~~~ ^                        
      |     auto                           -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:148:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  148 |     bool stopRealTimeProcessing();
      |     ~~~~ ^                       
      |     auto                          -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:149:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  149 |     bool isRealTimeProcessingActive() const;
      |     ~~~~ ^                                 
      |     auto                                    -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:151:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  151 |     float getCurrentOffset() const;
      |     ~~~~~ ^                       
      |     auto                           -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:152:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  152 |     bool updateOffsetSmoothly(float target_offset_hz);
      |     ~~~~ ^                                           
      |     auto                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:155:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  155 |     FrequencyOffsetStats getStats() const;
      |     ~~~~~~~~~~~~~~~~~~~~ ^               
      |     auto                                  -> FrequencyOffsetStats
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:158:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  158 |     bool isProcessingActive() const;
      |     ~~~~ ^                         
      |     auto                            -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:159:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  159 |     float getProcessingLatency() const;
      |     ~~~~~ ^                           
      |     auto                               -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:160:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  160 |     float getCPUUsage() const;
      |     ~~~~~ ^                  
      |     auto                      -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:163:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  163 |     bool setSampleRate(float sample_rate);
      |     ~~~~ ^                               
      |     auto                                  -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:164:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  164 |     float getSampleRate() const;
      |     ~~~~~ ^                    
      |     auto                        -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:165:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  165 |     bool setFFTSize(int fft_size);
      |     ~~~~ ^                       
      |     auto                          -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:166:9: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  166 |     int getFFTSize() const;
      |     ~~~ ^                 
      |     auto                   -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:167:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  167 |     bool optimizeForLatency();
      |     ~~~~ ^                   
      |     auto                      -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:168:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  168 |     bool optimizeForQuality();
      |     ~~~~ ^                   
      |     auto                      -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:171:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  171 |     bool validateOffset(float offset_hz) const;
      |     ~~~~ ^                                    
      |     auto                                       -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:172:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  172 |     bool validateSampleRate(float sample_rate) const;
      |     ~~~~ ^                                          
      |     auto                                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:173:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  173 |     bool validateFFTSize(int fft_size) const;
      |     ~~~~ ^                                  
      |     auto                                     -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:174:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  174 |     std::string getLastError() const;
      |     ~~~~~~~~~~~ ^                   
      |     auto                             -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:197:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  197 |     float calculateHannWindow(int n, int N);
      |     ~~~~~ ^                                
      |     auto                                    -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:197:42: warning: parameter name 'N' is too short, expected at least 3 characters [readability-identifier-length]
  197 |     float calculateHannWindow(int n, int N);
      |                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:198:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  198 |     float calculateHammingWindow(int n, int N);
      |     ~~~~~ ^                                   
      |     auto                                       -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:198:45: warning: parameter name 'N' is too short, expected at least 3 characters [readability-identifier-length]
  198 |     float calculateHammingWindow(int n, int N);
      |                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:199:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  199 |     float calculateBlackmanWindow(int n, int N);
      |     ~~~~~ ^                                    
      |     auto                                        -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:199:46: warning: parameter name 'N' is too short, expected at least 3 characters [readability-identifier-length]
  199 |     float calculateBlackmanWindow(int n, int N);
      |                                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:213:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  213 |     float hzToRadians(float frequency_hz, float sample_rate);
      |     ~~~~~ ^                                                 
      |     auto                                                     -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:214:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  214 |     float radiansToHz(float radians, float sample_rate);
      |     ~~~~~ ^                                            
      |     auto                                                -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:215:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  215 |     float normalizeFrequency(float frequency_hz, float sample_rate);
      |     ~~~~~ ^                                                        
      |     auto                                                            -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:216:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  216 |     float denormalizeFrequency(float normalized_freq, float sample_rate);
      |     ~~~~~ ^                                                             
      |     auto                                                                 -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:219:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  219 |     std::complex<float> createComplexExponential(float frequency_hz, float time, float sample_rate);
      |     ~~~~~~~~~~~~~~~~~~~ ^                                                                          
      |     auto                                                                                            -> std::complex<float>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:220:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  220 |     std::complex<float> createComplexExponential(float frequency_hz, float time);
      |     ~~~~~~~~~~~~~~~~~~~ ^                                                       
      |     auto                                                                         -> std::complex<float>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:221:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  221 |     float getMagnitude(const std::complex<float>& complex_num);
      |     ~~~~~ ^                                                   
      |     auto                                                       -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:222:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  222 |     float getPhase(const std::complex<float>& complex_num);
      |     ~~~~~ ^                                               
      |     auto                                                   -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:223:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  223 |     std::complex<float> fromMagnitudePhase(float magnitude, float phase);
      |     ~~~~~~~~~~~~~~~~~~~ ^                                               
      |     auto                                                                 -> std::complex<float>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:226:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  226 |     float calculateSNR(const float* signal, size_t samples);
      |     ~~~~~ ^                                                
      |     auto                                                    -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:227:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  227 |     float calculateTHD(const float* signal, size_t samples, float fundamental_freq, float sample_rate);
      |     ~~~~~ ^                                                                                           
      |     auto                                                                                               -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:228:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  228 |     float calculateDynamicRange(const float* signal, size_t samples);
      |     ~~~~~ ^                                                         
      |     auto                                                             -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:229:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  229 |     bool detectClipping(const float* signal, size_t samples, float threshold = 0.95f);
      |     ~~~~ ^                                                                           
      |     auto                                                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:229:62: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  229 |     bool detectClipping(const float* signal, size_t samples, float threshold = 0.95f);
      |                                                              ^               ~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:229:80: warning: 0.95f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  229 |     bool detectClipping(const float* signal, size_t samples, float threshold = 0.95f);
      |                                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:229:80: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:232:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  232 |     float calculateDopplerShift(float relative_velocity_mps, float carrier_frequency_hz, float speed_of_light_mps = 299792458.0f);
      |     ~~~~~ ^                                                                                                                      
      |     auto                                                                                                                          -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:232:90: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  232 |     float calculateDopplerShift(float relative_velocity_mps, float carrier_frequency_hz, float speed_of_light_mps = 299792458.0f);
      |                                                                                          ^                        ~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:232:117: warning: 299792458.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  232 |     float calculateDopplerShift(float relative_velocity_mps, float carrier_frequency_hz, float speed_of_light_mps = 299792458.0f);
      |                                                                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:232:117: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:233:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  233 |     float calculateRelativisticDopplerShift(float relative_velocity_mps, float carrier_frequency_hz);
      |     ~~~~~ ^                                                                                         
      |     auto                                                                                             -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:234:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  234 |     float calculateAtmosphericRefractionCorrection(float elevation_angle_deg, float frequency_hz);
      |     ~~~~~ ^                                                                                      
      |     auto                                                                                          -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:237:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  237 |     std::complex<float> createLocalOscillator(float frequency_hz, float time, float sample_rate);
      |     ~~~~~~~~~~~~~~~~~~~ ^                                                                       
      |     auto                                                                                         -> std::complex<float>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:239:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  239 |     float calculateImageRejection(float if_freq, float rf_freq, float lo_freq);
      |     ~~~~~ ^                                                                   
      |     auto                                                                       -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:240:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  240 |     float calculatePhaseNoiseVariance(float phase_noise_db_hz, float bandwidth_hz);
      |     ~~~~~ ^                                                                       
      |     auto                                                                           -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:243:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  243 |     float calculateSpectralCentroid(const float* signal, size_t samples, float sample_rate);
      |     ~~~~~ ^                                                                                
      |     auto                                                                                    -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:244:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  244 |     float calculateSpectralRolloff(const float* signal, size_t samples, float sample_rate, float rolloff_percent = 0.85f);
      |     ~~~~~ ^                                                                                                              
      |     auto                                                                                                                  -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:244:92: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  244 |     float calculateSpectralRolloff(const float* signal, size_t samples, float sample_rate, float rolloff_percent = 0.85f);
      |                                                                                            ^                     ~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:244:116: warning: 0.85f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  244 |     float calculateSpectralRolloff(const float* signal, size_t samples, float sample_rate, float rolloff_percent = 0.85f);
      |                                                                                                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:244:116: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:245:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  245 |     float calculateSpectralFlux(const float* signal, size_t samples, float sample_rate);
      |     ~~~~~ ^                                                                            
      |     auto                                                                                -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:246:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  246 |     float calculateZeroCrossingRate(const float* signal, size_t samples);
      |     ~~~~~ ^                                                             
      |     auto                                                                 -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:250:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  250 |     float calculateWindowGain(const float* window, int size);
      |     ~~~~~ ^                                                 
      |     auto                                                     -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:252:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  252 |     std::string getAvailableWindowTypes();
      |     ~~~~~~~~~~~ ^                        
      |     auto                                  -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:253:1: warning: namespace 'FrequencyOffsetUtils' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  253 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:211:11: note: namespace 'FrequencyOffsetUtils' starts here
  211 | namespace FrequencyOffsetUtils {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:21:9: warning: header guard does not follow preferred style [llvm-header-guard]
   21 | #ifndef FGCOM_GLOBALS_H
      |         ^~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_GLOBALVARS_H
   22 | #define FGCOM_GLOBALS_H
      |         ~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_GLOBALVARS_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:24:1: warning: #includes are not sorted properly [llvm-include-order]
   24 | #include <vector>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:24:1: warning: system include vector not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h [llvmlibc-restrict-system-libc-headers]
   24 | #include <vector>
      | ^~~~~~~~~~~~~~~~~
   25 | #include <string>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:25:1: warning: system include string not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h [llvmlibc-restrict-system-libc-headers]
   25 | #include <string>
      | ^~~~~~~~~~~~~~~~~
   26 | #include <mutex>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:26:1: warning: system include mutex not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h [llvmlibc-restrict-system-libc-headers]
   26 | #include <mutex>
      | ^~~~~~~~~~~~~~~~
   27 | #include <map>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:27:1: warning: system include map not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h [llvmlibc-restrict-system-libc-headers]
   27 | #include <map>
      | ^~~~~~~~~~~~~~
   28 | #include "mumble/MumblePlugin_v_1_0_x.h"
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:36:8: warning: accessing fields in struct 'fgcom_config' is inefficient due to padding; only needs 216 bytes but is using 240 bytes [altera-struct-pack-align]
   36 | struct fgcom_config {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:36:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'fgcom_config'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:36:8: warning: accessing fields in struct 'fgcom_config' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 128 bytes [altera-struct-pack-align]
   36 | struct fgcom_config {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:36:8: note: use "__attribute__((aligned(128)))" to align struct 'fgcom_config' to 128 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:37:17: warning: member variable 'allowHearingNonPluginUsers' has public visibility [misc-non-private-member-variables-in-classes]
   37 |     bool        allowHearingNonPluginUsers;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:38:17: warning: member variable 'radioAudioEffects' has public visibility [misc-non-private-member-variables-in-classes]
   38 |     bool        radioAudioEffects;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:39:17: warning: member variable 'specialChannel' has public visibility [misc-non-private-member-variables-in-classes]
   39 |     std::string specialChannel;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:40:17: warning: member variable 'udpServerHost' has public visibility [misc-non-private-member-variables-in-classes]
   40 |     std::string udpServerHost;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:41:17: warning: member variable 'udpServerPort' has public visibility [misc-non-private-member-variables-in-classes]
   41 |     int         udpServerPort;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:42:17: warning: member variable 'logfile' has public visibility [misc-non-private-member-variables-in-classes]
   42 |     std::string logfile;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:43:25: warning: member variable 'mapMumblePTT' has public visibility [misc-non-private-member-variables-in-classes]
   43 |     std::map<int, bool> mapMumblePTT;  // which radios to activate when mumble-internal talk activation is used
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:44:17: warning: member variable 'alwaysMumblePTT' has public visibility [misc-non-private-member-variables-in-classes]
   44 |     bool        alwaysMumblePTT;       // if true, always enable mumble PTT on COM/PTT, even if plugin not active
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:45:17: warning: member variable 'updaterURL' has public visibility [misc-non-private-member-variables-in-classes]
   45 |     std::string updaterURL;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:46:17: warning: member variable 'autoJoinChannel' has public visibility [misc-non-private-member-variables-in-classes]
   46 |     bool        autoJoinChannel;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:47:17: warning: member variable 'autoJoinChannelPW' has public visibility [misc-non-private-member-variables-in-classes]
   47 |     std::string autoJoinChannelPW;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:49:5: warning: 'fgcom_config' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   49 |     fgcom_config()  {
      |     ^
      |     LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:50:9: warning: 'allowHearingNonPluginUsers' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   37 |     bool        allowHearingNonPluginUsers;
      |                                           
      |                                           {false}
   38 |     bool        radioAudioEffects;
   39 |     std::string specialChannel;
   40 |     std::string udpServerHost;
   41 |     int         udpServerPort;
   42 |     std::string logfile;
   43 |     std::map<int, bool> mapMumblePTT;  // which radios to activate when mumble-internal talk activation is used
   44 |     bool        alwaysMumblePTT;       // if true, always enable mumble PTT on COM/PTT, even if plugin not active
   45 |     std::string updaterURL;
   46 |     bool        autoJoinChannel;
   47 |     std::string autoJoinChannelPW;
   48 |     
   49 |     fgcom_config()  {
   50 |         allowHearingNonPluginUsers = false;
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:51:9: warning: 'radioAudioEffects' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   38 |     bool        radioAudioEffects;
      |                                  
      |                                  {true}
   39 |     std::string specialChannel;
   40 |     std::string udpServerHost;
   41 |     int         udpServerPort;
   42 |     std::string logfile;
   43 |     std::map<int, bool> mapMumblePTT;  // which radios to activate when mumble-internal talk activation is used
   44 |     bool        alwaysMumblePTT;       // if true, always enable mumble PTT on COM/PTT, even if plugin not active
   45 |     std::string updaterURL;
   46 |     bool        autoJoinChannel;
   47 |     std::string autoJoinChannelPW;
   48 |     
   49 |     fgcom_config()  {
   50 |         allowHearingNonPluginUsers = false;
   51 |         radioAudioEffects = true;
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:52:9: warning: 'specialChannel' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   39 |     std::string specialChannel;
      |                               
      |                               {"^fgcom-mumble.*"}
   40 |     std::string udpServerHost;
   41 |     int         udpServerPort;
   42 |     std::string logfile;
   43 |     std::map<int, bool> mapMumblePTT;  // which radios to activate when mumble-internal talk activation is used
   44 |     bool        alwaysMumblePTT;       // if true, always enable mumble PTT on COM/PTT, even if plugin not active
   45 |     std::string updaterURL;
   46 |     bool        autoJoinChannel;
   47 |     std::string autoJoinChannelPW;
   48 |     
   49 |     fgcom_config()  {
   50 |         allowHearingNonPluginUsers = false;
   51 |         radioAudioEffects = true;
   52 |         specialChannel    = "^fgcom-mumble.*";
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:52:27: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   52 |         specialChannel    = "^fgcom-mumble.*";
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:53:9: warning: 'udpServerHost' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   40 |     std::string udpServerHost;
      |                              
      |                              {"127.0.0.1"}
   41 |     int         udpServerPort;
   42 |     std::string logfile;
   43 |     std::map<int, bool> mapMumblePTT;  // which radios to activate when mumble-internal talk activation is used
   44 |     bool        alwaysMumblePTT;       // if true, always enable mumble PTT on COM/PTT, even if plugin not active
   45 |     std::string updaterURL;
   46 |     bool        autoJoinChannel;
   47 |     std::string autoJoinChannelPW;
   48 |     
   49 |     fgcom_config()  {
   50 |         allowHearingNonPluginUsers = false;
   51 |         radioAudioEffects = true;
   52 |         specialChannel    = "^fgcom-mumble.*";
   53 |         udpServerHost     = "127.0.0.1";
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:53:27: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   53 |         udpServerHost     = "127.0.0.1";
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:54:9: warning: 'udpServerPort' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   41 |     int         udpServerPort;
      |                              
      |                              {16661}
   42 |     std::string logfile;
   43 |     std::map<int, bool> mapMumblePTT;  // which radios to activate when mumble-internal talk activation is used
   44 |     bool        alwaysMumblePTT;       // if true, always enable mumble PTT on COM/PTT, even if plugin not active
   45 |     std::string updaterURL;
   46 |     bool        autoJoinChannel;
   47 |     std::string autoJoinChannelPW;
   48 |     
   49 |     fgcom_config()  {
   50 |         allowHearingNonPluginUsers = false;
   51 |         radioAudioEffects = true;
   52 |         specialChannel    = "^fgcom-mumble.*";
   53 |         udpServerHost     = "127.0.0.1";
   54 |         udpServerPort     = 16661;
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:54:29: warning: 16661 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   54 |         udpServerPort     = 16661;
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:55:9: warning: 'logfile' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   42 |     std::string logfile;
      |                        
      |                        {""}
   43 |     std::map<int, bool> mapMumblePTT;  // which radios to activate when mumble-internal talk activation is used
   44 |     bool        alwaysMumblePTT;       // if true, always enable mumble PTT on COM/PTT, even if plugin not active
   45 |     std::string updaterURL;
   46 |     bool        autoJoinChannel;
   47 |     std::string autoJoinChannelPW;
   48 |     
   49 |     fgcom_config()  {
   50 |         allowHearingNonPluginUsers = false;
   51 |         radioAudioEffects = true;
   52 |         specialChannel    = "^fgcom-mumble.*";
   53 |         udpServerHost     = "127.0.0.1";
   54 |         udpServerPort     = 16661;
   55 |         logfile           = "";
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:55:27: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   55 |         logfile           = "";
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:56:27: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   56 |         mapMumblePTT      = {{0,true}};
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:349:7: note: resolves to this declaration
  349 |       operator=(initializer_list<value_type> __l)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:57:9: warning: 'alwaysMumblePTT' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   44 |     bool        alwaysMumblePTT;       // if true, always enable mumble PTT on COM/PTT, even if plugin not active
      |                                
      |                                {false}
   45 |     std::string updaterURL;
   46 |     bool        autoJoinChannel;
   47 |     std::string autoJoinChannelPW;
   48 |     
   49 |     fgcom_config()  {
   50 |         allowHearingNonPluginUsers = false;
   51 |         radioAudioEffects = true;
   52 |         specialChannel    = "^fgcom-mumble.*";
   53 |         udpServerHost     = "127.0.0.1";
   54 |         udpServerPort     = 16661;
   55 |         logfile           = "";
   56 |         mapMumblePTT      = {{0,true}};
   57 |         alwaysMumblePTT   = false;
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:58:9: warning: 'updaterURL' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   45 |     std::string updaterURL;
      |                           
      |                           {""}
   46 |     bool        autoJoinChannel;
   47 |     std::string autoJoinChannelPW;
   48 |     
   49 |     fgcom_config()  {
   50 |         allowHearingNonPluginUsers = false;
   51 |         radioAudioEffects = true;
   52 |         specialChannel    = "^fgcom-mumble.*";
   53 |         udpServerHost     = "127.0.0.1";
   54 |         udpServerPort     = 16661;
   55 |         logfile           = "";
   56 |         mapMumblePTT      = {{0,true}};
   57 |         alwaysMumblePTT   = false;
   58 |         updaterURL        = "";
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:58:27: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   58 |         updaterURL        = "";
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:59:9: warning: 'autoJoinChannel' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   46 |     bool        autoJoinChannel;
      |                                
      |                                {false}
   47 |     std::string autoJoinChannelPW;
   48 |     
   49 |     fgcom_config()  {
   50 |         allowHearingNonPluginUsers = false;
   51 |         radioAudioEffects = true;
   52 |         specialChannel    = "^fgcom-mumble.*";
   53 |         udpServerHost     = "127.0.0.1";
   54 |         udpServerPort     = 16661;
   55 |         logfile           = "";
   56 |         mapMumblePTT      = {{0,true}};
   57 |         alwaysMumblePTT   = false;
   58 |         updaterURL        = "";
   59 |         autoJoinChannel   = false;
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:60:9: warning: 'autoJoinChannelPW' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   47 |     std::string autoJoinChannelPW;
      |                                  
      |                                  {""}
   48 |     
   49 |     fgcom_config()  {
   50 |         allowHearingNonPluginUsers = false;
   51 |         radioAudioEffects = true;
   52 |         specialChannel    = "^fgcom-mumble.*";
   53 |         udpServerHost     = "127.0.0.1";
   54 |         udpServerPort     = 16661;
   55 |         logfile           = "";
   56 |         mapMumblePTT      = {{0,true}};
   57 |         alwaysMumblePTT   = false;
   58 |         updaterURL        = "";
   59 |         autoJoinChannel   = false;
   60 |         autoJoinChannelPW = "";
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:60:27: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   60 |         autoJoinChannelPW = "";
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:63:28: warning: variable 'fgcom_cfg' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   63 | extern struct fgcom_config fgcom_cfg;
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:67:8: warning: accessing fields in struct 'fgcom_client' is inefficient due to padding; only needs 128 bytes but is using 136 bytes [altera-struct-pack-align]
   67 | struct fgcom_client {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:67:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'fgcom_client'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:67:8: warning: accessing fields in struct 'fgcom_client' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 128 bytes [altera-struct-pack-align]
   67 | struct fgcom_client {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:67:8: note: use "__attribute__((aligned(128)))" to align struct 'fgcom_client' to 128 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:68:21: warning: member variable 'mumid' has public visibility [misc-non-private-member-variables-in-classes]
   68 |     mumble_userid_t mumid;  // mumble client ID
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:69:14: warning: member variable 'clientPort' has public visibility [misc-non-private-member-variables-in-classes]
   69 |     uint16_t clientPort;    // client port of the identity, for identification
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:70:14: warning: member variable 'clientTgtPort' has public visibility [misc-non-private-member-variables-in-classes]
   70 |     uint16_t clientTgtPort; // client port of the identity, we may send packets to this port
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:71:17: warning: member variable 'clientHost' has public visibility [misc-non-private-member-variables-in-classes]
   71 |     std::string clientHost; // client host of the identity
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:72:43: warning: member variable 'lastUpdate' has public visibility [misc-non-private-member-variables-in-classes]
   72 |     std::chrono::system_clock::time_point lastUpdate;       // when we received the last data
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:73:43: warning: member variable 'lastNotification' has public visibility [misc-non-private-member-variables-in-classes]
   73 |     std::chrono::system_clock::time_point lastNotification; // when we sent the last answer for incoming NTF_ASK packets
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:74:11: warning: member variable 'lon' has public visibility [misc-non-private-member-variables-in-classes]
   74 |     float lon;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:75:11: warning: member variable 'lat' has public visibility [misc-non-private-member-variables-in-classes]
   75 |     float lat;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:76:11: warning: member variable 'alt' has public visibility [misc-non-private-member-variables-in-classes]
   76 |     float alt;  // in meters
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:77:18: warning: member variable 'callsign' has public visibility [misc-non-private-member-variables-in-classes]
   77 |     std::string  callsign;
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:78:30: warning: member variable 'radios' has public visibility [misc-non-private-member-variables-in-classes]
   78 |     std::vector<fgcom_radio> radios;
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:79:11: warning: member variable 'lastSeenSignal' has public visibility [misc-non-private-member-variables-in-classes]
   79 |     float lastSeenSignal;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:80:5: warning: constructor does not initialize these fields: mumid, clientPort, clientTgtPort [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
   68 |     mumble_userid_t mumid;  // mumble client ID
      |                          
      |                          {}
   69 |     uint16_t clientPort;    // client port of the identity, for identification
      |                        
      |                        {}
   70 |     uint16_t clientTgtPort; // client port of the identity, we may send packets to this port
      |                           
      |                           {}
   71 |     std::string clientHost; // client host of the identity
   72 |     std::chrono::system_clock::time_point lastUpdate;       // when we received the last data
   73 |     std::chrono::system_clock::time_point lastNotification; // when we sent the last answer for incoming NTF_ASK packets
   74 |     float lon;
   75 |     float lat;
   76 |     float alt;  // in meters
   77 |     std::string  callsign;
   78 |     std::vector<fgcom_radio> radios;
   79 |     float lastSeenSignal;
   80 |     fgcom_client()  {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:80:5: warning: 'fgcom_client' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   80 |     fgcom_client()  {
      |     ^
      |     LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:81:9: warning: 'lon' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   74 |     float lon;
      |              
      |              {-130.000}
   75 |     float lat;
   76 |     float alt;  // in meters
   77 |     std::string  callsign;
   78 |     std::vector<fgcom_radio> radios;
   79 |     float lastSeenSignal;
   80 |     fgcom_client()  {
   81 |         lon = -130.000;   // 60°S / 130°W is somewhere in the middle of the pacific ocean... 
      |         ^~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:81:16: warning: 130.000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   81 |         lon = -130.000;   // 60°S / 130°W is somewhere in the middle of the pacific ocean... 
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:82:9: warning: 'lat' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   75 |     float lat;
      |              
      |              {-60.000}
   76 |     float alt;  // in meters
   77 |     std::string  callsign;
   78 |     std::vector<fgcom_radio> radios;
   79 |     float lastSeenSignal;
   80 |     fgcom_client()  {
   81 |         lon = -130.000;   // 60°S / 130°W is somewhere in the middle of the pacific ocean... 
   82 |         lat = -60.000;
      |         ^~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:82:16: warning: 60.000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   82 |         lat = -60.000;
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:83:9: warning: 'alt' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   76 |     float alt;  // in meters
      |              
      |              {-1}
   77 |     std::string  callsign;
   78 |     std::vector<fgcom_radio> radios;
   79 |     float lastSeenSignal;
   80 |     fgcom_client()  {
   81 |         lon = -130.000;   // 60°S / 130°W is somewhere in the middle of the pacific ocean... 
   82 |         lat = -60.000;
   83 |         alt = -1;
      |         ^~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:84:9: warning: 'callsign' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   77 |     std::string  callsign;
      |                          
      |                          {"ZZZZ"}
   78 |     std::vector<fgcom_radio> radios;
   79 |     float lastSeenSignal;
   80 |     fgcom_client()  {
   81 |         lon = -130.000;   // 60°S / 130°W is somewhere in the middle of the pacific ocean... 
   82 |         lat = -60.000;
   83 |         alt = -1;
   84 |         callsign = "ZZZZ";
      |         ^~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:84:18: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   84 |         callsign = "ZZZZ";
      |                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:85:20: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   85 |         lastUpdate = std::chrono::system_clock::now();
      |                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:85:22: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   85 |         lastUpdate = std::chrono::system_clock::now();
      |                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:86:26: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   86 |         lastNotification = std::chrono::system_clock::from_time_t((std::time_t)0);
      |                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:86:28: warning: 'from_time_t' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   86 |         lastNotification = std::chrono::system_clock::from_time_t((std::time_t)0);
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1252:7: note: resolves to this declaration
 1252 |       from_time_t(std::time_t __t) noexcept
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:86:67: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
   86 |         lastNotification = std::chrono::system_clock::from_time_t((std::time_t)0);
      |                                                                   ^~~~~~~~~~~~~ 
      |                                                                   static_cast<std::time_t>( )
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:87:9: warning: 'lastSeenSignal' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   79 |     float lastSeenSignal;
      |                         
      |                         {-1}
   80 |     fgcom_client()  {
   81 |         lon = -130.000;   // 60°S / 130°W is somewhere in the middle of the pacific ocean... 
   82 |         lat = -60.000;
   83 |         alt = -1;
   84 |         callsign = "ZZZZ";
   85 |         lastUpdate = std::chrono::system_clock::now();
   86 |         lastNotification = std::chrono::system_clock::from_time_t((std::time_t)0);
   87 |         lastSeenSignal = -1;
      |         ^~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:96:19: warning: variable 'fgcom_localcfg_mtx' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   96 | extern std::mutex fgcom_localcfg_mtx;
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:101:43: warning: variable 'fgcom_local_client' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  101 | extern std::map<int, struct fgcom_client> fgcom_local_client;   // local client data
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:105:19: warning: variable 'fgcom_remotecfg_mtx' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  105 | extern std::mutex fgcom_remotecfg_mtx;  // mutex lock for remote data
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:106:64: warning: variable 'fgcom_remote_clients' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  106 | extern std::map<mumble_userid_t, std::map<int, fgcom_client> > fgcom_remote_clients; // remote radio config
      |                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:109:41: warning: variable 'fgcom_specialChannelID' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  109 | extern std::vector<mumble_channelid_t>  fgcom_specialChannelID;  // filled from plugin init in fgcom-mumble.cpp
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_UDPClient.h:1:9: warning: header guard does not follow preferred style [llvm-header-guard]
    1 | #ifndef FGCOM_IO_UDPCLIENT_H
      |         ^~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_IO_UDPCLIENT_H
    2 | #define FGCOM_IO_UDPCLIENT_H
      |         ~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_IO_UDPCLIENT_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_UDPClient.h:4:1: warning: #includes are not sorted properly [llvm-include-order]
    4 | #include <cstring>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_UDPClient.h:4:1: warning: system include cstring not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_UDPClient.h [llvmlibc-restrict-system-libc-headers]
    4 | #include <cstring>
      | ^~~~~~~~~~~~~~~~~~
    5 | #include <vector>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_UDPClient.h:5:1: warning: system include vector not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_UDPClient.h [llvmlibc-restrict-system-libc-headers]
    5 | #include <vector>
      | ^~~~~~~~~~~~~~~~~
    6 | #include <map>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_UDPClient.h:6:1: warning: system include map not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_UDPClient.h [llvmlibc-restrict-system-libc-headers]
    6 | #include <map>
      | ^~~~~~~~~~~~~~
    7 | #include <string>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_UDPClient.h:7:1: warning: system include string not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_UDPClient.h [llvmlibc-restrict-system-libc-headers]
    7 | #include <string>
      | ^~~~~~~~~~~~~~~~~
    8 | #include "radio_model.h"
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_UDPClient.h:14:13: warning: variable 'udpClientRunning' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   14 | extern bool udpClientRunning; // will be managed by client thread
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_UDPClient.h:19:8: warning: accessing fields in struct 'fgcom_rdfInfo' is inefficient due to padding; only needs 672 bytes but is using 680 bytes [altera-struct-pack-align]
   19 | struct fgcom_rdfInfo {
      |        ^
   20 |     // Transmitter info
   21 |     fgcom_radio txRadio;     // transmitting radio instance
   22 |     fgcom_client txIdentity; // transmitting identity
   23 |     
   24 |     // Receiver info
   25 |     fgcom_radio rxRadio;     // receiving radio instance
   26 |     int rxRadioId;           // receiving radio id (e.g. 1 for COM1)
   27 |     fgcom_client rxIdentity; // receiving identity
   28 |     
   29 |     // Signal info
   30 |     fgcom_radiowave_signal signal; // signal info
   31 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_UDPClient.h:19:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'fgcom_rdfInfo'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_UDPClient.h:19:8: warning: accessing fields in struct 'fgcom_rdfInfo' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 128 bytes [altera-struct-pack-align]
   19 | struct fgcom_rdfInfo {
      |        ^
   20 |     // Transmitter info
   21 |     fgcom_radio txRadio;     // transmitting radio instance
   22 |     fgcom_client txIdentity; // transmitting identity
   23 |     
   24 |     // Receiver info
   25 |     fgcom_radio rxRadio;     // receiving radio instance
   26 |     int rxRadioId;           // receiving radio id (e.g. 1 for COM1)
   27 |     fgcom_client rxIdentity; // receiving identity
   28 |     
   29 |     // Signal info
   30 |     fgcom_radiowave_signal signal; // signal info
   31 | };
      |  
      |   __attribute__((aligned(128)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_UDPClient.h:19:8: note: use "__attribute__((aligned(128)))" to align struct 'fgcom_rdfInfo' to 128 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_UDPClient.h:19:8: warning: constructor does not initialize these fields: rxRadioId [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
   19 | struct fgcom_rdfInfo {
      |        ^
   20 |     // Transmitter info
   21 |     fgcom_radio txRadio;     // transmitting radio instance
   22 |     fgcom_client txIdentity; // transmitting identity
   23 |     
   24 |     // Receiver info
   25 |     fgcom_radio rxRadio;     // receiving radio instance
   26 |     int rxRadioId;           // receiving radio id (e.g. 1 for COM1)
      |                  
      |                  {}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_UDPClient.h:35:19: warning: variable 'fgcom_rdfInfo_mtx' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   35 | extern std::mutex fgcom_rdfInfo_mtx;
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:29:1: warning: #includes are not sorted properly [llvm-include-order]
   29 | #include <iostream>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:29:1: warning: system include iostream not allowed [llvmlibc-restrict-system-libc-headers]
   29 | #include <iostream>
      | ^~~~~~~~~~~~~~~~~~~
   30 | #include <fstream>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:30:1: warning: system include fstream not allowed [llvmlibc-restrict-system-libc-headers]
   30 | #include <fstream>
      | ^~~~~~~~~~~~~~~~~~
   31 | #include <stdio.h>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:31:1: warning: system include stdio.h not allowed [llvmlibc-restrict-system-libc-headers]
   31 | #include <stdio.h>
      | ^~~~~~~~~~~~~~~~~~
   32 | #include <stdlib.h> 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:31:10: warning: inclusion of deprecated C++ header 'stdio.h'; consider using 'cstdio' instead [hicpp-deprecated-headers,modernize-deprecated-headers]
   31 | #include <stdio.h>
      |          ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:32:1: warning: system include stdlib.h not allowed [llvmlibc-restrict-system-libc-headers]
   32 | #include <stdlib.h> 
      | ^~~~~~~~~~~~~~~~~~~
   33 | #include <unistd.h> 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:32:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [hicpp-deprecated-headers,modernize-deprecated-headers]
   32 | #include <stdlib.h> 
      |          ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:33:1: warning: system include unistd.h not allowed [llvmlibc-restrict-system-libc-headers]
   33 | #include <unistd.h> 
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:33:1: warning: included header unistd.h is not used directly [misc-include-cleaner]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:34:1: warning: system include string.h not allowed [llvmlibc-restrict-system-libc-headers]
   34 | #include <string.h> 
      | ^~~~~~~~~~~~~~~~~~~
   35 | #include <sstream> 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:34:10: warning: inclusion of deprecated C++ header 'string.h'; consider using 'cstring' instead [hicpp-deprecated-headers,modernize-deprecated-headers]
   34 | #include <string.h> 
      |          ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:35:1: warning: system include sstream not allowed [llvmlibc-restrict-system-libc-headers]
   35 | #include <sstream> 
      | ^~~~~~~~~~~~~~~~~~
   36 | #include <regex>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:36:1: warning: system include regex not allowed [llvmlibc-restrict-system-libc-headers]
   36 | #include <regex>
      | ^~~~~~~~~~~~~~~~
   37 | #include <sys/types.h> 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:37:1: warning: system include sys/types.h not allowed [llvmlibc-restrict-system-libc-headers]
   37 | #include <sys/types.h> 
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:37:1: warning: included header types.h is not used directly [misc-include-cleaner]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:38:1: warning: system include math.h not allowed [llvmlibc-restrict-system-libc-headers]
   38 | #include <math.h>
      | ^~~~~~~~~~~~~~~~~
   39 | 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:38:10: warning: inclusion of deprecated C++ header 'math.h'; consider using 'cmath' instead [hicpp-deprecated-headers,modernize-deprecated-headers]
   38 | #include <math.h>
      |          ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:40:1: warning: system include chrono not allowed [llvmlibc-restrict-system-libc-headers]
   40 | #include <chrono>
      | ^~~~~~~~~~~~~~~~~
   41 | #include <iomanip>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:41:1: warning: system include iomanip not allowed [llvmlibc-restrict-system-libc-headers]
   41 | #include <iomanip>
      | ^~~~~~~~~~~~~~~~~~
   42 | 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:49:5: warning: #includes are not sorted properly [llvm-include-order]
   49 |     #include <sys/socket.h> 
      |     ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:49:5: warning: system include sys/socket.h not allowed [llvmlibc-restrict-system-libc-headers]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:49:5: warning: included header socket.h is not used directly [misc-include-cleaner]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:50:5: warning: system include arpa/inet.h not allowed [llvmlibc-restrict-system-libc-headers]
   50 |     #include <arpa/inet.h> 
      |     ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:50:5: warning: included header inet.h is not used directly [misc-include-cleaner]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:51:5: warning: system include netinet/in.h not allowed [llvmlibc-restrict-system-libc-headers]
   51 |     #include <netinet/in.h>
      |     ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:51:5: warning: included header in.h is not used directly [misc-include-cleaner]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:54:1: warning: #includes are not sorted properly [llvm-include-order]
   54 | #include <thread>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:54:1: warning: system include thread not allowed [llvmlibc-restrict-system-libc-headers]
   54 | #include <thread>
      | ^~~~~~~~~~~~~~~~~
   55 | #include <mutex>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:55:1: warning: system include mutex not allowed [llvmlibc-restrict-system-libc-headers]
   55 | #include <mutex>
      | ^~~~~~~~~~~~~~~~
   56 | #include <vector>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:56:1: warning: system include vector not allowed [llvmlibc-restrict-system-libc-headers]
   56 | #include <vector>
      | ^~~~~~~~~~~~~~~~~
   57 | #include <set>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:57:1: warning: system include set not allowed [llvmlibc-restrict-system-libc-headers]
   57 | #include <set>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:57:1: warning: included header set is not used directly [misc-include-cleaner]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:58:1: warning: system include map not allowed [llvmlibc-restrict-system-libc-headers]
   58 | #include <map>
      | ^~~~~~~~~~~~~~
   59 | #include <clocale> // setlocale() 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:59:1: warning: system include clocale not allowed [llvmlibc-restrict-system-libc-headers]
   59 | #include <clocale> // setlocale() 
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   60 | 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:61:1: warning: #includes are not sorted properly [llvm-include-order]
   61 | #include "globalVars.h"
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:63:1: warning: included header io_UDPClient.h is not used directly [misc-include-cleaner]
   63 | #include "io_UDPClient.h"
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
   64 | #include "mumble/MumblePlugin_v_1_0_x.h"
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:64:1: warning: included header MumblePlugin_v_1_0_x.h is not used directly [misc-include-cleaner]
   64 | #include "mumble/MumblePlugin_v_1_0_x.h"
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   65 | #include "fgcom-mumble.h"
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:70:12: warning: variable 'fgcom_plog_mtx' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   70 | std::mutex fgcom_plog_mtx; // thread safety for logging
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:70:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:71:15: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   71 | std::ostream& pLog(std::ostream& stream) {
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:71:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   71 | std::ostream& pLog(std::ostream& stream) {
      | ~~~~~~~~~~~~~ ^
      | auto                                     -> std::ostream&
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:74:22: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   74 |     const auto now = std::chrono::system_clock::now();
      |                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:75:29: warning: 'to_time_t' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   75 |     const auto nowAsTimeT = std::chrono::system_clock::to_time_t(now);
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1244:7: note: resolves to this declaration
 1244 |       to_time_t(const time_point& __t) noexcept
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:76:24: warning: 'duration_cast<std::chrono::duration<long, std::ratio<1, 1000>>, long, std::ratio<1, 1000000000>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   76 |     const auto nowMs = std::chrono::duration_cast<std::chrono::milliseconds>(now.time_since_epoch()) % 1000;
      |                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:273:7: note: resolves to this declaration
  273 |       duration_cast(const duration<_Rep, _Period>& __d)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:76:102: warning: 'operator%<long, std::ratio<1, 1000>, int>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   76 |     const auto nowMs = std::chrono::duration_cast<std::chrono::milliseconds>(now.time_since_epoch()) % 1000;
      |                                                                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:779:7: note: resolves to this declaration
  779 |       operator%(const duration<_Rep1, _Period>& __d, const _Rep2& __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:79:7: warning: 'operator<<<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   79 |       << std::put_time(std::localtime(&nowAsTimeT), "%Y-%m-%d %H:%M:%S")
      |       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iomanip:365:5: note: resolves to this declaration
  365 |     operator<<(basic_ostream<_CharT, _Traits>& __os, _Put_time<_CharT> __f)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:79:10: warning: 'put_time<char>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   79 |       << std::put_time(std::localtime(&nowAsTimeT), "%Y-%m-%d %H:%M:%S")
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iomanip:360:5: note: resolves to this declaration
  360 |     put_time(const std::tm* __tmb, const _CharT* __fmt)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:79:24: warning: function is not thread safe [concurrency-mt-unsafe]
   79 |       << std::put_time(std::localtime(&nowAsTimeT), "%Y-%m-%d %H:%M:%S")
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:79:24: warning: 'localtime' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
/usr/include/time.h:137:19: note: resolves to this declaration
  137 | extern struct tm *localtime (const time_t *__timer) __THROW;
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:79:29: warning: no header providing "std::localtime" is directly included [misc-include-cleaner]
   29 |       << std::put_time(std::localtime(&nowAsTimeT), "%Y-%m-%d %H:%M:%S")
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:80:7: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   80 |       << '.' << std::setfill('0') << std::setw(3) << nowMs.count();
      |       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:570:5: note: resolves to this declaration
  570 |     operator<<(basic_ostream<char, _Traits>& __out, char __c)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:80:14: warning: 'operator<<<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   80 |       << '.' << std::setfill('0') << std::setw(3) << nowMs.count();
      |              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iomanip:180:5: note: resolves to this declaration
  180 |     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setfill<_CharT> __f)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:80:17: warning: 'setfill<char>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   80 |       << '.' << std::setfill('0') << std::setw(3) << nowMs.count();
      |                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iomanip:167:5: note: resolves to this declaration
  167 |     setfill(_CharT __c)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:80:35: warning: 'operator<<<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   80 |       << '.' << std::setfill('0') << std::setw(3) << nowMs.count();
      |                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iomanip:240:5: note: resolves to this declaration
  240 |     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setw __f)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:80:38: warning: 'setw' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   80 |       << '.' << std::setfill('0') << std::setw(3) << nowMs.count();
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iomanip:227:3: note: resolves to this declaration
  227 |   setw(int __n)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:80:51: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   80 |       << '.' << std::setfill('0') << std::setw(3) << nowMs.count();
      |                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:168:7: note: resolves to this declaration
  168 |       operator<<(long __n)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:82:12: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   82 |     stream << "FGCom [" << nowStringStream.str() <<"]: ";
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:82:25: warning: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   82 |     stream << "FGCom [" << nowStringStream.str() <<"]: ";
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4032:5: note: resolves to this declaration
 4032 |     operator<<(basic_ostream<_CharT, _Traits>& __os,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:82:50: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   82 |     stream << "FGCom [" << nowStringStream.str() <<"]: ";
      |                                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:87:1: warning: static objects are disallowed; if possible, use a constexpr constructor instead [fuchsia-statically-constructed-objects]
   87 | std::ofstream fgcom_logfile_outfh("", std::ios_base::out);
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:87:15: warning: initialization of 'fgcom_logfile_outfh' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
   87 | std::ofstream fgcom_logfile_outfh("", std::ios_base::out);
      |               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream:797:7: note: possibly throwing constructor declared here
  797 |       basic_ofstream(const char* __s,
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:87:15: warning: variable 'fgcom_logfile_outfh' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   87 | std::ofstream fgcom_logfile_outfh("", std::ios_base::out);
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:87:15: warning: initializing non-local variable with non-const expression depending on uninitialized non-local variable 'out' [cppcoreguidelines-interfaces-global-init]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:87:15: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:88:6: warning: variable 'fgcom_logfile_outfh_opentry' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   88 | bool fgcom_logfile_outfh_opentry = false;
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:88:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:89:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   89 | void fgcom_log_openFile() {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:92:9: warning: the 'empty' method should be used to check for emptiness instead of 'length' [readability-container-size-empty]
   92 |     if (fgcom_cfg.logfile.length() > 0 && ! fgcom_logfile_outfh.is_open() && !fgcom_logfile_outfh_opentry) {
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         !fgcom_cfg.logfile.empty()
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:1220:7: note: method 'basic_string<char>'::empty() defined here
 1220 |       empty() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:95:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   95 |         fgcom_logfile_outfh.open(fgcom_cfg.logfile);
      |         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream:967:36: note: default parameter was declared here
  967 |       open(const std::string& __s, ios_base::openmode __mode = ios_base::out)
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:98:9: warning: variable 'ores' of type 'std::string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness]
   98 |         std::string ores(!fgcom_logfile_outfh.good()? "failed" : "success");
      |         ^
      |                     const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:98:21: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   98 |         std::string ores(!fgcom_logfile_outfh.good()? "failed" : "success");
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:99:9: warning: 'pLog' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   99 |         pLog(std::cout)           << "[LOG] Logfile opening: " << fgcom_cfg.logfile << "; result=" << ores << std::endl;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:71:15: note: resolves to this declaration
   71 | std::ostream& pLog(std::ostream& stream) {
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:99:35: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   99 |         pLog(std::cout)           << "[LOG] Logfile opening: " << fgcom_cfg.logfile << "; result=" << ores << std::endl;
      |                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:99:64: warning: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   99 |         pLog(std::cout)           << "[LOG] Logfile opening: " << fgcom_cfg.logfile << "; result=" << ores << std::endl;
      |                                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4032:5: note: resolves to this declaration
 4032 |     operator<<(basic_ostream<_CharT, _Traits>& __os,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:99:85: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   99 |         pLog(std::cout)           << "[LOG] Logfile opening: " << fgcom_cfg.logfile << "; result=" << ores << std::endl;
      |                                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:99:100: warning: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   99 |         pLog(std::cout)           << "[LOG] Logfile opening: " << fgcom_cfg.logfile << "; result=" << ores << std::endl;
      |                                                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4032:5: note: resolves to this declaration
 4032 |     operator<<(basic_ostream<_CharT, _Traits>& __os,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:99:108: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   99 |         pLog(std::cout)           << "[LOG] Logfile opening: " << fgcom_cfg.logfile << "; result=" << ores << std::endl;
      |                                                                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
  110 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:99:111: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   99 |         pLog(std::cout)           << "[LOG] Logfile opening: " << fgcom_cfg.logfile << "; result=" << ores << std::endl;
      |                                                                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
  735 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:99:111: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   99 |         pLog(std::cout)           << "[LOG] Logfile opening: " << fgcom_cfg.logfile << "; result=" << ores << std::endl;
      |                                                                                                               ^~~~~~~~~
      |                                                                                                               '\n'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:100:9: warning: 'pLog' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  100 |         pLog(fgcom_logfile_outfh) << "[LOG] FGCom-mumble plugin version: "<<FGCOM_VERSION_MAJOR<<"."<<FGCOM_VERSION_MINOR<<"."<<FGCOM_VERSION_PATCH<<"."<<std::endl;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:71:15: note: resolves to this declaration
   71 | std::ostream& pLog(std::ostream& stream) {
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:100:35: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  100 |         pLog(fgcom_logfile_outfh) << "[LOG] FGCom-mumble plugin version: "<<FGCOM_VERSION_MAJOR<<"."<<FGCOM_VERSION_MINOR<<"."<<FGCOM_VERSION_PATCH<<"."<<std::endl;
      |                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:100:75: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  100 |         pLog(fgcom_logfile_outfh) << "[LOG] FGCom-mumble plugin version: "<<FGCOM_VERSION_MAJOR<<"."<<FGCOM_VERSION_MINOR<<"."<<FGCOM_VERSION_PATCH<<"."<<std::endl;
      |                                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:191:7: note: resolves to this declaration
  191 |       operator<<(int __n);
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:100:96: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  100 |         pLog(fgcom_logfile_outfh) << "[LOG] FGCom-mumble plugin version: "<<FGCOM_VERSION_MAJOR<<"."<<FGCOM_VERSION_MINOR<<"."<<FGCOM_VERSION_PATCH<<"."<<std::endl;
      |                                                                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:100:101: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  100 |         pLog(fgcom_logfile_outfh) << "[LOG] FGCom-mumble plugin version: "<<FGCOM_VERSION_MAJOR<<"."<<FGCOM_VERSION_MINOR<<"."<<FGCOM_VERSION_PATCH<<"."<<std::endl;
      |                                                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:191:7: note: resolves to this declaration
  191 |       operator<<(int __n);
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:100:122: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  100 |         pLog(fgcom_logfile_outfh) << "[LOG] FGCom-mumble plugin version: "<<FGCOM_VERSION_MAJOR<<"."<<FGCOM_VERSION_MINOR<<"."<<FGCOM_VERSION_PATCH<<"."<<std::endl;
      |                                                                                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:100:127: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  100 |         pLog(fgcom_logfile_outfh) << "[LOG] FGCom-mumble plugin version: "<<FGCOM_VERSION_MAJOR<<"."<<FGCOM_VERSION_MINOR<<"."<<FGCOM_VERSION_PATCH<<"."<<std::endl;
      |                                                                                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:191:7: note: resolves to this declaration
  191 |       operator<<(int __n);
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:100:148: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  100 |         pLog(fgcom_logfile_outfh) << "[LOG] FGCom-mumble plugin version: "<<FGCOM_VERSION_MAJOR<<"."<<FGCOM_VERSION_MINOR<<"."<<FGCOM_VERSION_PATCH<<"."<<std::endl;
      |                                                                                                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:100:153: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  100 |         pLog(fgcom_logfile_outfh) << "[LOG] FGCom-mumble plugin version: "<<FGCOM_VERSION_MAJOR<<"."<<FGCOM_VERSION_MINOR<<"."<<FGCOM_VERSION_PATCH<<"."<<std::endl;
      |                                                                                                                                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
  110 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:100:155: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  100 |         pLog(fgcom_logfile_outfh) << "[LOG] FGCom-mumble plugin version: "<<FGCOM_VERSION_MAJOR<<"."<<FGCOM_VERSION_MINOR<<"."<<FGCOM_VERSION_PATCH<<"."<<std::endl;
      |                                                                                                                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
  735 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:100:155: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  100 |         pLog(fgcom_logfile_outfh) << "[LOG] FGCom-mumble plugin version: "<<FGCOM_VERSION_MAJOR<<"."<<FGCOM_VERSION_MINOR<<"."<<FGCOM_VERSION_PATCH<<"."<<std::endl;
      |                                                                                                                                                           ^~~~~~~~~
      |                                                                                                                                                           '\n'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:101:9: warning: 'pLog' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  101 |         pLog(fgcom_logfile_outfh) << "[LOG] Logfile opening: " << fgcom_cfg.logfile << "; result=" << ores << std::endl;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:71:15: note: resolves to this declaration
   71 | std::ostream& pLog(std::ostream& stream) {
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:101:35: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  101 |         pLog(fgcom_logfile_outfh) << "[LOG] Logfile opening: " << fgcom_cfg.logfile << "; result=" << ores << std::endl;
      |                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:101:64: warning: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  101 |         pLog(fgcom_logfile_outfh) << "[LOG] Logfile opening: " << fgcom_cfg.logfile << "; result=" << ores << std::endl;
      |                                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4032:5: note: resolves to this declaration
 4032 |     operator<<(basic_ostream<_CharT, _Traits>& __os,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:101:85: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  101 |         pLog(fgcom_logfile_outfh) << "[LOG] Logfile opening: " << fgcom_cfg.logfile << "; result=" << ores << std::endl;
      |                                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:101:100: warning: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  101 |         pLog(fgcom_logfile_outfh) << "[LOG] Logfile opening: " << fgcom_cfg.logfile << "; result=" << ores << std::endl;
      |                                                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4032:5: note: resolves to this declaration
 4032 |     operator<<(basic_ostream<_CharT, _Traits>& __os,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:101:108: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  101 |         pLog(fgcom_logfile_outfh) << "[LOG] Logfile opening: " << fgcom_cfg.logfile << "; result=" << ores << std::endl;
      |                                                                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
  110 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:101:111: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  101 |         pLog(fgcom_logfile_outfh) << "[LOG] Logfile opening: " << fgcom_cfg.logfile << "; result=" << ores << std::endl;
      |                                                                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
  735 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:101:111: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  101 |         pLog(fgcom_logfile_outfh) << "[LOG] Logfile opening: " << fgcom_cfg.logfile << "; result=" << ores << std::endl;
      |                                                                                                               ^~~~~~~~~
      |                                                                                                               '\n'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:107:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  107 | void pluginLog(T log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:108:5: warning: 'fgcom_log_openFile' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  108 |     fgcom_log_openFile();
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:89:6: note: resolves to this declaration
   89 | void fgcom_log_openFile() {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:109:5: warning: 'pLog' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  109 |     pLog(std::cout) << log << std::endl;
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:71:15: note: resolves to this declaration
   71 | std::ostream& pLog(std::ostream& stream) {
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:109:21: warning: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  109 |     pLog(std::cout) << log << std::endl;
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4032:5: note: resolves to this declaration
 4032 |     operator<<(basic_ostream<_CharT, _Traits>& __os,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:109:21: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  109 |     pLog(std::cout) << log << std::endl;
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:109:28: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  109 |     pLog(std::cout) << log << std::endl;
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
  110 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:109:31: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  109 |     pLog(std::cout) << log << std::endl;
      |                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
  735 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:110:36: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  110 |     if (fgcom_logfile_outfh.good())  pLog(fgcom_logfile_outfh) << log << std::endl;
      |                                    ^                                               
      |                                     {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:110:38: warning: 'pLog' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  110 |     if (fgcom_logfile_outfh.good())  pLog(fgcom_logfile_outfh) << log << std::endl;
      |                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:71:15: note: resolves to this declaration
   71 | std::ostream& pLog(std::ostream& stream) {
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:110:64: warning: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  110 |     if (fgcom_logfile_outfh.good())  pLog(fgcom_logfile_outfh) << log << std::endl;
      |                                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4032:5: note: resolves to this declaration
 4032 |     operator<<(basic_ostream<_CharT, _Traits>& __os,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:110:64: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  110 |     if (fgcom_logfile_outfh.good())  pLog(fgcom_logfile_outfh) << log << std::endl;
      |                                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:110:71: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  110 |     if (fgcom_logfile_outfh.good())  pLog(fgcom_logfile_outfh) << log << std::endl;
      |                                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
  110 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:110:74: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  110 |     if (fgcom_logfile_outfh.good())  pLog(fgcom_logfile_outfh) << log << std::endl;
      |                                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
  735 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:28: warning: the parameter 'log' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
  113 | void pluginDbg(std::string log) {
      |                            ^
      |                const      &
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:129:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  129 | bool fgcom_isConnectedToServer() {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:129:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | bool fgcom_isConnectedToServer() {
      | ~~~~ ^
      | auto                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:131:10: warning: variable 'synchronized' is not initialized [cppcoreguidelines-init-variables]
  131 |     bool synchronized;
      |          ^           
      |                       = false
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:132:5: warning: variable 'resCode' of type 'int' can be declared 'const' [misc-const-correctness]
  132 |     int resCode = mumAPI.isConnectionSynchronized(ownPluginID, activeConnection, &synchronized);
      |     ^
      |         const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:133:9: warning: no header providing "MUMBLE_STATUS_OK" is directly included [misc-include-cleaner]
   29 |     if (MUMBLE_STATUS_OK != resCode) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:136:7: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  136 |     } else {
      |       ^~~~~~
  137 |     //    pluginDbg("fgcom_isConnectedToServer(): synchstate="+std::to_string(synchronized));
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |     }
      |     ~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:142:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  142 | void notifyRemotes(int iid, FGCOM_NOTIFY_T what, int selector, mumble_userid_t tgtUser) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:142:6: warning: function 'notifyRemotes' is within a recursive call chain [misc-no-recursion]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:142:6: note: example recursive call chain, starting from function 'notifyRemotes'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:160:13: note: Frame #1: function 'notifyRemotes' calls function 'notifyRemotes' here:
  160 |             notifyRemotes(idty.first, what, selector, tgtUser);
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:160:13: note: ... which was the starting point of the recursive call chain; there may be other cycles
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:142:6: warning: function 'notifyRemotes' has cognitive complexity of 65 (threshold 25) [readability-function-cognitive-complexity]
  142 | void notifyRemotes(int iid, FGCOM_NOTIFY_T what, int selector, mumble_userid_t tgtUser) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:149:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  149 |     if (!fgcom_isConnectedToServer()) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:152:7: note: +1, nesting level increased to 1
  152 |     } else {
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:157:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  157 |     if (iid == NTFY_ALL) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:159:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  159 |         for (const auto &idty : fgcom_local_client) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:168:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  168 |     if (what != NTFY_ASK) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:170:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  170 |         if (fgcom_local_client.empty()) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:177:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  177 |         if (fgcom_local_client.count(iid) > 0) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:180:11: note: +1, nesting level increased to 2
  180 |         } else {
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:197:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  197 |     if (last_notification_time.find(throttle_key) != last_notification_time.end()) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:199:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  199 |         if (time_since_last < min_interval) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:207:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  207 |     switch (what) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:226:13: note: +2, including nesting penalty of 1, nesting level increased to 2
  226 |             if (selector == NTFY_ALL) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:228:17: note: +3, including nesting penalty of 2, nesting level increased to 3
  228 |                 for (long unsigned int ri=0; ri < lcl.radios.size(); ri++) {  
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:231:15: note: +1, nesting level increased to 2
  231 |             } else {
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:232:17: note: +3, including nesting penalty of 2, nesting level increased to 3
  232 |                 if (lcl.radios[selector].publish) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:246:19: note: +1, nesting level increased to 3
  246 |                 } else {
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:271:13: note: +2, including nesting penalty of 1, nesting level increased to 2
  271 |             for (const auto &idty : fgcom_local_client) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:272:17: note: +3, including nesting penalty of 2, nesting level increased to 3
  272 |                 if (message.length() > 0) message += ",";
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:288:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  288 |     if (mumAPI.getChannelOfUser(ownPluginID, activeConnection, localMumId, &localChannelID) != MUMBLE_STATUS_OK) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:293:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  293 |     if (mumAPI.getUsersInChannel(ownPluginID, activeConnection, localChannelID, &userIDs, &userCount) != MUMBLE_STATUS_OK) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:296:7: note: +1, nesting level increased to 1
  296 |     } else {
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:298:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  298 |         if (userCount > 1) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:299:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  299 |             if (tgtUser > 0) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:302:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  302 |                 if (tgtUser != lcl.mumid) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:305:21: note: +5, including nesting penalty of 4, nesting level increased to 5
  305 |                     if (send_res != MUMBLE_STATUS_OK) {
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:307:23: note: +1, nesting level increased to 5
  307 |                     } else {
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:310:19: note: +1, nesting level increased to 4
  310 |                 } else {
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:313:15: note: +1, nesting level increased to 3
  313 |             } else {
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:318:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  318 |                 for(size_t i=0; i<userCount; i++) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:319:21: note: +5, including nesting penalty of 4, nesting level increased to 5
  319 |                     if (userIDs[i] != lcl.mumid) {
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:323:23: note: +1, nesting level increased to 5
  323 |                     } else {
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:329:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  329 |                 if (send_res != MUMBLE_STATUS_OK) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:331:19: note: +1, nesting level increased to 4
  331 |                 } else {
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:142:64: warning: no header providing "mumble_userid_t" is directly included [misc-include-cleaner]
  142 | void notifyRemotes(int iid, FGCOM_NOTIFY_T what, int selector, mumble_userid_t tgtUser) {
      |                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:143:5: warning: the value returned by this function should not be disregarded; neglecting it may lead to errors [cert-err33-c]
  143 |     setlocale(LC_NUMERIC,"C"); // decimal points always ".", not ","
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:143:5: note: cast the expression to void to silence this warning
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:143:5: warning: function is not thread safe [concurrency-mt-unsafe]
  143 |     setlocale(LC_NUMERIC,"C"); // decimal points always ".", not ","
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:143:5: warning: 'setlocale' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
/usr/include/locale.h:122:14: note: resolves to this declaration
  122 | extern char *setlocale (int __category, const char *__locale) __THROW;
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:144:17: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  144 |     std::string dataID("");  // FGCOM<something>
      |                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:144:17: warning: redundant string initialization [readability-redundant-string-init]
  144 |     std::string dataID("");  // FGCOM<something>
      |                 ^~~~~~~~~~
      |                 dataID
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:145:17: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  145 |     std::string message(""); // the message as sting data (yeah, i'm lazy but it parses so easily and is human readable and therefore easy to debug)
      |                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:145:17: warning: redundant string initialization [readability-redundant-string-init]
  145 |     std::string message(""); // the message as sting data (yeah, i'm lazy but it parses so easily and is human readable and therefore easy to debug)
      |                 ^~~~~~~~~~~
      |                 message
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:148:5: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  148 |     pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+") called");
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:148:46: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  148 |     pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+") called");
      |                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:148:47: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  148 |     pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+") called");
      |                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:148:52: warning: no header providing "std::to_string" is directly included [misc-include-cleaner]
   33 |     pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+") called");
      |                                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:148:66: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  148 |     pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+") called");
      |                                                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:148:70: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  148 |     pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+") called");
      |                                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:148:71: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  148 |     pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+") called");
      |                                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:148:91: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  148 |     pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+") called");
      |                                                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:148:95: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  148 |     pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+") called");
      |                                                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:148:96: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  148 |     pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+") called");
      |                                                                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:148:120: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  148 |     pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+") called");
      |                                                                                                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:148:124: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  148 |     pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+") called");
      |                                                                                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:148:125: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  148 |     pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+") called");
      |                                                                                                                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4177:3: note: resolves to this declaration
 4177 |   to_string(unsigned __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:148:130: warning: no header providing "std::to_string" is directly included [misc-include-cleaner]
  148 |     pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+") called");
      |                                                                                                                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:148:148: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  148 |     pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+") called");
      |                                                                                                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:149:10: warning: 'fgcom_isConnectedToServer' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  149 |     if (!fgcom_isConnectedToServer()) {
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:129:6: note: resolves to this declaration
  129 | bool fgcom_isConnectedToServer() {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:150:9: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  150 |         pluginDbg("[mum_pluginIO] notifyRemotes(): not connected, so not notifying.");
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:150:19: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  150 |         pluginDbg("[mum_pluginIO] notifyRemotes(): not connected, so not notifying.");
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:152:7: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  152 |     } else {
      |       ^~~~~~
  153 |         pluginDbg("[mum_pluginIO] notifyRemotes(): we are connected, so notifications will be sent.");
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  154 |     }
      |     ~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:153:9: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  153 |         pluginDbg("[mum_pluginIO] notifyRemotes(): we are connected, so notifications will be sent.");
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:153:19: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  153 |         pluginDbg("[mum_pluginIO] notifyRemotes(): we are connected, so notifications will be sent.");
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:158:9: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  158 |         pluginDbg("[mum_pluginIO] notifyRemotes(): identities: all selected, resolving...");
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:158:19: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  158 |         pluginDbg("[mum_pluginIO] notifyRemotes(): identities: all selected, resolving...");
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:159:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  159 |         for (const auto &idty : fgcom_local_client) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:159:31: warning: 'operator!=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  159 |         for (const auto &idty : fgcom_local_client) {
      |                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:320:7: note: resolves to this declaration
  320 |       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:159:31: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  159 |         for (const auto &idty : fgcom_local_client) {
      |                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:277:7: note: resolves to this declaration
  277 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:159:31: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  159 |         for (const auto &idty : fgcom_local_client) {
      |                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:285:7: note: resolves to this declaration
  285 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:160:13: warning: 'notifyRemotes' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  160 |             notifyRemotes(idty.first, what, selector, tgtUser);
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:142:6: note: resolves to this declaration
  142 | void notifyRemotes(int iid, FGCOM_NOTIFY_T what, int selector, mumble_userid_t tgtUser) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:171:13: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  171 |             pluginDbg("[mum_pluginIO] notifyRemotes(): no local state yet, skipping notifications.");
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:171:23: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  171 |             pluginDbg("[mum_pluginIO] notifyRemotes(): no local state yet, skipping notifications.");
      |                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:178:17: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  178 |             lcl = fgcom_local_client[iid];
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:67:8: note: resolves to this declaration
   67 | struct fgcom_client {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:178:37: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  178 |             lcl = fgcom_local_client[iid];
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:179:13: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  179 |             pluginDbg("[mum_pluginIO] notifyRemotes(): successfully resolved identity='"+std::to_string(iid)+"' (callsign="+lcl.callsign+")");
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:179:89: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  179 |             pluginDbg("[mum_pluginIO] notifyRemotes(): successfully resolved identity='"+std::to_string(iid)+"' (callsign="+lcl.callsign+")");
      |                                                                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:179:90: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  179 |             pluginDbg("[mum_pluginIO] notifyRemotes(): successfully resolved identity='"+std::to_string(iid)+"' (callsign="+lcl.callsign+")");
      |                                                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:179:109: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  179 |             pluginDbg("[mum_pluginIO] notifyRemotes(): successfully resolved identity='"+std::to_string(iid)+"' (callsign="+lcl.callsign+")");
      |                                                                                                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:179:124: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  179 |             pluginDbg("[mum_pluginIO] notifyRemotes(): successfully resolved identity='"+std::to_string(iid)+"' (callsign="+lcl.callsign+")");
      |                                                                                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3637:5: note: resolves to this declaration
 3637 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:179:137: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  179 |             pluginDbg("[mum_pluginIO] notifyRemotes(): successfully resolved identity='"+std::to_string(iid)+"' (callsign="+lcl.callsign+")");
      |                                                                                                                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:181:13: warning: 'pluginLog<std::basic_string<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  181 |             pluginLog("[mum_pluginIO] notifyRemotes(): ERROR resolving identity='"+std::to_string(iid)+"'!");
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:107:6: note: resolves to this declaration
  107 | void pluginLog(T log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:181:83: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  181 |             pluginLog("[mum_pluginIO] notifyRemotes(): ERROR resolving identity='"+std::to_string(iid)+"'!");
      |                                                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:181:84: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  181 |             pluginLog("[mum_pluginIO] notifyRemotes(): ERROR resolving identity='"+std::to_string(iid)+"'!");
      |                                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:181:103: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  181 |             pluginLog("[mum_pluginIO] notifyRemotes(): ERROR resolving identity='"+std::to_string(iid)+"'!");
      |                                                                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:194:5: warning: variable 'throttle_key' of type 'std::string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness]
  194 |     std::string throttle_key = std::to_string(iid) + "_" + std::to_string(what);
      |     ^
      |                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:194:32: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  194 |     std::string throttle_key = std::to_string(iid) + "_" + std::to_string(what);
      |                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:194:52: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  194 |     std::string throttle_key = std::to_string(iid) + "_" + std::to_string(what);
      |                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:194:58: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  194 |     std::string throttle_key = std::to_string(iid) + "_" + std::to_string(what);
      |                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:194:60: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  194 |     std::string throttle_key = std::to_string(iid) + "_" + std::to_string(what);
      |                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:195:16: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  195 |     auto now = std::chrono::steady_clock::now();
      |                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1277:7: note: resolves to this declaration
 1277 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:197:51: warning: 'operator!=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  197 |     if (last_notification_time.find(throttle_key) != last_notification_time.end()) {
      |                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:320:7: note: resolves to this declaration
  320 |       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:198:36: warning: 'operator-<std::chrono::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>, std::chrono::duration<long, std::ratio<1, 1000000000>>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  198 |         auto time_since_last = now - last_notification_time[throttle_key];
      |                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1141:7: note: resolves to this declaration
 1141 |       operator-(const time_point<_Clock, _Dur1>& __lhs,
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:198:60: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  198 |         auto time_since_last = now - last_notification_time[throttle_key];
      |                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:199:29: warning: 'operator<<long, std::ratio<1, 1000000000>, long, std::ratio<1, 1000>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  199 |         if (time_since_last < min_interval) {
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:822:7: note: resolves to this declaration
  822 |       operator<(const duration<_Rep1, _Period1>& __lhs,
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:200:13: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  200 |             pluginDbg("[mum_pluginIO] Rate throttling: skipping notification (too frequent)");
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:200:23: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  200 |             pluginDbg("[mum_pluginIO] Rate throttling: skipping notification (too frequent)");
      |                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:205:27: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  205 |     last_notification_time[throttle_key] = now;
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:205:42: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  205 |     last_notification_time[throttle_key] = now;
      |                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:210:13: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  210 |             pluginDbg("[mum_pluginIO] notifyRemotes(): selected: all (combined message)");
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:210:23: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  210 |             pluginDbg("[mum_pluginIO] notifyRemotes(): selected: all (combined message)");
      |                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:211:13: warning: 'notifyRemotesCombined' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  211 |             notifyRemotesCombined(iid, tgtUser);  // Single combined message instead of multiple calls
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:96:6: note: resolves to this declaration
   96 | void notifyRemotesCombined(int iid, mumble_userid_t tgtUser);
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:216:13: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  216 |             pluginDbg("[mum_pluginIO] notifyRemotes(): selected: location");
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:216:23: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  216 |             pluginDbg("[mum_pluginIO] notifyRemotes(): selected: location");
      |                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:217:21: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  217 |             dataID  = "FGCOM:UPD_LOC:"+std::to_string(iid);
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:853:7: note: resolves to this declaration
  853 |       operator=(basic_string&& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:217:39: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  217 |             dataID  = "FGCOM:UPD_LOC:"+std::to_string(iid);
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:217:40: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  217 |             dataID  = "FGCOM:UPD_LOC:"+std::to_string(iid);
      |                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:218:21: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  218 |             message = "LAT="+std::to_string(lcl.lat)+","
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:853:7: note: resolves to this declaration
  853 |       operator=(basic_string&& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:218:29: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  218 |             message = "LAT="+std::to_string(lcl.lat)+","
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:218:30: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  218 |             message = "LAT="+std::to_string(lcl.lat)+","
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4241:3: note: resolves to this declaration
 4241 |   to_string(float __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:218:35: warning: no header providing "std::to_string" is directly included [misc-include-cleaner]
  218 |             message = "LAT="+std::to_string(lcl.lat)+","
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:218:53: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  218 |             message = "LAT="+std::to_string(lcl.lat)+","
      |                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:219:22: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  219 |                      +"LON="+std::to_string(lcl.lon)+","
      |                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:219:29: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  219 |                      +"LON="+std::to_string(lcl.lon)+","
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:219:30: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  219 |                      +"LON="+std::to_string(lcl.lon)+","
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4241:3: note: resolves to this declaration
 4241 |   to_string(float __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:219:53: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  219 |                      +"LON="+std::to_string(lcl.lon)+","
      |                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:220:22: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  220 |                      +"ALT="+std::to_string(lcl.alt)+",";
      |                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:220:29: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  220 |                      +"ALT="+std::to_string(lcl.alt)+",";
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:220:30: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  220 |                      +"ALT="+std::to_string(lcl.alt)+",";
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4241:3: note: resolves to this declaration
 4241 |   to_string(float __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:220:53: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  220 |                      +"ALT="+std::to_string(lcl.alt)+",";
      |                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:225:13: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  225 |             pluginDbg("[mum_pluginIO] notifyRemotes(): selected radio");            
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:225:23: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  225 |             pluginDbg("[mum_pluginIO] notifyRemotes(): selected radio");            
      |                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:227:17: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  227 |                 pluginDbg("[mum_pluginIO] notifyRemotes():    all radios selected");
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:227:27: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  227 |                 pluginDbg("[mum_pluginIO] notifyRemotes():    all radios selected");
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:228:17: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  228 |                 for (long unsigned int ri=0; ri < lcl.radios.size(); ri++) {  
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:228:22: warning: consider replacing 'unsigned long' with 'uint64' [google-runtime-int]
  228 |                 for (long unsigned int ri=0; ri < lcl.radios.size(); ri++) {  
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:229:21: warning: 'notifyRemotes' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  229 |                     notifyRemotes(iid, NTFY_COM, ri, tgtUser);
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:142:6: note: resolves to this declaration
  142 | void notifyRemotes(int iid, FGCOM_NOTIFY_T what, int selector, mumble_userid_t tgtUser) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:229:50: warning: narrowing conversion from 'unsigned long' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  229 |                     notifyRemotes(iid, NTFY_COM, ri, tgtUser);
      |                                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:232:31: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  232 |                 if (lcl.radios[selector].publish) {
      |                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1126:7: note: resolves to this declaration
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:233:21: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  233 |                     pluginDbg("[mum_pluginIO] notifyRemotes():    send state of COM"+std::to_string(selector+1) );
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:233:85: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  233 |                     pluginDbg("[mum_pluginIO] notifyRemotes():    send state of COM"+std::to_string(selector+1) );
      |                                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:233:86: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  233 |                     pluginDbg("[mum_pluginIO] notifyRemotes():    send state of COM"+std::to_string(selector+1) );
      |                                                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:234:29: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  234 |                     dataID  = "FGCOM:UPD_COM:"+std::to_string(iid)+":"+std::to_string(selector);
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:853:7: note: resolves to this declaration
  853 |       operator=(basic_string&& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:234:47: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  234 |                     dataID  = "FGCOM:UPD_COM:"+std::to_string(iid)+":"+std::to_string(selector);
      |                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:234:48: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  234 |                     dataID  = "FGCOM:UPD_COM:"+std::to_string(iid)+":"+std::to_string(selector);
      |                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:234:67: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  234 |                     dataID  = "FGCOM:UPD_COM:"+std::to_string(iid)+":"+std::to_string(selector);
      |                                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:234:71: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  234 |                     dataID  = "FGCOM:UPD_COM:"+std::to_string(iid)+":"+std::to_string(selector);
      |                                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:234:72: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  234 |                     dataID  = "FGCOM:UPD_COM:"+std::to_string(iid)+":"+std::to_string(selector);
      |                                                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:235:29: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  235 |                     message = "FRQ="+lcl.radios[selector].frequency+","
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:853:7: note: resolves to this declaration
  853 |       operator=(basic_string&& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:235:37: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  235 |                     message = "FRQ="+lcl.radios[selector].frequency+","
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:235:48: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  235 |                     message = "FRQ="+lcl.radios[selector].frequency+","
      |                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1126:7: note: resolves to this declaration
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:235:68: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  235 |                     message = "FRQ="+lcl.radios[selector].frequency+","
      |                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:236:29: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  236 |                             + "CHN="+lcl.radios[selector].dialedFRQ+","
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:236:37: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  236 |                             + "CHN="+lcl.radios[selector].dialedFRQ+","
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3637:5: note: resolves to this declaration
 3637 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:236:48: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  236 |                             + "CHN="+lcl.radios[selector].dialedFRQ+","
      |                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1126:7: note: resolves to this declaration
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:236:68: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  236 |                             + "CHN="+lcl.radios[selector].dialedFRQ+","
      |                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:240:29: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  240 |                             + "PTT="+std::to_string(lcl.radios[selector].ptt)+","
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:240:37: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  240 |                             + "PTT="+std::to_string(lcl.radios[selector].ptt)+","
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:240:38: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  240 |                             + "PTT="+std::to_string(lcl.radios[selector].ptt)+","
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:240:53: warning: implicit conversion 'bool' -> 'int' [readability-implicit-bool-conversion]
  240 |                             + "PTT="+std::to_string(lcl.radios[selector].ptt)+","
      |                                                     ^                       
      |                                                     static_cast<int>(       )
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:240:63: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  240 |                             + "PTT="+std::to_string(lcl.radios[selector].ptt)+","
      |                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1126:7: note: resolves to this declaration
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:240:78: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  240 |                             + "PTT="+std::to_string(lcl.radios[selector].ptt)+","
      |                                                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:242:29: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  242 |                             + "PWR="+std::to_string(lcl.radios[selector].pwr)+","
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:242:37: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  242 |                             + "PWR="+std::to_string(lcl.radios[selector].pwr)+","
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:242:38: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  242 |                             + "PWR="+std::to_string(lcl.radios[selector].pwr)+","
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4241:3: note: resolves to this declaration
 4241 |   to_string(float __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:242:63: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  242 |                             + "PWR="+std::to_string(lcl.radios[selector].pwr)+","
      |                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1126:7: note: resolves to this declaration
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:242:78: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  242 |                             + "PWR="+std::to_string(lcl.radios[selector].pwr)+","
      |                                                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:243:29: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  243 |                             + "OPR="+std::to_string(lcl.radios[selector].operable);
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:243:37: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  243 |                             + "OPR="+std::to_string(lcl.radios[selector].operable);
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:243:38: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  243 |                             + "OPR="+std::to_string(lcl.radios[selector].operable);
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:243:53: warning: implicit conversion 'bool' -> 'int' [readability-implicit-bool-conversion]
  243 |                             + "OPR="+std::to_string(lcl.radios[selector].operable);
      |                                                     ^                            
      |                                                     static_cast<int>(            )
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:243:63: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  243 |                             + "OPR="+std::to_string(lcl.radios[selector].operable);
      |                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1126:7: note: resolves to this declaration
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:256:21: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  256 |             dataID  = "FGCOM:ICANHAZDATAPLZ";
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:257:21: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  257 |             message = "allYourDataBelongsToUs!";
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:262:13: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  262 |             pluginDbg("[mum_pluginIO] notifyRemotes(): selected: userdata");
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:262:23: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  262 |             pluginDbg("[mum_pluginIO] notifyRemotes(): selected: userdata");
      |                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:263:21: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  263 |             dataID  = "FGCOM:UPD_USR:"+std::to_string(iid);
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:853:7: note: resolves to this declaration
  853 |       operator=(basic_string&& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:263:39: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  263 |             dataID  = "FGCOM:UPD_USR:"+std::to_string(iid);
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:263:40: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  263 |             dataID  = "FGCOM:UPD_USR:"+std::to_string(iid);
      |                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:264:21: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  264 |             message = "CALLSIGN="+lcl.callsign;
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:853:7: note: resolves to this declaration
  853 |       operator=(basic_string&& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:264:34: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  264 |             message = "CALLSIGN="+lcl.callsign;
      |                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:269:21: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  269 |             dataID  = "FGCOM:PING";
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:270:21: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  270 |             message = "";
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:271:13: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  271 |             for (const auto &idty : fgcom_local_client) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:271:35: warning: 'operator!=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  271 |             for (const auto &idty : fgcom_local_client) {
      |                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:320:7: note: resolves to this declaration
  320 |       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:271:35: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  271 |             for (const auto &idty : fgcom_local_client) {
      |                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:277:7: note: resolves to this declaration
  277 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:271:35: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  271 |             for (const auto &idty : fgcom_local_client) {
      |                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:285:7: note: resolves to this declaration
  285 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:272:21: warning: the 'empty' method should be used to check for emptiness instead of 'length' [readability-container-size-empty]
  272 |                 if (message.length() > 0) message += ",";
      |                     ^~~~~~~~~~~~~~~~~~~~
      |                     !message.empty()
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:1220:7: note: method 'basic_string<char>'::empty() defined here
 1220 |       empty() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:272:42: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  272 |                 if (message.length() > 0) message += ",";
      |                                          ^               
      |                                           {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:272:51: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  272 |                 if (message.length() > 0) message += ",";
      |                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:1376:7: note: resolves to this declaration
 1376 |       operator+=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:273:25: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  273 |                 message += std::to_string(idty.first);
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:1366:7: note: resolves to this declaration
 1366 |       operator+=(const basic_string& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:273:28: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  273 |                 message += std::to_string(idty.first);
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:278:13: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  278 |             pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+"): 'what' unknown");
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:278:54: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  278 |             pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+"): 'what' unknown");
      |                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:278:55: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  278 |             pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+"): 'what' unknown");
      |                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:278:74: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  278 |             pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+"): 'what' unknown");
      |                                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:278:78: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  278 |             pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+"): 'what' unknown");
      |                                                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:278:79: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  278 |             pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+"): 'what' unknown");
      |                                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:278:99: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  278 |             pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+"): 'what' unknown");
      |                                                                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:278:103: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  278 |             pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+"): 'what' unknown");
      |                                                                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:278:104: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  278 |             pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+"): 'what' unknown");
      |                                                                                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:278:128: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  278 |             pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+"): 'what' unknown");
      |                                                                                                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:278:132: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  278 |             pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+"): 'what' unknown");
      |                                                                                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:278:133: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  278 |             pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+"): 'what' unknown");
      |                                                                                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4177:3: note: resolves to this declaration
 4177 |   to_string(unsigned __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:278:156: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  278 |             pluginDbg("[mum_pluginIO] notifyRemotes("+std::to_string(iid)+","+std::to_string(what)+","+std::to_string(selector)+","+std::to_string(tgtUser)+"): 'what' unknown");
      |                                                                                                                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:285:12: warning: variable 'userCount' is not initialized [cppcoreguidelines-init-variables]
  285 |     size_t userCount;
      |            ^        
      |                      = 0
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:286:19: warning: variable 'userIDs' is not initialized [cppcoreguidelines-init-variables]
  286 |         mumble_userid_t *userIDs;
      |                          ^      
      |                                  = nullptr
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:287:5: warning: no header providing "mumble_channelid_t" is directly included [misc-include-cleaner]
  287 |     mumble_channelid_t localChannelID;
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:287:24: warning: variable 'localChannelID' is not initialized [cppcoreguidelines-init-variables]
  287 |     mumble_channelid_t localChannelID;
      |                        ^             
      |                                       = 0
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:289:9: warning: 'pluginLog<const char *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  289 |         pluginLog("[mum_pluginIO] [ERROR]: Can't obtain channel of local user");
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:107:6: note: resolves to this declaration
  107 | void pluginLog(T log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:294:9: warning: 'pluginLog<const char *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  294 |         pluginLog("[mum_pluginIO] [ERROR]: Can't obtain user list");
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:107:6: note: resolves to this declaration
  107 | void pluginLog(T log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:296:7: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  296 |     } else {
      |       ^~~~~~
  297 |         pluginDbg("There are "+std::to_string(userCount)+" users on this channel.");
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  298 |         if (userCount > 1) {
      |         ~~~~~~~~~~~~~~~~~~~~
  299 |             if (tgtUser > 0) {
      |             ~~~~~~~~~~~~~~~~~~
  300 |                 // a specific user was requested
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  301 |                 // (note: 0 is usually the id of the superuser, ordinary users star with 1)
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  302 |                 if (tgtUser != lcl.mumid) {
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  303 |                     pluginDbg("  sending message to targeted user: "+std::to_string(tgtUser));
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  304 |                     int send_res = mumAPI.sendData(ownPluginID, activeConnection, &tgtUser, 1, reinterpret_cast<const uint8_t *>(message.c_str()), strlen(message.c_str()), dataID.c_str());
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  305 |                     if (send_res != MUMBLE_STATUS_OK) {
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  306 |                         pluginDbg("  message sent ERROR: "+std::to_string(send_res));
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  307 |                     } else {
      |                     ~~~~~~~~
  308 |                         pluginDbg("  message sent to "+std::to_string(userCount-1)+" clients");
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  309 |                     }
      |                     ~
  310 |                 } else {
      |                 ~~~~~~~~
  311 |                     pluginDbg("  ignored targeted user; he is local: id="+std::to_string(tgtUser));
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:297:9: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  297 |         pluginDbg("There are "+std::to_string(userCount)+" users on this channel.");
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:297:31: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  297 |         pluginDbg("There are "+std::to_string(userCount)+" users on this channel.");
      |                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:297:32: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  297 |         pluginDbg("There are "+std::to_string(userCount)+" users on this channel.");
      |                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4204:3: note: resolves to this declaration
 4204 |   to_string(unsigned long __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:297:37: warning: no header providing "std::to_string" is directly included [misc-include-cleaner]
  297 |         pluginDbg("There are "+std::to_string(userCount)+" users on this channel.");
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:297:57: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  297 |         pluginDbg("There are "+std::to_string(userCount)+" users on this channel.");
      |                                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:303:21: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  303 |                     pluginDbg("  sending message to targeted user: "+std::to_string(tgtUser));
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:303:69: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  303 |                     pluginDbg("  sending message to targeted user: "+std::to_string(tgtUser));
      |                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:303:70: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  303 |                     pluginDbg("  sending message to targeted user: "+std::to_string(tgtUser));
      |                                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4177:3: note: resolves to this declaration
 4177 |   to_string(unsigned __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:304:21: warning: variable 'send_res' of type 'int' can be declared 'const' [misc-const-correctness]
  304 |                     int send_res = mumAPI.sendData(ownPluginID, activeConnection, &tgtUser, 1, reinterpret_cast<const uint8_t *>(message.c_str()), strlen(message.c_str()), dataID.c_str());
      |                     ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:304:96: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  304 |                     int send_res = mumAPI.sendData(ownPluginID, activeConnection, &tgtUser, 1, reinterpret_cast<const uint8_t *>(message.c_str()), strlen(message.c_str()), dataID.c_str());
      |                                                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:304:119: warning: no header providing "uint8_t" is directly included [misc-include-cleaner]
   29 |                     int send_res = mumAPI.sendData(ownPluginID, activeConnection, &tgtUser, 1, reinterpret_cast<const uint8_t *>(message.c_str()), strlen(message.c_str()), dataID.c_str());
      |                                                                                                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:306:25: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  306 |                         pluginDbg("  message sent ERROR: "+std::to_string(send_res));
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:306:59: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  306 |                         pluginDbg("  message sent ERROR: "+std::to_string(send_res));
      |                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:306:60: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  306 |                         pluginDbg("  message sent ERROR: "+std::to_string(send_res));
      |                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:308:25: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  308 |                         pluginDbg("  message sent to "+std::to_string(userCount-1)+" clients");
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:308:55: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  308 |                         pluginDbg("  message sent to "+std::to_string(userCount-1)+" clients");
      |                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:308:56: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  308 |                         pluginDbg("  message sent to "+std::to_string(userCount-1)+" clients");
      |                                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4204:3: note: resolves to this declaration
 4204 |   to_string(unsigned long __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:308:83: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  308 |                         pluginDbg("  message sent to "+std::to_string(userCount-1)+" clients");
      |                                                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:311:21: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  311 |                     pluginDbg("  ignored targeted user; he is local: id="+std::to_string(tgtUser));
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:311:74: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  311 |                     pluginDbg("  ignored targeted user; he is local: id="+std::to_string(tgtUser));
      |                                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:311:75: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  311 |                     pluginDbg("  ignored targeted user; he is local: id="+std::to_string(tgtUser));
      |                                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4177:3: note: resolves to this declaration
 4177 |   to_string(unsigned __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:316:46: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  316 |                 std::vector<mumble_userid_t> exclusiveUserIDs(userCount-1);
      |                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:556:29: note: default parameter was declared here
  556 |       vector(size_type __n, const allocator_type& __a = allocator_type())
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:317:21: warning: variable name 'o' is too short, expected at least 3 characters [readability-identifier-length]
  317 |                 int o = 0;
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:318:17: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  318 |                 for(size_t i=0; i<userCount; i++) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:319:25: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  319 |                     if (userIDs[i] != lcl.mumid) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:320:41: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  320 |                         exclusiveUserIDs[o] = userIDs[i];
      |                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1126:7: note: resolves to this declaration
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:320:47: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  320 |                         exclusiveUserIDs[o] = userIDs[i];
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:321:25: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  321 |                         pluginDbg("  sending message to: "+std::to_string(userIDs[i]));
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:321:59: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  321 |                         pluginDbg("  sending message to: "+std::to_string(userIDs[i]));
      |                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:321:60: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  321 |                         pluginDbg("  sending message to: "+std::to_string(userIDs[i]));
      |                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4177:3: note: resolves to this declaration
 4177 |   to_string(unsigned __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:321:75: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  321 |                         pluginDbg("  sending message to: "+std::to_string(userIDs[i]));
      |                                                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:324:25: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  324 |                         pluginDbg("  ignored local user: id="+std::to_string(userIDs[i]));
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:324:62: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  324 |                         pluginDbg("  ignored local user: id="+std::to_string(userIDs[i]));
      |                                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:324:63: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  324 |                         pluginDbg("  ignored local user: id="+std::to_string(userIDs[i]));
      |                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4177:3: note: resolves to this declaration
 4177 |   to_string(unsigned __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:324:78: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  324 |                         pluginDbg("  ignored local user: id="+std::to_string(userIDs[i]));
      |                                                                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:328:17: warning: variable 'send_res' of type 'int' can be declared 'const' [misc-const-correctness]
  328 |                 int send_res = mumAPI.sendData(ownPluginID, activeConnection, exclusiveUserIDs.data(), userCount-1, reinterpret_cast<const uint8_t *>(message.c_str()), strlen(message.c_str()), dataID.c_str());
      |                 ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:328:117: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  328 |                 int send_res = mumAPI.sendData(ownPluginID, activeConnection, exclusiveUserIDs.data(), userCount-1, reinterpret_cast<const uint8_t *>(message.c_str()), strlen(message.c_str()), dataID.c_str());
      |                                                                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:330:21: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  330 |                     pluginDbg("  message sent ERROR: "+std::to_string(send_res));
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:330:55: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  330 |                     pluginDbg("  message sent ERROR: "+std::to_string(send_res));
      |                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:330:56: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  330 |                     pluginDbg("  message sent ERROR: "+std::to_string(send_res));
      |                                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:332:21: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  332 |                     pluginDbg("  message sent to "+std::to_string(userCount-1)+" clients");
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:332:51: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  332 |                     pluginDbg("  message sent to "+std::to_string(userCount-1)+" clients");
      |                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:332:52: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  332 |                     pluginDbg("  message sent to "+std::to_string(userCount-1)+" clients");
      |                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4204:3: note: resolves to this declaration
 4204 |   to_string(unsigned long __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:332:79: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  332 |                     pluginDbg("  message sent to "+std::to_string(userCount-1)+" clients");
      |                                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:339:9: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  339 |         pluginDbg("[mum_pluginIO] message was: '"+message+"'");
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:339:50: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  339 |         pluginDbg("[mum_pluginIO] message was: '"+message+"'");
      |                                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:339:58: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  339 |         pluginDbg("[mum_pluginIO] message was: '"+message+"'");
      |                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:340:9: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  340 |         pluginDbg("[mum_pluginIO] notification for dataID='"+dataID+"' done.");
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:340:61: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  340 |         pluginDbg("[mum_pluginIO] notification for dataID='"+dataID+"' done.");
      |                                                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:340:68: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  340 |         pluginDbg("[mum_pluginIO] notification for dataID='"+dataID+"' done.");
      |                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:346:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  346 | void notifyRemotesCombined(int iid, mumble_userid_t tgtUser) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:346:28: warning: 2 adjacent parameters of 'notifyRemotesCombined' of convertible types are easily swapped by mistake [bugprone-easily-swappable-parameters]
  346 | void notifyRemotesCombined(int iid, mumble_userid_t tgtUser) {
      |                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:346:32: note: the first parameter in the range is 'iid'
  346 | void notifyRemotesCombined(int iid, mumble_userid_t tgtUser) {
      |                                ^~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:346:53: note: the last parameter in the range is 'tgtUser'
  346 | void notifyRemotesCombined(int iid, mumble_userid_t tgtUser) {
      |                                                     ^~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:346:28: note: 
  346 | void notifyRemotesCombined(int iid, mumble_userid_t tgtUser) {
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:346:37: note: 'int' and 'mumble_userid_t' may be implicitly converted: 'int' -> 'mumble_userid_t' (as 'unsigned int'), 'mumble_userid_t' (as 'unsigned int') -> 'int'
  346 | void notifyRemotesCombined(int iid, mumble_userid_t tgtUser) {
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:347:5: warning: the value returned by this function should not be disregarded; neglecting it may lead to errors [cert-err33-c]
  347 |     setlocale(LC_NUMERIC,"C"); // decimal points always ".", not ","
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:347:5: note: cast the expression to void to silence this warning
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:347:5: warning: function is not thread safe [concurrency-mt-unsafe]
  347 |     setlocale(LC_NUMERIC,"C"); // decimal points always ".", not ","
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:347:5: warning: 'setlocale' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
/usr/include/locale.h:122:14: note: resolves to this declaration
  122 | extern char *setlocale (int __category, const char *__locale) __THROW;
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:350:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  350 |     std::lock_guard<std::mutex> lock(fgcom_localcfg_mtx);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:352:9: warning: 'pluginLog<std::basic_string<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  352 |         pluginLog("[mum_pluginIO] notifyRemotesCombined(): ERROR resolving identity='"+std::to_string(iid)+"'!");
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:107:6: note: resolves to this declaration
  107 | void pluginLog(T log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:352:87: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  352 |         pluginLog("[mum_pluginIO] notifyRemotesCombined(): ERROR resolving identity='"+std::to_string(iid)+"'!");
      |                                                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:352:88: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  352 |         pluginLog("[mum_pluginIO] notifyRemotesCombined(): ERROR resolving identity='"+std::to_string(iid)+"'!");
      |                                                                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:352:107: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  352 |         pluginLog("[mum_pluginIO] notifyRemotesCombined(): ERROR resolving identity='"+std::to_string(iid)+"'!");
      |                                                                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:356:42: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  356 |     fgcom_client lcl = fgcom_local_client[iid];
      |                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:360:5: warning: variable 'dataID' of type 'std::string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness]
  360 |     std::string dataID = "FGCOM:UPD_ALL:"+std::to_string(iid);
      |     ^
      |                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:360:42: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  360 |     std::string dataID = "FGCOM:UPD_ALL:"+std::to_string(iid);
      |                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:360:43: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  360 |     std::string dataID = "FGCOM:UPD_ALL:"+std::to_string(iid);
      |                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:361:17: warning: redundant string initialization [readability-redundant-string-init]
  361 |     std::string message = "";
      |                 ^~~~~~~~~~~~
      |                 message
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:361:27: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  361 |     std::string message = "";
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:364:13: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  364 |     message += "CALLSIGN="+lcl.callsign+",";
      |             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:1366:7: note: resolves to this declaration
 1366 |       operator+=(const basic_string& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:364:27: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  364 |     message += "CALLSIGN="+lcl.callsign+",";
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:364:40: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  364 |     message += "CALLSIGN="+lcl.callsign+",";
      |                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:365:13: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  365 |     message += "LAT="+std::to_string(lcl.lat)+",";
      |             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:1366:7: note: resolves to this declaration
 1366 |       operator+=(const basic_string& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:365:22: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  365 |     message += "LAT="+std::to_string(lcl.lat)+",";
      |                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:365:23: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  365 |     message += "LAT="+std::to_string(lcl.lat)+",";
      |                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4241:3: note: resolves to this declaration
 4241 |   to_string(float __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:365:46: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  365 |     message += "LAT="+std::to_string(lcl.lat)+",";
      |                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:366:13: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  366 |     message += "LON="+std::to_string(lcl.lon)+",";
      |             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:1366:7: note: resolves to this declaration
 1366 |       operator+=(const basic_string& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:366:22: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  366 |     message += "LON="+std::to_string(lcl.lon)+",";
      |                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:366:23: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  366 |     message += "LON="+std::to_string(lcl.lon)+",";
      |                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4241:3: note: resolves to this declaration
 4241 |   to_string(float __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:366:46: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  366 |     message += "LON="+std::to_string(lcl.lon)+",";
      |                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:367:13: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  367 |     message += "ALT="+std::to_string(lcl.alt)+",";
      |             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:1366:7: note: resolves to this declaration
 1366 |       operator+=(const basic_string& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:367:22: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  367 |     message += "ALT="+std::to_string(lcl.alt)+",";
      |                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:367:23: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  367 |     message += "ALT="+std::to_string(lcl.alt)+",";
      |                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4241:3: note: resolves to this declaration
 4241 |   to_string(float __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:367:46: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  367 |     message += "ALT="+std::to_string(lcl.alt)+",";
      |                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:370:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  370 |     for (size_t r = 0; r < lcl.radios.size(); r++) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:370:17: warning: loop variable name 'r' is too short, expected at least 2 characters [readability-identifier-length]
  370 |     for (size_t r = 0; r < lcl.radios.size(); r++) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:370:24: warning: backward branch (for loop) is ID-dependent due to variable reference to 'lcl' and may cause performance degradation [altera-id-dependent-backward-branch]
  370 |     for (size_t r = 0; r < lcl.radios.size(); r++) {
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:356:5: note: inferred assignment of ID-dependent value from ID-dependent 
  356 |     fgcom_client lcl = fgcom_local_client[iid];
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:371:23: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  371 |         if (lcl.radios[r].operable) {
      |                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1126:7: note: resolves to this declaration
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:372:21: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  372 |             message += "COM"+std::to_string(r+1)+"_FRQ="+lcl.radios[r].frequency+",";
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:1366:7: note: resolves to this declaration
 1366 |       operator+=(const basic_string& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:372:29: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  372 |             message += "COM"+std::to_string(r+1)+"_FRQ="+lcl.radios[r].frequency+",";
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:372:30: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  372 |             message += "COM"+std::to_string(r+1)+"_FRQ="+lcl.radios[r].frequency+",";
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4204:3: note: resolves to this declaration
 4204 |   to_string(unsigned long __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:372:49: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  372 |             message += "COM"+std::to_string(r+1)+"_FRQ="+lcl.radios[r].frequency+",";
      |                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:372:57: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  372 |             message += "COM"+std::to_string(r+1)+"_FRQ="+lcl.radios[r].frequency+",";
      |                                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3637:5: note: resolves to this declaration
 3637 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:372:68: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  372 |             message += "COM"+std::to_string(r+1)+"_FRQ="+lcl.radios[r].frequency+",";
      |                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1126:7: note: resolves to this declaration
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:372:81: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  372 |             message += "COM"+std::to_string(r+1)+"_FRQ="+lcl.radios[r].frequency+",";
      |                                                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:373:21: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  373 |             message += "COM"+std::to_string(r+1)+"_PTT="+std::to_string(lcl.radios[r].ptt)+",";
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:1366:7: note: resolves to this declaration
 1366 |       operator+=(const basic_string& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:373:29: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  373 |             message += "COM"+std::to_string(r+1)+"_PTT="+std::to_string(lcl.radios[r].ptt)+",";
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:373:30: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  373 |             message += "COM"+std::to_string(r+1)+"_PTT="+std::to_string(lcl.radios[r].ptt)+",";
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4204:3: note: resolves to this declaration
 4204 |   to_string(unsigned long __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:373:49: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  373 |             message += "COM"+std::to_string(r+1)+"_PTT="+std::to_string(lcl.radios[r].ptt)+",";
      |                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:373:57: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  373 |             message += "COM"+std::to_string(r+1)+"_PTT="+std::to_string(lcl.radios[r].ptt)+",";
      |                                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:373:58: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  373 |             message += "COM"+std::to_string(r+1)+"_PTT="+std::to_string(lcl.radios[r].ptt)+",";
      |                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:373:73: warning: implicit conversion 'bool' -> 'int' [readability-implicit-bool-conversion]
  373 |             message += "COM"+std::to_string(r+1)+"_PTT="+std::to_string(lcl.radios[r].ptt)+",";
      |                                                                         ^                
      |                                                                         static_cast<int>()
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:373:83: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  373 |             message += "COM"+std::to_string(r+1)+"_PTT="+std::to_string(lcl.radios[r].ptt)+",";
      |                                                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1126:7: note: resolves to this declaration
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:373:91: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  373 |             message += "COM"+std::to_string(r+1)+"_PTT="+std::to_string(lcl.radios[r].ptt)+",";
      |                                                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:378:5: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  378 |     pluginDbg("[mum_pluginIO] notifyRemotesCombined(): sending combined message");
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:378:15: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  378 |     pluginDbg("[mum_pluginIO] notifyRemotesCombined(): sending combined message");
      |               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:381:22: warning: variable 'userIDs' is not initialized [cppcoreguidelines-init-variables]
  381 |     mumble_userid_t *userIDs;
      |                      ^      
      |                              = nullptr
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:382:12: warning: variable 'userCount' is not initialized [cppcoreguidelines-init-variables]
  382 |     size_t userCount;
      |            ^        
      |                      = 0
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:384:9: warning: 'pluginLog<const char *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  384 |         pluginLog("[mum_pluginIO] notifyRemotesCombined(): ERROR getting connected users!");
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:107:6: note: resolves to this declaration
  107 | void pluginLog(T log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:391:13: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  391 |             pluginDbg("  sending combined message to targeted user: "+std::to_string(tgtUser));
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:391:70: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  391 |             pluginDbg("  sending combined message to targeted user: "+std::to_string(tgtUser));
      |                                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:391:71: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  391 |             pluginDbg("  sending combined message to targeted user: "+std::to_string(tgtUser));
      |                                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4177:3: note: resolves to this declaration
 4177 |   to_string(unsigned __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:392:13: warning: variable 'send_res' of type 'int' can be declared 'const' [misc-const-correctness]
  392 |             int send_res = mumAPI.sendData(ownPluginID, activeConnection, &tgtUser, 1, reinterpret_cast<const uint8_t *>(message.c_str()), strlen(message.c_str()), dataID.c_str());
      |             ^
      |                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:392:88: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  392 |             int send_res = mumAPI.sendData(ownPluginID, activeConnection, &tgtUser, 1, reinterpret_cast<const uint8_t *>(message.c_str()), strlen(message.c_str()), dataID.c_str());
      |                                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:394:17: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  394 |                 pluginDbg("  message sent ERROR: "+std::to_string(send_res));
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:394:51: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  394 |                 pluginDbg("  message sent ERROR: "+std::to_string(send_res));
      |                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:394:52: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  394 |                 pluginDbg("  message sent ERROR: "+std::to_string(send_res));
      |                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:396:17: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  396 |                 pluginDbg("  combined message sent to targeted user");
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:396:27: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  396 |                 pluginDbg("  combined message sent to targeted user");
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:399:13: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  399 |             pluginDbg("  ignored targeted user; he is local: id="+std::to_string(tgtUser));
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:399:66: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  399 |             pluginDbg("  ignored targeted user; he is local: id="+std::to_string(tgtUser));
      |                                                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:399:67: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  399 |             pluginDbg("  ignored targeted user; he is local: id="+std::to_string(tgtUser));
      |                                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4177:3: note: resolves to this declaration
 4177 |   to_string(unsigned __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:403:38: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  403 |         std::vector<mumble_userid_t> exclusiveUserIDs(userCount-1);
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:556:29: note: default parameter was declared here
  556 |       vector(size_type __n, const allocator_type& __a = allocator_type())
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:404:13: warning: variable name 'o' is too short, expected at least 3 characters [readability-identifier-length]
  404 |         int o = 0;
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:405:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  405 |         for(size_t i=0; i<userCount; i++) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:406:17: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  406 |             if (userIDs[i] != lcl.mumid) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:407:33: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  407 |                 exclusiveUserIDs[o] = userIDs[i];
      |                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1126:7: note: resolves to this declaration
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:407:39: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  407 |                 exclusiveUserIDs[o] = userIDs[i];
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:408:17: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  408 |                 pluginDbg("  sending combined message to: "+std::to_string(userIDs[i]));
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:408:60: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  408 |                 pluginDbg("  sending combined message to: "+std::to_string(userIDs[i]));
      |                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:408:61: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  408 |                 pluginDbg("  sending combined message to: "+std::to_string(userIDs[i]));
      |                                                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4177:3: note: resolves to this declaration
 4177 |   to_string(unsigned __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:408:76: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  408 |                 pluginDbg("  sending combined message to: "+std::to_string(userIDs[i]));
      |                                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:411:17: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  411 |                 pluginDbg("  ignored local user: id="+std::to_string(userIDs[i]));
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:411:54: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  411 |                 pluginDbg("  ignored local user: id="+std::to_string(userIDs[i]));
      |                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:411:55: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  411 |                 pluginDbg("  ignored local user: id="+std::to_string(userIDs[i]));
      |                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4177:3: note: resolves to this declaration
 4177 |   to_string(unsigned __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:411:70: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  411 |                 pluginDbg("  ignored local user: id="+std::to_string(userIDs[i]));
      |                                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:415:9: warning: variable 'send_res' of type 'int' can be declared 'const' [misc-const-correctness]
  415 |         int send_res = mumAPI.sendData(ownPluginID, activeConnection, exclusiveUserIDs.data(), userCount-1, reinterpret_cast<const uint8_t *>(message.c_str()), strlen(message.c_str()), dataID.c_str());
      |         ^
      |             const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:415:109: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  415 |         int send_res = mumAPI.sendData(ownPluginID, activeConnection, exclusiveUserIDs.data(), userCount-1, reinterpret_cast<const uint8_t *>(message.c_str()), strlen(message.c_str()), dataID.c_str());
      |                                                                                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:417:13: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  417 |             pluginDbg("  message sent ERROR: "+std::to_string(send_res));
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:417:47: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  417 |             pluginDbg("  message sent ERROR: "+std::to_string(send_res));
      |                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:417:48: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  417 |             pluginDbg("  message sent ERROR: "+std::to_string(send_res));
      |                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:419:13: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  419 |             pluginDbg("  combined message sent to "+std::to_string(userCount-1)+" clients");
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:419:52: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  419 |             pluginDbg("  combined message sent to "+std::to_string(userCount-1)+" clients");
      |                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:419:53: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  419 |             pluginDbg("  combined message sent to "+std::to_string(userCount-1)+" clients");
      |                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4204:3: note: resolves to this declaration
 4204 |   to_string(unsigned long __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:419:80: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  419 |             pluginDbg("  combined message sent to "+std::to_string(userCount-1)+" clients");
      |                                                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:424:5: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  424 |     pluginDbg("[mum_pluginIO] combined message was: '"+message+"'");
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:424:55: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  424 |     pluginDbg("[mum_pluginIO] combined message was: '"+message+"'");
      |                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:424:63: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  424 |     pluginDbg("[mum_pluginIO] combined message was: '"+message+"'");
      |                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:425:5: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  425 |     pluginDbg("[mum_pluginIO] combined notification for dataID='"+dataID+"' done.");
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:425:66: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  425 |     pluginDbg("[mum_pluginIO] combined notification for dataID='"+dataID+"' done.");
      |                                                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:425:73: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  425 |     pluginDbg("[mum_pluginIO] combined notification for dataID='"+dataID+"' done.");
      |                                                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:428:12: warning: variable 'fgcom_remotecfg_mtx' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  428 | std::mutex fgcom_remotecfg_mtx;  // mutex lock for remote data
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:428:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:429:1: warning: static objects are disallowed; if possible, use a constexpr constructor instead [fuchsia-statically-constructed-objects]
  429 | std::map<mumble_userid_t, std::map<int, fgcom_client> > fgcom_remote_clients; // remote radio config
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:429:57: warning: variable 'fgcom_remote_clients' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  429 | std::map<mumble_userid_t, std::map<int, fgcom_client> > fgcom_remote_clients; // remote radio config
      |                                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:429:57: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:430:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  430 | bool handlePluginDataReceived(mumble_userid_t senderID, std::string dataID, std::string data) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:430:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  430 | bool handlePluginDataReceived(mumble_userid_t senderID, std::string dataID, std::string data) {
      | ~~~~ ^
      | auto                                                                                          -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:430:6: warning: function 'handlePluginDataReceived' has cognitive complexity of 171 (threshold 25) [readability-function-cognitive-complexity]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:434:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  434 |     if (dataID.substr(0,5) == "FGCOM") {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:443:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  443 |         if (std::regex_search(dataID, smc_iid, get_iid_re)) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:445:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  445 |             if (iid < 0) return false; // enforce >= 0 for supplied id
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:454:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  454 |         if (iid > -1 && search == fgcom_remote_clients.end()) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:454:22: note: +1
  454 |         if (iid > -1 && search == fgcom_remote_clients.end()) {
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:461:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  461 |         if (iid > -1 ) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:467:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  467 |         if (dataID == "FGCOM:ICANHAZDATAPLZ") {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:473:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  473 |             if (fgcom_remote_clients[clientID][iid].lastNotification + ntf_ask_answerInterval < std::chrono::system_clock::now()) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:476:15: note: +1, nesting level increased to 3
  476 |             } else {
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:481:16: note: +1, nesting level increased to 2
  481 |         } else if (dataID == "FGCOM:PING") {
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:484:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  484 |             if (clientAlreadyknown) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:487:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  487 |                 while(std::getline(streambuffer, segment, ',')) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:490:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  490 |                         if (fgcom_remote_clients[clientID].count(rmt_iid) > 0) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:494:23: note: +5, including nesting penalty of 4, nesting level increased to 5
  494 |                     } catch (const std::exception& e) {
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:498:15: note: +1, nesting level increased to 3
  498 |             } else {
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:505:16: note: +1, nesting level increased to 2
  505 |         } else if (dataID == "FGCOM:UPD_USR:"+iid_str
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:506:17: note: +1
  506 |                 || dataID == "FGCOM:UPD_LOC:"+iid_str) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:512:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  512 |             while(std::getline(streambuffer, segment, ',')) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:519:21: note: +4, including nesting penalty of 3, nesting level increased to 4
  519 |                     if (std::regex_search(segment, sm, parse_key_value)) {
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:527:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  527 |                         if (curlength > MAX_PLUGINIO_FIELDLENGTH) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:533:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  533 |                         if (token_key == "LON")      fgcom_remote_clients[clientID][iid].lon      = std::stof(token_value);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:534:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  534 |                         if (token_key == "LAT")      fgcom_remote_clients[clientID][iid].lat      = std::stof(token_value);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:535:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  535 |                         if (token_key == "ALT")      fgcom_remote_clients[clientID][iid].alt      = std::stof(token_value);  // ALT in meters above ground!
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:538:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  538 |                         if (token_key == "CALLSIGN") fgcom_remote_clients[clientID][iid].callsign = token_value; 
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:540:23: note: +1, nesting level increased to 4
  540 |                     } else {
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:545:19: note: +4, including nesting penalty of 3, nesting level increased to 4
  545 |                 } catch (const std::exception& e) {
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:551:16: note: +1, nesting level increased to 2
  551 |         } else if (dataID.substr(0, 15+iid_str.length()) == "FGCOM:UPD_COM:"+iid_str+":") {
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:557:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  557 |             if (fgcom_remote_clients[clientID][iid].radios.size() < radio_id+1) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:558:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  558 |                 for (long unsigned int cr = fgcom_remote_clients[clientID][iid].radios.size(); cr < radio_id+1; cr++) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:566:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  566 |             while(std::getline(streambuffer, segment, ',')) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:572:21: note: +4, including nesting penalty of 3, nesting level increased to 4
  572 |                     if (std::regex_search(segment, sm, parse_key_value)) {
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:581:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  581 |                         if (curlength > MAX_PLUGINIO_FIELDLENGTH) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:586:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  586 |                         if (token_key == "FRQ") {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:590:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  590 |                         if (token_key == "CHN") {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:594:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  594 |                         if (token_key == "VLT") fgcom_remote_clients[clientID][iid].radios[radio_id].volts       = std::stof(token_value);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:595:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  595 |                         if (token_key == "PBT") fgcom_remote_clients[clientID][iid].radios[radio_id].power_btn   = (token_value == "1")? true : false;
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:595:136: note: +6, including nesting penalty of 5, nesting level increased to 6
  595 |                         if (token_key == "PBT") fgcom_remote_clients[clientID][iid].radios[radio_id].power_btn   = (token_value == "1")? true : false;
      |                                                                                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:596:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  596 |                         if (token_key == "SRV") fgcom_remote_clients[clientID][iid].radios[radio_id].serviceable = (token_value == "1")? true : false;
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:596:136: note: +6, including nesting penalty of 5, nesting level increased to 6
  596 |                         if (token_key == "SRV") fgcom_remote_clients[clientID][iid].radios[radio_id].serviceable = (token_value == "1")? true : false;
      |                                                                                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:597:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  597 |                         if (token_key == "OPR") fgcom_remote_clients[clientID][iid].radios[radio_id].operable    = (token_value == "1")? true : false;
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:597:136: note: +6, including nesting penalty of 5, nesting level increased to 6
  597 |                         if (token_key == "OPR") fgcom_remote_clients[clientID][iid].radios[radio_id].operable    = (token_value == "1")? true : false;
      |                                                                                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:598:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  598 |                         if (token_key == "PTT") {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:599:58: note: +6, including nesting penalty of 5, nesting level increased to 6
  599 |                             bool v = (token_value == "1")? true : false;
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:602:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  602 |                         if (token_key == "VOL") fgcom_remote_clients[clientID][iid].radios[radio_id].volume      = std::stof(token_value);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:603:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  603 |                         if (token_key == "PWR") fgcom_remote_clients[clientID][iid].radios[radio_id].pwr         = std::stof(token_value);      
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:605:23: note: +1, nesting level increased to 4
  605 |                     } else {
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:610:19: note: +4, including nesting penalty of 3, nesting level increased to 4
  610 |                 } catch (const std::exception& e) {
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:617:11: note: +1, nesting level increased to 2
  617 |         } else {
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:626:7: note: +1, nesting level increased to 1
  626 |     } else {
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:430:69: warning: the parameter 'dataID' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
  430 | bool handlePluginDataReceived(mumble_userid_t senderID, std::string dataID, std::string data) {
      |                                                                     ^
      |                                                         const      &
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:430:89: warning: the parameter 'data' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
  430 | bool handlePluginDataReceived(mumble_userid_t senderID, std::string dataID, std::string data) {
      |                                                                                         ^
      |                                                                             const      &
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:432:5: warning: the value returned by this function should not be disregarded; neglecting it may lead to errors [cert-err33-c]
  432 |     setlocale(LC_NUMERIC,"C"); // decimal points always ".", not ","
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:432:5: note: cast the expression to void to silence this warning
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:432:5: warning: function is not thread safe [concurrency-mt-unsafe]
  432 |     setlocale(LC_NUMERIC,"C"); // decimal points always ".", not ","
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:432:5: warning: 'setlocale' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
/usr/include/locale.h:122:14: note: resolves to this declaration
  122 | extern char *setlocale (int __category, const char *__locale) __THROW;
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:434:25: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  434 |     if (dataID.substr(0,5) == "FGCOM") {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:434:28: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  434 |     if (dataID.substr(0,5) == "FGCOM") {
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:436:9: warning: variable 'clientID' of type 'mumble_userid_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
  436 |         mumble_userid_t clientID = senderID;  // get mumble client id
      |         ^
      |                         const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:437:9: warning: variable 'parse_key_value' of type 'std::regex' (aka 'basic_regex<char>') can be declared 'const' [misc-const-correctness]
  437 |         std::regex parse_key_value ("^(\\w+)=(.+)"); // prepare a regex for simpler parsing
      |         ^
      |                    const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:437:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  437 |         std::regex parse_key_value ("^(\\w+)=(.+)"); // prepare a regex for simpler parsing
      |                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/regex.h:472:40: note: default parameter was declared here
  472 |       basic_regex(const _Ch_type* __p, flag_type __f = ECMAScript)
      |                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:441:9: warning: variable 'get_iid_re' of type 'std::regex' (aka 'basic_regex<char>') can be declared 'const' [misc-const-correctness]
  441 |         std::regex get_iid_re ("^FGCOM:\\w+:(\\d+)");
      |         ^
      |                    const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:441:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  441 |         std::regex get_iid_re ("^FGCOM:\\w+:(\\d+)");
      |                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/regex.h:472:40: note: default parameter was declared here
  472 |       basic_regex(const _Ch_type* __p, flag_type __f = ECMAScript)
      |                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:443:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  443 |         if (std::regex_search(dataID, smc_iid, get_iid_re)) {
      |             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/regex.h:2529:4: note: default parameter was declared here
 2529 |                  regex_constants::match_flag_type __f
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:443:13: warning: 'regex_search<std::char_traits<char>, std::allocator<char>, std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char>>>>, char, std::regex_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  443 |         if (std::regex_search(dataID, smc_iid, get_iid_re)) {
      |             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/regex.h:2525:5: note: resolves to this declaration
 2525 |     regex_search(const basic_string<_Ch_type, _Ch_traits, _Ch_alloc>& __s,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:444:19: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  444 |             iid = stoi(smc_iid[1]);
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4120:29: note: default parameter was declared here
 4120 |   stoi(const string& __str, size_t* __idx = 0, int __base = 10)
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:444:19: warning: 'stoi' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  444 |             iid = stoi(smc_iid[1]);
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4120:3: note: resolves to this declaration
 4120 |   stoi(const string& __str, size_t* __idx = 0, int __base = 10)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:444:19: warning: no header providing "std::stoi" is directly included [misc-include-cleaner]
  444 |             iid = stoi(smc_iid[1]);
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:444:31: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  444 |             iid = stoi(smc_iid[1]);
      |                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/regex.h:1949:7: note: resolves to this declaration
 1949 |       operator[](size_type __sub) const
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:445:25: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  445 |             if (iid < 0) return false; // enforce >= 0 for supplied id
      |                         ^                                             
      |                          {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:447:9: warning: variable 'iid_str' of type 'std::string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness]
  447 |         std::string iid_str = std::to_string(iid);
      |         ^
      |                     const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:447:31: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  447 |         std::string iid_str = std::to_string(iid);
      |                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:454:32: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  454 |         if (iid > -1 && search == fgcom_remote_clients.end()) {
      |                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:315:7: note: resolves to this declaration
  315 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:455:13: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  455 |             pluginDbg("[mum_pluginIO] registering new remote: Sender="+std::to_string(clientID)+" identity="+std::to_string(iid));
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:455:71: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  455 |             pluginDbg("[mum_pluginIO] registering new remote: Sender="+std::to_string(clientID)+" identity="+std::to_string(iid));
      |                                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:455:72: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  455 |             pluginDbg("[mum_pluginIO] registering new remote: Sender="+std::to_string(clientID)+" identity="+std::to_string(iid));
      |                                                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4177:3: note: resolves to this declaration
 4177 |   to_string(unsigned __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:455:96: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  455 |             pluginDbg("[mum_pluginIO] registering new remote: Sender="+std::to_string(clientID)+" identity="+std::to_string(iid));
      |                                                                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:455:109: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  455 |             pluginDbg("[mum_pluginIO] registering new remote: Sender="+std::to_string(clientID)+" identity="+std::to_string(iid));
      |                                                                                                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:455:110: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  455 |             pluginDbg("[mum_pluginIO] registering new remote: Sender="+std::to_string(clientID)+" identity="+std::to_string(iid));
      |                                                                                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:456:33: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  456 |             fgcom_remote_clients[clientID][iid]       = fgcom_client();
      |                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:456:43: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  456 |             fgcom_remote_clients[clientID][iid]       = fgcom_client();
      |                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:456:55: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  456 |             fgcom_remote_clients[clientID][iid]       = fgcom_client();
      |                                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:67:8: note: resolves to this declaration
   67 | struct fgcom_client {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:462:33: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  462 |             fgcom_remote_clients[clientID][iid].lastUpdate = std::chrono::system_clock::now();
      |                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:462:43: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  462 |             fgcom_remote_clients[clientID][iid].lastUpdate = std::chrono::system_clock::now();
      |                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:462:60: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  462 |             fgcom_remote_clients[clientID][iid].lastUpdate = std::chrono::system_clock::now();
      |                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:462:62: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  462 |             fgcom_remote_clients[clientID][iid].lastUpdate = std::chrono::system_clock::now();
      |                                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:463:33: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  463 |             fgcom_remote_clients[clientID][iid].mumid = clientID; // update mumble client id for that identity
      |                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:463:43: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  463 |             fgcom_remote_clients[clientID][iid].mumid = clientID; // update mumble client id for that identity
      |                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:467:20: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  467 |         if (dataID == "FGCOM:ICANHAZDATAPLZ") {
      |                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:469:13: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  469 |             pluginDbg("[mum_pluginIO] Data update requested: Sender="+std::to_string(clientID)+" DataID="+dataID);
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:469:70: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  469 |             pluginDbg("[mum_pluginIO] Data update requested: Sender="+std::to_string(clientID)+" DataID="+dataID);
      |                                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:469:71: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  469 |             pluginDbg("[mum_pluginIO] Data update requested: Sender="+std::to_string(clientID)+" DataID="+dataID);
      |                                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4177:3: note: resolves to this declaration
 4177 |   to_string(unsigned __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:469:95: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  469 |             pluginDbg("[mum_pluginIO] Data update requested: Sender="+std::to_string(clientID)+" DataID="+dataID);
      |                                                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:469:106: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  469 |             pluginDbg("[mum_pluginIO] Data update requested: Sender="+std::to_string(clientID)+" DataID="+dataID);
      |                                                                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3637:5: note: resolves to this declaration
 3637 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:473:37: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  473 |             if (fgcom_remote_clients[clientID][iid].lastNotification + ntf_ask_answerInterval < std::chrono::system_clock::now()) {
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:473:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  473 |             if (fgcom_remote_clients[clientID][iid].lastNotification + ntf_ask_answerInterval < std::chrono::system_clock::now()) {
      |                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:473:70: warning: 'operator+<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>, long, std::ratio<1, 1000>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  473 |             if (fgcom_remote_clients[clientID][iid].lastNotification + ntf_ask_answerInterval < std::chrono::system_clock::now()) {
      |                                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1101:7: note: resolves to this declaration
 1101 |       operator+(const time_point<_Clock, _Dur1>& __lhs,
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:473:95: warning: 'operator<<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>, std::chrono::duration<long, std::ratio<1, 1000000000>>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  473 |             if (fgcom_remote_clients[clientID][iid].lastNotification + ntf_ask_answerInterval < std::chrono::system_clock::now()) {
      |                                                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1174:7: note: resolves to this declaration
 1174 |       operator<(const time_point<_Clock, _Dur1>& __lhs,
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:473:97: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  473 |             if (fgcom_remote_clients[clientID][iid].lastNotification + ntf_ask_answerInterval < std::chrono::system_clock::now()) {
      |                                                                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:474:37: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  474 |                 fgcom_remote_clients[clientID][iid].lastNotification = std::chrono::system_clock::now();
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:474:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  474 |                 fgcom_remote_clients[clientID][iid].lastNotification = std::chrono::system_clock::now();
      |                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:474:70: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  474 |                 fgcom_remote_clients[clientID][iid].lastNotification = std::chrono::system_clock::now();
      |                                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:474:72: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  474 |                 fgcom_remote_clients[clientID][iid].lastNotification = std::chrono::system_clock::now();
      |                                                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:475:17: warning: 'notifyRemotes' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  475 |                 notifyRemotes(NTFY_ALL, NTFY_ALL, -1, clientID); // notify the sender with all our data
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:142:6: note: resolves to this declaration
  142 | void notifyRemotes(int iid, FGCOM_NOTIFY_T what, int selector, mumble_userid_t tgtUser) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:477:17: warning: 'pluginLog<std::basic_string<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  477 |                 pluginLog("[mum_pluginIO] <WARN> Dropped excess NTFY_ASK packet from sender="+std::to_string(clientID));
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:107:6: note: resolves to this declaration
  107 | void pluginLog(T log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:477:94: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  477 |                 pluginLog("[mum_pluginIO] <WARN> Dropped excess NTFY_ASK packet from sender="+std::to_string(clientID));
      |                                                                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:477:95: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  477 |                 pluginLog("[mum_pluginIO] <WARN> Dropped excess NTFY_ASK packet from sender="+std::to_string(clientID));
      |                                                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4177:3: note: resolves to this declaration
 4177 |   to_string(unsigned __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:481:27: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  481 |         } else if (dataID == "FGCOM:PING") {
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:483:13: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  483 |             pluginDbg("[mum_pluginIO] ping received, idtys="+data);
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:483:61: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  483 |             pluginDbg("[mum_pluginIO] ping received, idtys="+data);
      |                                                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:485:35: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  485 |                 std::stringstream streambuffer(data);
      |                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/sstream:1060:5: note: default parameter was declared here
 1060 |                          ios_base::openmode __m = ios_base::out | ios_base::in)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:487:17: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  487 |                 while(std::getline(streambuffer, segment, ',')) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:487:23: warning: backward branch (while loop) is ID-dependent due to variable reference to 'streambuffer' and may cause performance degradation [altera-id-dependent-backward-branch]
  487 |                 while(std::getline(streambuffer, segment, ',')) {
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:485:17: note: inferred assignment of ID-dependent value from ID-dependent 
  485 |                 std::stringstream streambuffer(data);
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:487:23: warning: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  487 |                 while(std::getline(streambuffer, segment, ',')) {
      |                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4094:5: note: resolves to this declaration
 4094 |     getline(basic_istream<char>& __in, basic_string<char>& __str,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:487:28: warning: no header providing "std::getline" is directly included [misc-include-cleaner]
  487 |                 while(std::getline(streambuffer, segment, ',')) {
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:489:25: warning: variable 'rmt_iid' of type 'int' can be declared 'const' [misc-const-correctness]
  489 |                         int rmt_iid = stoi(segment);
      |                         ^
      |                             const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:489:39: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  489 |                         int rmt_iid = stoi(segment);
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4120:29: note: default parameter was declared here
 4120 |   stoi(const string& __str, size_t* __idx = 0, int __base = 10)
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:489:39: warning: 'stoi' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  489 |                         int rmt_iid = stoi(segment);
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4120:3: note: resolves to this declaration
 4120 |   stoi(const string& __str, size_t* __idx = 0, int __base = 10)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:490:49: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  490 |                         if (fgcom_remote_clients[clientID].count(rmt_iid) > 0) {
      |                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:491:49: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  491 |                             fgcom_remote_clients[clientID][rmt_iid].lastUpdate = std::chrono::system_clock::now();
      |                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:491:59: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  491 |                             fgcom_remote_clients[clientID][rmt_iid].lastUpdate = std::chrono::system_clock::now();
      |                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:491:80: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  491 |                             fgcom_remote_clients[clientID][rmt_iid].lastUpdate = std::chrono::system_clock::now();
      |                                                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:491:82: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  491 |                             fgcom_remote_clients[clientID][rmt_iid].lastUpdate = std::chrono::system_clock::now();
      |                                                                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:494:41: warning: no header providing "std::exception" is directly included [misc-include-cleaner]
   29 |                     } catch (const std::exception& e) {
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:495:25: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  495 |                         pluginDbg("[mum_pluginIO] Parsing ping packet throw exception, ignoring token "+segment);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:495:104: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  495 |                         pluginDbg("[mum_pluginIO] Parsing ping packet throw exception, ignoring token "+segment);
      |                                                                                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:500:17: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  500 |                 notifyRemotes(NTFY_ALL, NTFY_ASK, clientID);
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:142:64: note: default parameter was declared here
  142 | void notifyRemotes(int iid, FGCOM_NOTIFY_T what, int selector, mumble_userid_t tgtUser) {
      |                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:500:17: warning: 'notifyRemotes' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  500 |                 notifyRemotes(NTFY_ALL, NTFY_ASK, clientID);
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:142:6: note: resolves to this declaration
  142 | void notifyRemotes(int iid, FGCOM_NOTIFY_T what, int selector, mumble_userid_t tgtUser) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:500:51: warning: narrowing conversion from 'mumble_userid_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  500 |                 notifyRemotes(NTFY_ALL, NTFY_ASK, clientID);
      |                                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:505:27: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  505 |         } else if (dataID == "FGCOM:UPD_USR:"+iid_str
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3710:5: note: resolves to this declaration
 3710 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:505:46: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  505 |         } else if (dataID == "FGCOM:UPD_USR:"+iid_str
      |                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:506:27: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  506 |                 || dataID == "FGCOM:UPD_LOC:"+iid_str) {
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3710:5: note: resolves to this declaration
 3710 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:506:46: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  506 |                 || dataID == "FGCOM:UPD_LOC:"+iid_str) {
      |                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:507:13: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  507 |             pluginDbg("[mum_pluginIO] USR/LOC UPDATE: Sender="+std::to_string(clientID)+" DataID="+dataID+" DATA="+data);
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:507:63: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  507 |             pluginDbg("[mum_pluginIO] USR/LOC UPDATE: Sender="+std::to_string(clientID)+" DataID="+dataID+" DATA="+data);
      |                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:507:64: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  507 |             pluginDbg("[mum_pluginIO] USR/LOC UPDATE: Sender="+std::to_string(clientID)+" DataID="+dataID+" DATA="+data);
      |                                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4177:3: note: resolves to this declaration
 4177 |   to_string(unsigned __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:507:88: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  507 |             pluginDbg("[mum_pluginIO] USR/LOC UPDATE: Sender="+std::to_string(clientID)+" DataID="+dataID+" DATA="+data);
      |                                                                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:507:99: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  507 |             pluginDbg("[mum_pluginIO] USR/LOC UPDATE: Sender="+std::to_string(clientID)+" DataID="+dataID+" DATA="+data);
      |                                                                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3637:5: note: resolves to this declaration
 3637 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:507:106: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  507 |             pluginDbg("[mum_pluginIO] USR/LOC UPDATE: Sender="+std::to_string(clientID)+" DataID="+dataID+" DATA="+data);
      |                                                                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:507:115: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  507 |             pluginDbg("[mum_pluginIO] USR/LOC UPDATE: Sender="+std::to_string(clientID)+" DataID="+dataID+" DATA="+data);
      |                                                                                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3637:5: note: resolves to this declaration
 3637 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:510:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  510 |             std::stringstream streambuffer(data);
      |                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/sstream:1060:5: note: default parameter was declared here
 1060 |                          ios_base::openmode __m = ios_base::out | ios_base::in)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:512:13: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  512 |             while(std::getline(streambuffer, segment, ',')) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:512:19: warning: backward branch (while loop) is ID-dependent due to variable reference to 'streambuffer' and may cause performance degradation [altera-id-dependent-backward-branch]
  512 |             while(std::getline(streambuffer, segment, ',')) {
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:510:13: note: inferred assignment of ID-dependent value from ID-dependent 
  510 |             std::stringstream streambuffer(data);
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:512:19: warning: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  512 |             while(std::getline(streambuffer, segment, ',')) {
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4094:5: note: resolves to this declaration
 4094 |     getline(basic_istream<char>& __in, basic_string<char>& __str,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:514:17: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  514 |                 pluginDbg("[mum_pluginIO] Segment="+segment);
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:514:52: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  514 |                 pluginDbg("[mum_pluginIO] Segment="+segment);
      |                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:518:33: warning: variable name 'sm' is too short, expected at least 3 characters [readability-identifier-length]
  518 |                     std::smatch sm;
      |                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:519:25: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  519 |                     if (std::regex_search(segment, sm, parse_key_value)) {
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/regex.h:2529:4: note: default parameter was declared here
 2529 |                  regex_constants::match_flag_type __f
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:519:25: warning: 'regex_search<std::char_traits<char>, std::allocator<char>, std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char>>>>, char, std::regex_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  519 |                     if (std::regex_search(segment, sm, parse_key_value)) {
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/regex.h:2525:5: note: resolves to this declaration
 2525 |     regex_search(const basic_string<_Ch_type, _Ch_traits, _Ch_alloc>& __s,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:521:25: warning: variable 'token_key' of type 'std::string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness]
  521 |                         std::string token_key   = sm[1];
      |                         ^
      |                                     const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:521:53: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  521 |                         std::string token_key   = sm[1];
      |                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/regex.h:1949:7: note: resolves to this declaration
 1949 |       operator[](size_type __sub) const
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:522:53: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  522 |                         std::string token_value = sm[2];
      |                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/regex.h:1949:7: note: resolves to this declaration
 1949 |       operator[](size_type __sub) const
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:523:25: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  523 |                         pluginDbg("[mum_pluginIO] Parsing token: "+token_key+"="+token_value);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:523:67: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  523 |                         pluginDbg("[mum_pluginIO] Parsing token: "+token_key+"="+token_value);
      |                                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:523:77: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  523 |                         pluginDbg("[mum_pluginIO] Parsing token: "+token_key+"="+token_value);
      |                                                                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:523:81: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  523 |                         pluginDbg("[mum_pluginIO] Parsing token: "+token_key+"="+token_value);
      |                                                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3637:5: note: resolves to this declaration
 3637 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:523:81: warning: string concatenation results in allocation of unnecessary temporary strings; consider using 'operator+=' or 'string::append()' instead [performance-inefficient-string-concatenation]
  523 |                         pluginDbg("[mum_pluginIO] Parsing token: "+token_key+"="+token_value);
      |                                                                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:526:25: warning: variable 'curlength' of type 'int' can be declared 'const' [misc-const-correctness]
  526 |                         int curlength = token_value.length();
      |                         ^
      |                             const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:526:41: warning: narrowing conversion from 'size_type' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  526 |                         int curlength = token_value.length();
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:528:41: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  528 |                             token_value = token_value.substr(0, MAX_PLUGINIO_FIELDLENGTH); 
      |                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:853:7: note: resolves to this declaration
  853 |       operator=(basic_string&& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:529:29: warning: 'pluginLog<std::basic_string<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  529 |                             pluginLog("[mum_pluginIO] WARNING: supplied token "+token_key+" length="+std::to_string(curlength)+" is greater than allowed "+std::to_string(MAX_PLUGINIO_FIELDLENGTH)+": Field truncated!");
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:107:6: note: resolves to this declaration
  107 | void pluginLog(T log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:529:80: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  529 |                             pluginLog("[mum_pluginIO] WARNING: supplied token "+token_key+" length="+std::to_string(curlength)+" is greater than allowed "+std::to_string(MAX_PLUGINIO_FIELDLENGTH)+": Field truncated!");
      |                                                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:529:90: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  529 |                             pluginLog("[mum_pluginIO] WARNING: supplied token "+token_key+" length="+std::to_string(curlength)+" is greater than allowed "+std::to_string(MAX_PLUGINIO_FIELDLENGTH)+": Field truncated!");
      |                                                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:529:101: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  529 |                             pluginLog("[mum_pluginIO] WARNING: supplied token "+token_key+" length="+std::to_string(curlength)+" is greater than allowed "+std::to_string(MAX_PLUGINIO_FIELDLENGTH)+": Field truncated!");
      |                                                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:529:102: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  529 |                             pluginLog("[mum_pluginIO] WARNING: supplied token "+token_key+" length="+std::to_string(curlength)+" is greater than allowed "+std::to_string(MAX_PLUGINIO_FIELDLENGTH)+": Field truncated!");
      |                                                                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:529:127: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  529 |                             pluginLog("[mum_pluginIO] WARNING: supplied token "+token_key+" length="+std::to_string(curlength)+" is greater than allowed "+std::to_string(MAX_PLUGINIO_FIELDLENGTH)+": Field truncated!");
      |                                                                                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:529:155: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  529 |                             pluginLog("[mum_pluginIO] WARNING: supplied token "+token_key+" length="+std::to_string(curlength)+" is greater than allowed "+std::to_string(MAX_PLUGINIO_FIELDLENGTH)+": Field truncated!");
      |                                                                                                                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:529:156: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  529 |                             pluginLog("[mum_pluginIO] WARNING: supplied token "+token_key+" length="+std::to_string(curlength)+" is greater than allowed "+std::to_string(MAX_PLUGINIO_FIELDLENGTH)+": Field truncated!");
      |                                                                                                                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:529:196: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  529 |                             pluginLog("[mum_pluginIO] WARNING: supplied token "+token_key+" length="+std::to_string(curlength)+" is greater than allowed "+std::to_string(MAX_PLUGINIO_FIELDLENGTH)+": Field truncated!");
      |                                                                                                                                                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:533:39: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  533 |                         if (token_key == "LON")      fgcom_remote_clients[clientID][iid].lon      = std::stof(token_value);
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:533:48: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  533 |                         if (token_key == "LON")      fgcom_remote_clients[clientID][iid].lon      = std::stof(token_value);
      |                                                ^                                                                           
      |                                                 {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:533:74: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  533 |                         if (token_key == "LON")      fgcom_remote_clients[clientID][iid].lon      = std::stof(token_value);
      |                                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:533:84: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  533 |                         if (token_key == "LON")      fgcom_remote_clients[clientID][iid].lon      = std::stof(token_value);
      |                                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:533:101: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  533 |                         if (token_key == "LON")      fgcom_remote_clients[clientID][iid].lon      = std::stof(token_value);
      |                                                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4146:29: note: default parameter was declared here
 4146 |   stof(const string& __str, size_t* __idx = 0)
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:533:101: warning: 'stof' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  533 |                         if (token_key == "LON")      fgcom_remote_clients[clientID][iid].lon      = std::stof(token_value);
      |                                                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4146:3: note: resolves to this declaration
 4146 |   stof(const string& __str, size_t* __idx = 0)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:533:106: warning: no header providing "std::stof" is directly included [misc-include-cleaner]
  533 |                         if (token_key == "LON")      fgcom_remote_clients[clientID][iid].lon      = std::stof(token_value);
      |                                                                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:534:39: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  534 |                         if (token_key == "LAT")      fgcom_remote_clients[clientID][iid].lat      = std::stof(token_value);
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:534:48: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  534 |                         if (token_key == "LAT")      fgcom_remote_clients[clientID][iid].lat      = std::stof(token_value);
      |                                                ^                                                                           
      |                                                 {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:534:74: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  534 |                         if (token_key == "LAT")      fgcom_remote_clients[clientID][iid].lat      = std::stof(token_value);
      |                                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:534:84: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  534 |                         if (token_key == "LAT")      fgcom_remote_clients[clientID][iid].lat      = std::stof(token_value);
      |                                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:534:101: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  534 |                         if (token_key == "LAT")      fgcom_remote_clients[clientID][iid].lat      = std::stof(token_value);
      |                                                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4146:29: note: default parameter was declared here
 4146 |   stof(const string& __str, size_t* __idx = 0)
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:534:101: warning: 'stof' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  534 |                         if (token_key == "LAT")      fgcom_remote_clients[clientID][iid].lat      = std::stof(token_value);
      |                                                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4146:3: note: resolves to this declaration
 4146 |   stof(const string& __str, size_t* __idx = 0)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:535:39: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  535 |                         if (token_key == "ALT")      fgcom_remote_clients[clientID][iid].alt      = std::stof(token_value);  // ALT in meters above ground!
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:535:48: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  535 |                         if (token_key == "ALT")      fgcom_remote_clients[clientID][iid].alt      = std::stof(token_value);  // ALT in meters above ground!
      |                                                ^                                                                                                           
      |                                                 {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:535:74: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  535 |                         if (token_key == "ALT")      fgcom_remote_clients[clientID][iid].alt      = std::stof(token_value);  // ALT in meters above ground!
      |                                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:535:84: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  535 |                         if (token_key == "ALT")      fgcom_remote_clients[clientID][iid].alt      = std::stof(token_value);  // ALT in meters above ground!
      |                                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:535:101: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  535 |                         if (token_key == "ALT")      fgcom_remote_clients[clientID][iid].alt      = std::stof(token_value);  // ALT in meters above ground!
      |                                                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4146:29: note: default parameter was declared here
 4146 |   stof(const string& __str, size_t* __idx = 0)
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:535:101: warning: 'stof' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  535 |                         if (token_key == "ALT")      fgcom_remote_clients[clientID][iid].alt      = std::stof(token_value);  // ALT in meters above ground!
      |                                                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4146:3: note: resolves to this declaration
 4146 |   stof(const string& __str, size_t* __idx = 0)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:538:39: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  538 |                         if (token_key == "CALLSIGN") fgcom_remote_clients[clientID][iid].callsign = token_value; 
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:538:53: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  538 |                         if (token_key == "CALLSIGN") fgcom_remote_clients[clientID][iid].callsign = token_value; 
      |                                                     ^
      |                                                      {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:538:74: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  538 |                         if (token_key == "CALLSIGN") fgcom_remote_clients[clientID][iid].callsign = token_value; 
      |                                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:538:84: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  538 |                         if (token_key == "CALLSIGN") fgcom_remote_clients[clientID][iid].callsign = token_value; 
      |                                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:538:99: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  538 |                         if (token_key == "CALLSIGN") fgcom_remote_clients[clientID][iid].callsign = token_value; 
      |                                                                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:812:7: note: resolves to this declaration
  812 |       operator=(const basic_string& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:546:21: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  546 |                     pluginDbg("[mum_pluginIO] Parsing throw exception, ignoring token "+segment);
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:546:88: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  546 |                     pluginDbg("[mum_pluginIO] Parsing throw exception, ignoring token "+segment);
      |                                                                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:551:37: warning: 15 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  551 |         } else if (dataID.substr(0, 15+iid_str.length()) == "FGCOM:UPD_COM:"+iid_str+":") {
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:551:58: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  551 |         } else if (dataID.substr(0, 15+iid_str.length()) == "FGCOM:UPD_COM:"+iid_str+":") {
      |                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3710:5: note: resolves to this declaration
 3710 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:551:77: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  551 |         } else if (dataID.substr(0, 15+iid_str.length()) == "FGCOM:UPD_COM:"+iid_str+":") {
      |                                                                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:551:85: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  551 |         } else if (dataID.substr(0, 15+iid_str.length()) == "FGCOM:UPD_COM:"+iid_str+":") {
      |                                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:553:13: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  553 |             pluginDbg("[mum_pluginIO] COM UPDATE: Sender="+std::to_string(clientID)+" DataID="+dataID+" DATA="+data);
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:553:59: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  553 |             pluginDbg("[mum_pluginIO] COM UPDATE: Sender="+std::to_string(clientID)+" DataID="+dataID+" DATA="+data);
      |                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:553:60: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  553 |             pluginDbg("[mum_pluginIO] COM UPDATE: Sender="+std::to_string(clientID)+" DataID="+dataID+" DATA="+data);
      |                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4177:3: note: resolves to this declaration
 4177 |   to_string(unsigned __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:553:84: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  553 |             pluginDbg("[mum_pluginIO] COM UPDATE: Sender="+std::to_string(clientID)+" DataID="+dataID+" DATA="+data);
      |                                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:553:95: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  553 |             pluginDbg("[mum_pluginIO] COM UPDATE: Sender="+std::to_string(clientID)+" DataID="+dataID+" DATA="+data);
      |                                                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3637:5: note: resolves to this declaration
 3637 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:553:102: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  553 |             pluginDbg("[mum_pluginIO] COM UPDATE: Sender="+std::to_string(clientID)+" DataID="+dataID+" DATA="+data);
      |                                                                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:553:111: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  553 |             pluginDbg("[mum_pluginIO] COM UPDATE: Sender="+std::to_string(clientID)+" DataID="+dataID+" DATA="+data);
      |                                                                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3637:5: note: resolves to this declaration
 3637 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:554:13: warning: consider replacing 'unsigned long' with 'uint64' [google-runtime-int]
  554 |             long unsigned int radio_id = std::stoi(dataID.substr(15+iid_str.length())); // when segfault: indicates problem with the implemented udp protocol
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:554:13: warning: variable 'radio_id' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
  554 |             long unsigned int radio_id = std::stoi(dataID.substr(15+iid_str.length())); // when segfault: indicates problem with the implemented udp protocol
      |             ^
      |                               const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:554:42: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  554 |             long unsigned int radio_id = std::stoi(dataID.substr(15+iid_str.length())); // when segfault: indicates problem with the implemented udp protocol
      |                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4120:29: note: default parameter was declared here
 4120 |   stoi(const string& __str, size_t* __idx = 0, int __base = 10)
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:554:42: warning: 'stoi' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  554 |             long unsigned int radio_id = std::stoi(dataID.substr(15+iid_str.length())); // when segfault: indicates problem with the implemented udp protocol
      |                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4120:3: note: resolves to this declaration
 4120 |   stoi(const string& __str, size_t* __idx = 0, int __base = 10)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:554:52: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  554 |             long unsigned int radio_id = std::stoi(dataID.substr(15+iid_str.length())); // when segfault: indicates problem with the implemented udp protocol
      |                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3163:35: note: default parameter was declared here
 3163 |       substr(size_type __pos = 0, size_type __n = npos) const
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:554:66: warning: 15 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  554 |             long unsigned int radio_id = std::stoi(dataID.substr(15+iid_str.length())); // when segfault: indicates problem with the implemented udp protocol
      |                                                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:557:37: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  557 |             if (fgcom_remote_clients[clientID][iid].radios.size() < radio_id+1) {
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:557:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  557 |             if (fgcom_remote_clients[clientID][iid].radios.size() < radio_id+1) {
      |                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:558:17: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  558 |                 for (long unsigned int cr = fgcom_remote_clients[clientID][iid].radios.size(); cr < radio_id+1; cr++) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:558:22: warning: consider replacing 'unsigned long' with 'uint64' [google-runtime-int]
  558 |                 for (long unsigned int cr = fgcom_remote_clients[clientID][iid].radios.size(); cr < radio_id+1; cr++) {
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:558:65: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  558 |                 for (long unsigned int cr = fgcom_remote_clients[clientID][iid].radios.size(); cr < radio_id+1; cr++) {
      |                                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:558:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  558 |                 for (long unsigned int cr = fgcom_remote_clients[clientID][iid].radios.size(); cr < radio_id+1; cr++) {
      |                                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:558:96: warning: backward branch (for loop) is ID-dependent due to variable reference to 'cr' and may cause performance degradation [altera-id-dependent-backward-branch]
  558 |                 for (long unsigned int cr = fgcom_remote_clients[clientID][iid].radios.size(); cr < radio_id+1; cr++) {
      |                                                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:558:22: note: inferred assignment of ID-dependent value from ID-dependent 
  558 |                 for (long unsigned int cr = fgcom_remote_clients[clientID][iid].radios.size(); cr < radio_id+1; cr++) {
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:559:41: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  559 |                     fgcom_remote_clients[clientID][iid].radios.push_back(fgcom_radio()); // add new radio instance with default values
      |                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:559:51: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  559 |                     fgcom_remote_clients[clientID][iid].radios.push_back(fgcom_radio()); // add new radio instance with default values
      |                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:559:64: warning: use emplace_back instead of push_back [hicpp-use-emplace,modernize-use-emplace]
  559 |                     fgcom_remote_clients[clientID][iid].radios.push_back(fgcom_radio()); // add new radio instance with default values
      |                                                                ^~~~~~~~~~~~~~~~~~~~~~~
      |                                                                emplace_back(
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:564:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  564 |             std::stringstream streambuffer(data);
      |                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/sstream:1060:5: note: default parameter was declared here
 1060 |                          ios_base::openmode __m = ios_base::out | ios_base::in)
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:566:13: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  566 |             while(std::getline(streambuffer, segment, ',')) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:566:19: warning: backward branch (while loop) is ID-dependent due to variable reference to 'streambuffer' and may cause performance degradation [altera-id-dependent-backward-branch]
  566 |             while(std::getline(streambuffer, segment, ',')) {
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:564:13: note: inferred assignment of ID-dependent value from ID-dependent 
  564 |             std::stringstream streambuffer(data);
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:566:19: warning: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  566 |             while(std::getline(streambuffer, segment, ',')) {
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4094:5: note: resolves to this declaration
 4094 |     getline(basic_istream<char>& __in, basic_string<char>& __str,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:568:17: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  568 |                 pluginDbg("[mum_pluginIO] Segment="+segment);
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:568:52: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  568 |                 pluginDbg("[mum_pluginIO] Segment="+segment);
      |                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:571:33: warning: variable name 'sm' is too short, expected at least 3 characters [readability-identifier-length]
  571 |                     std::smatch sm;
      |                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:572:25: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  572 |                     if (std::regex_search(segment, sm, parse_key_value)) {
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/regex.h:2529:4: note: default parameter was declared here
 2529 |                  regex_constants::match_flag_type __f
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:572:25: warning: 'regex_search<std::char_traits<char>, std::allocator<char>, std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<const char *, std::basic_string<char>>>>, char, std::regex_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  572 |                     if (std::regex_search(segment, sm, parse_key_value)) {
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/regex.h:2525:5: note: resolves to this declaration
 2525 |     regex_search(const basic_string<_Ch_type, _Ch_traits, _Ch_alloc>& __s,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:575:25: warning: variable 'token_key' of type 'std::string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness]
  575 |                         std::string token_key   = sm[1];
      |                         ^
      |                                     const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:575:53: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  575 |                         std::string token_key   = sm[1];
      |                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/regex.h:1949:7: note: resolves to this declaration
 1949 |       operator[](size_type __sub) const
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:576:53: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  576 |                         std::string token_value = sm[2];
      |                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/regex.h:1949:7: note: resolves to this declaration
 1949 |       operator[](size_type __sub) const
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:577:25: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  577 |                         pluginDbg("[mum_pluginIO] Parsing token: "+token_key+"="+token_value);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:577:67: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  577 |                         pluginDbg("[mum_pluginIO] Parsing token: "+token_key+"="+token_value);
      |                                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:577:77: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  577 |                         pluginDbg("[mum_pluginIO] Parsing token: "+token_key+"="+token_value);
      |                                                                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:577:81: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  577 |                         pluginDbg("[mum_pluginIO] Parsing token: "+token_key+"="+token_value);
      |                                                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3637:5: note: resolves to this declaration
 3637 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:577:81: warning: string concatenation results in allocation of unnecessary temporary strings; consider using 'operator+=' or 'string::append()' instead [performance-inefficient-string-concatenation]
  577 |                         pluginDbg("[mum_pluginIO] Parsing token: "+token_key+"="+token_value);
      |                                                                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:580:25: warning: variable 'curlength' of type 'int' can be declared 'const' [misc-const-correctness]
  580 |                         int curlength = token_value.length();
      |                         ^
      |                             const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:580:41: warning: narrowing conversion from 'size_type' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  580 |                         int curlength = token_value.length();
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:582:41: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  582 |                             token_value = token_value.substr(0, MAX_PLUGINIO_FIELDLENGTH); 
      |                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:853:7: note: resolves to this declaration
  853 |       operator=(basic_string&& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:583:29: warning: 'pluginLog<std::basic_string<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  583 |                             pluginLog("[mum_pluginIO] WARNING: supplied token "+token_key+" length="+std::to_string(curlength)+" is greater than allowed "+std::to_string(MAX_PLUGINIO_FIELDLENGTH)+": Field truncated!");
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:107:6: note: resolves to this declaration
  107 | void pluginLog(T log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:583:80: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  583 |                             pluginLog("[mum_pluginIO] WARNING: supplied token "+token_key+" length="+std::to_string(curlength)+" is greater than allowed "+std::to_string(MAX_PLUGINIO_FIELDLENGTH)+": Field truncated!");
      |                                                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:583:90: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  583 |                             pluginLog("[mum_pluginIO] WARNING: supplied token "+token_key+" length="+std::to_string(curlength)+" is greater than allowed "+std::to_string(MAX_PLUGINIO_FIELDLENGTH)+": Field truncated!");
      |                                                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:583:101: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  583 |                             pluginLog("[mum_pluginIO] WARNING: supplied token "+token_key+" length="+std::to_string(curlength)+" is greater than allowed "+std::to_string(MAX_PLUGINIO_FIELDLENGTH)+": Field truncated!");
      |                                                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:583:102: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  583 |                             pluginLog("[mum_pluginIO] WARNING: supplied token "+token_key+" length="+std::to_string(curlength)+" is greater than allowed "+std::to_string(MAX_PLUGINIO_FIELDLENGTH)+": Field truncated!");
      |                                                                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:583:127: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  583 |                             pluginLog("[mum_pluginIO] WARNING: supplied token "+token_key+" length="+std::to_string(curlength)+" is greater than allowed "+std::to_string(MAX_PLUGINIO_FIELDLENGTH)+": Field truncated!");
      |                                                                                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:583:155: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  583 |                             pluginLog("[mum_pluginIO] WARNING: supplied token "+token_key+" length="+std::to_string(curlength)+" is greater than allowed "+std::to_string(MAX_PLUGINIO_FIELDLENGTH)+": Field truncated!");
      |                                                                                                                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:583:156: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  583 |                             pluginLog("[mum_pluginIO] WARNING: supplied token "+token_key+" length="+std::to_string(curlength)+" is greater than allowed "+std::to_string(MAX_PLUGINIO_FIELDLENGTH)+": Field truncated!");
      |                                                                                                                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:583:196: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  583 |                             pluginLog("[mum_pluginIO] WARNING: supplied token "+token_key+" length="+std::to_string(curlength)+" is greater than allowed "+std::to_string(MAX_PLUGINIO_FIELDLENGTH)+": Field truncated!");
      |                                                                                                                                                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:586:39: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  586 |                         if (token_key == "FRQ") {
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:588:49: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  588 |                             fgcom_remote_clients[clientID][iid].radios[radio_id].frequency = token_value;
      |                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:588:59: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  588 |                             fgcom_remote_clients[clientID][iid].radios[radio_id].frequency = token_value;
      |                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:588:71: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  588 |                             fgcom_remote_clients[clientID][iid].radios[radio_id].frequency = token_value;
      |                                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1126:7: note: resolves to this declaration
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:588:92: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  588 |                             fgcom_remote_clients[clientID][iid].radios[radio_id].frequency = token_value;
      |                                                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:812:7: note: resolves to this declaration
  812 |       operator=(const basic_string& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:590:39: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  590 |                         if (token_key == "CHN") {
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:592:49: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  592 |                             fgcom_remote_clients[clientID][iid].radios[radio_id].dialedFRQ = token_value;
      |                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:592:59: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  592 |                             fgcom_remote_clients[clientID][iid].radios[radio_id].dialedFRQ = token_value;
      |                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:592:71: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  592 |                             fgcom_remote_clients[clientID][iid].radios[radio_id].dialedFRQ = token_value;
      |                                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1126:7: note: resolves to this declaration
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:592:92: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  592 |                             fgcom_remote_clients[clientID][iid].radios[radio_id].dialedFRQ = token_value;
      |                                                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:812:7: note: resolves to this declaration
  812 |       operator=(const basic_string& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:594:39: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  594 |                         if (token_key == "VLT") fgcom_remote_clients[clientID][iid].radios[radio_id].volts       = std::stof(token_value);
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:594:48: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  594 |                         if (token_key == "VLT") fgcom_remote_clients[clientID][iid].radios[radio_id].volts       = std::stof(token_value);
      |                                                ^                                                                                          
      |                                                 {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:594:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  594 |                         if (token_key == "VLT") fgcom_remote_clients[clientID][iid].radios[radio_id].volts       = std::stof(token_value);
      |                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:594:79: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  594 |                         if (token_key == "VLT") fgcom_remote_clients[clientID][iid].radios[radio_id].volts       = std::stof(token_value);
      |                                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:594:91: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  594 |                         if (token_key == "VLT") fgcom_remote_clients[clientID][iid].radios[radio_id].volts       = std::stof(token_value);
      |                                                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1126:7: note: resolves to this declaration
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:594:116: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  594 |                         if (token_key == "VLT") fgcom_remote_clients[clientID][iid].radios[radio_id].volts       = std::stof(token_value);
      |                                                                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4146:29: note: default parameter was declared here
 4146 |   stof(const string& __str, size_t* __idx = 0)
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:594:116: warning: 'stof' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  594 |                         if (token_key == "VLT") fgcom_remote_clients[clientID][iid].radios[radio_id].volts       = std::stof(token_value);
      |                                                                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4146:3: note: resolves to this declaration
 4146 |   stof(const string& __str, size_t* __idx = 0)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:595:39: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  595 |                         if (token_key == "PBT") fgcom_remote_clients[clientID][iid].radios[radio_id].power_btn   = (token_value == "1")? true : false;
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:595:48: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  595 |                         if (token_key == "PBT") fgcom_remote_clients[clientID][iid].radios[radio_id].power_btn   = (token_value == "1")? true : false;
      |                                                ^                                                                                                      
      |                                                 {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:595:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  595 |                         if (token_key == "PBT") fgcom_remote_clients[clientID][iid].radios[radio_id].power_btn   = (token_value == "1")? true : false;
      |                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:595:79: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  595 |                         if (token_key == "PBT") fgcom_remote_clients[clientID][iid].radios[radio_id].power_btn   = (token_value == "1")? true : false;
      |                                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:595:91: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  595 |                         if (token_key == "PBT") fgcom_remote_clients[clientID][iid].radios[radio_id].power_btn   = (token_value == "1")? true : false;
      |                                                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1126:7: note: resolves to this declaration
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:595:129: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  595 |                         if (token_key == "PBT") fgcom_remote_clients[clientID][iid].radios[radio_id].power_btn   = (token_value == "1")? true : false;
      |                                                                                                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:595:138: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
  595 |                         if (token_key == "PBT") fgcom_remote_clients[clientID][iid].radios[radio_id].power_btn   = (token_value == "1")? true : false;
      |                                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |                                                                                                                    token_value == "1"
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:596:39: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  596 |                         if (token_key == "SRV") fgcom_remote_clients[clientID][iid].radios[radio_id].serviceable = (token_value == "1")? true : false;
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:596:48: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  596 |                         if (token_key == "SRV") fgcom_remote_clients[clientID][iid].radios[radio_id].serviceable = (token_value == "1")? true : false;
      |                                                ^                                                                                                      
      |                                                 {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:596:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  596 |                         if (token_key == "SRV") fgcom_remote_clients[clientID][iid].radios[radio_id].serviceable = (token_value == "1")? true : false;
      |                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:596:79: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  596 |                         if (token_key == "SRV") fgcom_remote_clients[clientID][iid].radios[radio_id].serviceable = (token_value == "1")? true : false;
      |                                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:596:91: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  596 |                         if (token_key == "SRV") fgcom_remote_clients[clientID][iid].radios[radio_id].serviceable = (token_value == "1")? true : false;
      |                                                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1126:7: note: resolves to this declaration
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:596:129: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  596 |                         if (token_key == "SRV") fgcom_remote_clients[clientID][iid].radios[radio_id].serviceable = (token_value == "1")? true : false;
      |                                                                                                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:596:138: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
  596 |                         if (token_key == "SRV") fgcom_remote_clients[clientID][iid].radios[radio_id].serviceable = (token_value == "1")? true : false;
      |                                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |                                                                                                                    token_value == "1"
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:597:39: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  597 |                         if (token_key == "OPR") fgcom_remote_clients[clientID][iid].radios[radio_id].operable    = (token_value == "1")? true : false;
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:597:48: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  597 |                         if (token_key == "OPR") fgcom_remote_clients[clientID][iid].radios[radio_id].operable    = (token_value == "1")? true : false;
      |                                                ^                                                                                                      
      |                                                 {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:597:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  597 |                         if (token_key == "OPR") fgcom_remote_clients[clientID][iid].radios[radio_id].operable    = (token_value == "1")? true : false;
      |                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:597:79: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  597 |                         if (token_key == "OPR") fgcom_remote_clients[clientID][iid].radios[radio_id].operable    = (token_value == "1")? true : false;
      |                                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:597:91: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  597 |                         if (token_key == "OPR") fgcom_remote_clients[clientID][iid].radios[radio_id].operable    = (token_value == "1")? true : false;
      |                                                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1126:7: note: resolves to this declaration
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:597:129: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  597 |                         if (token_key == "OPR") fgcom_remote_clients[clientID][iid].radios[radio_id].operable    = (token_value == "1")? true : false;
      |                                                                                                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:597:138: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
  597 |                         if (token_key == "OPR") fgcom_remote_clients[clientID][iid].radios[radio_id].operable    = (token_value == "1")? true : false;
      |                                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |                                                                                                                    token_value == "1"
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:598:39: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  598 |                         if (token_key == "PTT") {
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:599:29: warning: variable 'v' of type 'bool' can be declared 'const' [misc-const-correctness]
  599 |                             bool v = (token_value == "1")? true : false;
      |                             ^
      |                                  const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:599:34: warning: variable name 'v' is too short, expected at least 3 characters [readability-identifier-length]
  599 |                             bool v = (token_value == "1")? true : false;
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:599:51: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  599 |                             bool v = (token_value == "1")? true : false;
      |                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:599:60: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
  599 |                             bool v = (token_value == "1")? true : false;
      |                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |                                      token_value == "1"
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:600:49: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  600 |                             fgcom_remote_clients[clientID][iid].radios[radio_id].ptt = v;
      |                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:600:59: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  600 |                             fgcom_remote_clients[clientID][iid].radios[radio_id].ptt = v;
      |                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:600:71: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  600 |                             fgcom_remote_clients[clientID][iid].radios[radio_id].ptt = v;
      |                                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1126:7: note: resolves to this declaration
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:602:39: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  602 |                         if (token_key == "VOL") fgcom_remote_clients[clientID][iid].radios[radio_id].volume      = std::stof(token_value);
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:602:48: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  602 |                         if (token_key == "VOL") fgcom_remote_clients[clientID][iid].radios[radio_id].volume      = std::stof(token_value);
      |                                                ^                                                                                          
      |                                                 {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:602:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  602 |                         if (token_key == "VOL") fgcom_remote_clients[clientID][iid].radios[radio_id].volume      = std::stof(token_value);
      |                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:602:79: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  602 |                         if (token_key == "VOL") fgcom_remote_clients[clientID][iid].radios[radio_id].volume      = std::stof(token_value);
      |                                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:602:91: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  602 |                         if (token_key == "VOL") fgcom_remote_clients[clientID][iid].radios[radio_id].volume      = std::stof(token_value);
      |                                                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1126:7: note: resolves to this declaration
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:602:116: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  602 |                         if (token_key == "VOL") fgcom_remote_clients[clientID][iid].radios[radio_id].volume      = std::stof(token_value);
      |                                                                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4146:29: note: default parameter was declared here
 4146 |   stof(const string& __str, size_t* __idx = 0)
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:602:116: warning: 'stof' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  602 |                         if (token_key == "VOL") fgcom_remote_clients[clientID][iid].radios[radio_id].volume      = std::stof(token_value);
      |                                                                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4146:3: note: resolves to this declaration
 4146 |   stof(const string& __str, size_t* __idx = 0)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:603:39: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  603 |                         if (token_key == "PWR") fgcom_remote_clients[clientID][iid].radios[radio_id].pwr         = std::stof(token_value);      
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:603:48: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  603 |                         if (token_key == "PWR") fgcom_remote_clients[clientID][iid].radios[radio_id].pwr         = std::stof(token_value);      
      |                                                ^
      |                                                 {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:603:69: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  603 |                         if (token_key == "PWR") fgcom_remote_clients[clientID][iid].radios[radio_id].pwr         = std::stof(token_value);      
      |                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:603:79: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  603 |                         if (token_key == "PWR") fgcom_remote_clients[clientID][iid].radios[radio_id].pwr         = std::stof(token_value);      
      |                                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:603:91: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  603 |                         if (token_key == "PWR") fgcom_remote_clients[clientID][iid].radios[radio_id].pwr         = std::stof(token_value);      
      |                                                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:1126:7: note: resolves to this declaration
 1126 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:603:116: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  603 |                         if (token_key == "PWR") fgcom_remote_clients[clientID][iid].radios[radio_id].pwr         = std::stof(token_value);      
      |                                                                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4146:29: note: default parameter was declared here
 4146 |   stof(const string& __str, size_t* __idx = 0)
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:603:116: warning: 'stof' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  603 |                         if (token_key == "PWR") fgcom_remote_clients[clientID][iid].radios[radio_id].pwr         = std::stof(token_value);      
      |                                                                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4146:3: note: resolves to this declaration
 4146 |   stof(const string& __str, size_t* __idx = 0)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:611:21: warning: 'pluginLog<std::basic_string<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  611 |                     pluginLog("[mum_pluginIO] Parsing throw exception, ignoring token "+segment);
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:107:6: note: resolves to this declaration
  107 | void pluginLog(T log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:611:88: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  611 |                     pluginLog("[mum_pluginIO] Parsing throw exception, ignoring token "+segment);
      |                                                                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:618:13: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  618 |             pluginDbg("[mum_pluginIO] dataID='"+dataID+"' not known. Ignoring.");
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:618:48: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  618 |             pluginDbg("[mum_pluginIO] dataID='"+dataID+"' not known. Ignoring.");
      |                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:618:55: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  618 |             pluginDbg("[mum_pluginIO] dataID='"+dataID+"' not known. Ignoring.");
      |                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:623:9: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  623 |         pluginDbg("[mum_pluginIO] Parsing done.");
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:623:19: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  623 |         pluginDbg("[mum_pluginIO] Parsing done.");
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:626:7: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  626 |     } else {
      |       ^~~~~~
  627 |         return false; // packet does not belong to us. other plugins should also receive it
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  628 |     }
      |     ~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:633:1: warning: static objects are disallowed; if possible, use a constexpr constructor instead [fuchsia-statically-constructed-objects]
  633 | std::map<int, fgcom_notificationState> lastNotifiedState;  // holds the last data we did sent out, so we can detect changes for notification (and how much)
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:633:40: warning: variable 'lastNotifiedState' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  633 | std::map<int, fgcom_notificationState> lastNotifiedState;  // holds the last data we did sent out, so we can detect changes for notification (and how much)
      |                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:633:40: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:634:33: warning: initialization of 'notifyPingInterval' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  634 | const std::chrono::milliseconds notifyPingInterval = std::chrono::milliseconds(NOTIFYPINGINTERVAL);
      |                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:573:23: note: possibly throwing constructor declared here
  573 |           constexpr explicit duration(const _Rep2& __rep)
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:634:33: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  634 | const std::chrono::milliseconds notifyPingInterval = std::chrono::milliseconds(NOTIFYPINGINTERVAL);
      |                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:635:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  635 | void fgcom_notifyThread() {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:635:6: warning: function 'fgcom_notifyThread' has cognitive complexity of 35 (threshold 25) [readability-function-cognitive-complexity]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:636:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  636 |     while (true) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:637:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  637 |         if (fgcom_isPluginActive()) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:644:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  644 |             for (const auto &idty : fgcom_local_client) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:650:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  650 |                 if (fabs(lcl.lat - lastNotifiedState[iid].data.lat) >= 0.0005) { // about 40-50m
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:654:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  654 |                 if (fabs(lcl.lon - lastNotifiedState[iid].data.lon) >= 0.0005) { // about 40-50m
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:658:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  658 |                 if (fabs(lcl.alt - lastNotifiedState[iid].data.alt) >= 5) {  // 5 meters
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:662:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  662 |                 if (lcl.callsign != lastNotifiedState[iid].data.callsign) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:670:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  670 |                 if (!notifyUserData && !notifyLocationData && std::chrono::system_clock::now() > lastNotifiedState[iid].lastPing + notifyPingInterval) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:670:60: note: +1
  670 |                 if (!notifyUserData && !notifyLocationData && std::chrono::system_clock::now() > lastNotifiedState[iid].lastPing + notifyPingInterval) {
      |                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:677:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  677 |                 if (notifyLocationData) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:684:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  684 |                 if (notifyUserData) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:637:13: warning: 'fgcom_isPluginActive' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  637 |         if (fgcom_isPluginActive()) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/fgcom-mumble.h:41:6: note: resolves to this declaration
   41 | bool fgcom_isPluginActive();
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:640:13: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  640 |             std::lock_guard<std::mutex> lock(fgcom_localcfg_mtx);
      |             ^
      |                                         const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:644:13: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  644 |             for (const auto &idty : fgcom_local_client) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:644:35: warning: 'operator!=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  644 |             for (const auto &idty : fgcom_local_client) {
      |                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:320:7: note: resolves to this declaration
  320 |       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:644:35: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  644 |             for (const auto &idty : fgcom_local_client) {
      |                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:277:7: note: resolves to this declaration
  277 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:644:35: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  644 |             for (const auto &idty : fgcom_local_client) {
      |                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:285:7: note: resolves to this declaration
  285 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:645:17: warning: variable 'iid' of type 'int' can be declared 'const' [misc-const-correctness]
  645 |                 int iid          = idty.first;
      |                 ^
      |                     const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:646:17: warning: variable 'lcl' of type 'fgcom_client' can be declared 'const' [misc-const-correctness]
  646 |                 fgcom_client lcl = idty.second;
      |                 ^
      |                              const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:650:21: warning: 'fabs' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  650 |                 if (fabs(lcl.lat - lastNotifiedState[iid].data.lat) >= 0.0005) { // about 40-50m
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath:234:3: note: resolves to this declaration
  234 |   fabs(float __x)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:650:53: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  650 |                 if (fabs(lcl.lat - lastNotifiedState[iid].data.lat) >= 0.0005) { // about 40-50m
      |                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:650:72: warning: 0.0005 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  650 |                 if (fabs(lcl.lat - lastNotifiedState[iid].data.lat) >= 0.0005) { // about 40-50m
      |                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:651:38: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  651 |                     lastNotifiedState[iid].data.lat = lcl.lat;
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:654:21: warning: 'fabs' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  654 |                 if (fabs(lcl.lon - lastNotifiedState[iid].data.lon) >= 0.0005) { // about 40-50m
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath:234:3: note: resolves to this declaration
  234 |   fabs(float __x)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:654:53: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  654 |                 if (fabs(lcl.lon - lastNotifiedState[iid].data.lon) >= 0.0005) { // about 40-50m
      |                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:654:72: warning: 0.0005 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  654 |                 if (fabs(lcl.lon - lastNotifiedState[iid].data.lon) >= 0.0005) { // about 40-50m
      |                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:655:38: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  655 |                     lastNotifiedState[iid].data.lon = lcl.lon;
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:658:21: warning: 'fabs' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  658 |                 if (fabs(lcl.alt - lastNotifiedState[iid].data.alt) >= 5) {  // 5 meters
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath:234:3: note: resolves to this declaration
  234 |   fabs(float __x)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:658:53: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  658 |                 if (fabs(lcl.alt - lastNotifiedState[iid].data.alt) >= 5) {  // 5 meters
      |                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:658:72: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  658 |                 if (fabs(lcl.alt - lastNotifiedState[iid].data.alt) >= 5) {  // 5 meters
      |                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:659:38: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  659 |                     lastNotifiedState[iid].data.alt = lcl.alt;
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:662:34: warning: 'operator!=<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  662 |                 if (lcl.callsign != lastNotifiedState[iid].data.callsign) {
      |                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3788:5: note: resolves to this declaration
 3788 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:662:54: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  662 |                 if (lcl.callsign != lastNotifiedState[iid].data.callsign) {
      |                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:663:38: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  663 |                     lastNotifiedState[iid].data.callsign = lcl.callsign;
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:663:58: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  663 |                     lastNotifiedState[iid].data.callsign = lcl.callsign;
      |                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:812:7: note: resolves to this declaration
  812 |       operator=(const basic_string& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:670:63: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  670 |                 if (!notifyUserData && !notifyLocationData && std::chrono::system_clock::now() > lastNotifiedState[iid].lastPing + notifyPingInterval) {
      |                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:670:96: warning: 'operator><std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>, std::chrono::duration<long, std::ratio<1, 1000000000>>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  670 |                 if (!notifyUserData && !notifyLocationData && std::chrono::system_clock::now() > lastNotifiedState[iid].lastPing + notifyPingInterval) {
      |                                                                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1186:7: note: resolves to this declaration
 1186 |       operator>(const time_point<_Clock, _Dur1>& __lhs,
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:670:115: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  670 |                 if (!notifyUserData && !notifyLocationData && std::chrono::system_clock::now() > lastNotifiedState[iid].lastPing + notifyPingInterval) {
      |                                                                                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:670:130: warning: 'operator+<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>, long, std::ratio<1, 1000>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  670 |                 if (!notifyUserData && !notifyLocationData && std::chrono::system_clock::now() > lastNotifiedState[iid].lastPing + notifyPingInterval) {
      |                                                                                                                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1101:7: note: resolves to this declaration
 1101 |       operator+(const time_point<_Clock, _Dur1>& __lhs,
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:671:21: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  671 |                     pluginDbg("[mum_pluginIO] fgcom_notifyThread() Ping is due (IID="+std::to_string(iid)+").");
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:671:86: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  671 |                     pluginDbg("[mum_pluginIO] fgcom_notifyThread() Ping is due (IID="+std::to_string(iid)+").");
      |                                                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:671:87: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  671 |                     pluginDbg("[mum_pluginIO] fgcom_notifyThread() Ping is due (IID="+std::to_string(iid)+").");
      |                                                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:671:106: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  671 |                     pluginDbg("[mum_pluginIO] fgcom_notifyThread() Ping is due (IID="+std::to_string(iid)+").");
      |                                                                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:672:38: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  672 |                     lastNotifiedState[iid].lastPing = std::chrono::system_clock::now();
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:672:53: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  672 |                     lastNotifiedState[iid].lastPing = std::chrono::system_clock::now();
      |                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:672:55: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  672 |                     lastNotifiedState[iid].lastPing = std::chrono::system_clock::now();
      |                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:673:21: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  673 |                     notifyRemotes(iid, NTFY_PNG);
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:142:50: note: default parameter was declared here
  142 | void notifyRemotes(int iid, FGCOM_NOTIFY_T what, int selector, mumble_userid_t tgtUser) {
      |                                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:673:21: warning: 'notifyRemotes' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  673 |                     notifyRemotes(iid, NTFY_PNG);
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:142:6: note: resolves to this declaration
  142 | void notifyRemotes(int iid, FGCOM_NOTIFY_T what, int selector, mumble_userid_t tgtUser) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:678:21: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  678 |                     pluginDbg("[mum_pluginIO] fgcom_notifyThread() locationdata was changed.");
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:678:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  678 |                     pluginDbg("[mum_pluginIO] fgcom_notifyThread() locationdata was changed.");
      |                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:679:38: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  679 |                     lastNotifiedState[iid].lastPing = std::chrono::system_clock::now();
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:679:53: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  679 |                     lastNotifiedState[iid].lastPing = std::chrono::system_clock::now();
      |                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:679:55: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  679 |                     lastNotifiedState[iid].lastPing = std::chrono::system_clock::now();
      |                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:680:21: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  680 |                     notifyRemotes(iid, NTFY_LOC);
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:142:50: note: default parameter was declared here
  142 | void notifyRemotes(int iid, FGCOM_NOTIFY_T what, int selector, mumble_userid_t tgtUser) {
      |                                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:680:21: warning: 'notifyRemotes' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  680 |                     notifyRemotes(iid, NTFY_LOC);
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:142:6: note: resolves to this declaration
  142 | void notifyRemotes(int iid, FGCOM_NOTIFY_T what, int selector, mumble_userid_t tgtUser) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:685:21: warning: 'pluginDbg' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  685 |                     pluginDbg("[mum_pluginIO] fgcom_notifyThread() userdata was changed.");
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:6: note: resolves to this declaration
  113 | void pluginDbg(std::string log) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:685:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  685 |                     pluginDbg("[mum_pluginIO] fgcom_notifyThread() userdata was changed.");
      |                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:686:38: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  686 |                     lastNotifiedState[iid].lastPing = std::chrono::system_clock::now();
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:686:53: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  686 |                     lastNotifiedState[iid].lastPing = std::chrono::system_clock::now();
      |                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:686:55: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  686 |                     lastNotifiedState[iid].lastPing = std::chrono::system_clock::now();
      |                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:687:21: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  687 |                     notifyRemotes(iid, NTFY_USR);
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:142:50: note: default parameter was declared here
  142 | void notifyRemotes(int iid, FGCOM_NOTIFY_T what, int selector, mumble_userid_t tgtUser) {
      |                                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:687:21: warning: 'notifyRemotes' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  687 |                     notifyRemotes(iid, NTFY_USR);
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:142:6: note: resolves to this declaration
  142 | void notifyRemotes(int iid, FGCOM_NOTIFY_T what, int selector, mumble_userid_t tgtUser) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:694:9: warning: 'sleep_for<long, std::ratio<1, 1000>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  694 |         std::this_thread::sleep_for(std::chrono::milliseconds(NOTIFYINTERVAL));
      |         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/this_thread_sleep.h:68:7: note: resolves to this declaration
   68 |       sleep_for(const chrono::duration<_Rep, _Period>& __rtime)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:1:1: warning: header is missing header guard [llvm-header-guard]
    1 | /* 
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:17:1: warning: system include set not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h [llvmlibc-restrict-system-libc-headers]
   17 | #include <set>
      | ^~~~~~~~~~~~~~
   18 | 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:25:9: warning: macro 'NOTIFYINTERVAL' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   25 | #define NOTIFYINTERVAL      1000  // minimal time between notifications (ms)
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:26:9: warning: macro 'NOTIFYPINGINTERVAL' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   26 | #define NOTIFYPINGINTERVAL 10000  // time between pings (ms), if no notification was done
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:28:9: warning: macro 'MAX_PLUGINIO_FIELDLENGTH' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   28 | #define MAX_PLUGINIO_FIELDLENGTH      32    // maximum plugin-io field size, should correspond to MAX_UDPSRV_FIELDLENGTH
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:30:9: warning: macro 'MIN_NTFYANSWER_INTVAL' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   30 | #define MIN_NTFYANSWER_INTVAL 1000   // minimum time interval between answers to incoming NTF_ASK requests
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:34:26: warning: variable 'mumAPI' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   34 | extern MumbleAPI_v_1_0_x mumAPI;
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:35:28: warning: variable 'activeConnection' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   35 | extern mumble_connection_t activeConnection;
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:36:27: warning: variable 'ownPluginID' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   36 | extern mumble_plugin_id_t ownPluginID;
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:37:24: warning: variable 'localMumId' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   37 | extern mumble_userid_t localMumId;
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:41:6: warning: enum 'FGCOM_NOTIFY_T' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   41 | enum FGCOM_NOTIFY_T {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:56:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   56 | std::ostream& pLog(std::ostream& stream);
      | ~~~~~~~~~~~~~ ^                         
      | auto                                     -> std::ostream&
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:66:8: warning: accessing fields in struct 'fgcom_notificationState' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 128 bytes [altera-struct-pack-align]
   66 | struct fgcom_notificationState {
      |        ^
   67 |     fgcom_client data;   // last data we notified
   68 |     std::chrono::system_clock::time_point lastPing;  // when we last sent a ping packet
   69 |     
   70 |     fgcom_notificationState()  {
   71 |         data = fgcom_client();
   72 |         lastPing = std::chrono::system_clock::now();
   73 |     };
   74 | };
      |  
      |   __attribute__((aligned(128)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:66:8: note: use "__attribute__((aligned(128)))" to align struct 'fgcom_notificationState' to 128 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:67:18: warning: member variable 'data' has public visibility [misc-non-private-member-variables-in-classes]
   67 |     fgcom_client data;   // last data we notified
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:68:43: warning: member variable 'lastPing' has public visibility [misc-non-private-member-variables-in-classes]
   68 |     std::chrono::system_clock::time_point lastPing;  // when we last sent a ping packet
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:70:5: warning: 'fgcom_notificationState' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   70 |     fgcom_notificationState()  {
      |     ^
      |     LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:71:14: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   71 |         data = fgcom_client();
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:67:8: note: resolves to this declaration
   67 | struct fgcom_client {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:72:18: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   72 |         lastPing = std::chrono::system_clock::now();
      |                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:72:20: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   72 |         lastPing = std::chrono::system_clock::now();
      |                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:75:47: warning: variable 'lastNotifiedState' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   75 | extern std::map<int, fgcom_notificationState> lastNotifiedState;
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:87:50: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
   87 | void notifyRemotes(int iid, FGCOM_NOTIFY_T what, int selector=-1, mumble_userid_t tgtUser=0);
      |                                                  ^           ~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:87:67: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
   87 | void notifyRemotes(int iid, FGCOM_NOTIFY_T what, int selector=-1, mumble_userid_t tgtUser=0);
      |                                                                   ^                      ~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:106:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  106 | bool handlePluginDataReceived(mumble_userid_t senderID, std::string dataID, std::string data);
      | ~~~~ ^                                                                                       
      | auto                                                                                          -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:129:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | bool fgcom_isConnectedToServer();
      | ~~~~ ^                          
      | auto                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumbleAPI_v_1_0_x.h:8:9: warning: header guard does not follow preferred style [llvm-header-guard]
    8 | #ifndef EXTERNAL_MUMBLE_PLUGIN_API_H_
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_MUMBLE_MUMBLEAPI_V_1_0_X_H
    9 | #define EXTERNAL_MUMBLE_PLUGIN_API_H_
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_MUMBLE_MUMBLEAPI_V_1_0_X_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumbleAPI_v_1_0_x.h:16:9: warning: macro 'MUMBLE_PLUGIN_API_MAJOR_MACRO' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   16 | #define MUMBLE_PLUGIN_API_MAJOR_MACRO 1
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumbleAPI_v_1_0_x.h:17:9: warning: macro 'MUMBLE_PLUGIN_API_MINOR_MACRO' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   17 | #define MUMBLE_PLUGIN_API_MINOR_MACRO 0
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumbleAPI_v_1_0_x.h:18:9: warning: macro 'MUMBLE_PLUGIN_API_PATCH_MACRO' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   18 | #define MUMBLE_PLUGIN_API_PATCH_MACRO 3
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumbleAPI_v_1_0_x.h:28:9: warning: function-like macro 'MUMBLE_CONCAT_HELPER' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
   28 | #define MUMBLE_CONCAT_HELPER(a, b) a##_##b
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumbleAPI_v_1_0_x.h:29:9: warning: function-like macro 'MUMBLE_CONCAT' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
   29 | #define MUMBLE_CONCAT(a, b) MUMBLE_CONCAT_HELPER(a, b)
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumbleAPI_v_1_0_x.h:33:9: warning: function-like macro 'MUMBLE_API_CAST' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
   33 | #define MUMBLE_API_CAST(ptrName) (*((struct MUMBLE_API_STRUCT *) ptrName))
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumbleAPI_v_1_0_x.h:33:66: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   33 | #define MUMBLE_API_CAST(ptrName) (*((struct MUMBLE_API_STRUCT *) ptrName))
      |                                                                  ^      
      |                                                                  (      )
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumbleAPI_v_1_0_x.h:36:8: warning: accessing fields in struct 'MumbleAPI_v_1_0_x' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 128 bytes [altera-struct-pack-align]
   36 | struct MumbleAPI_v_1_0_x {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumbleAPI_v_1_0_x.h:36:8: note: use "__attribute__((aligned(128)))" to align struct 'MumbleAPI_v_1_0_x' to 128 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumbleAPI_v_1_0_x.h:530:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  530 | typedef struct MumbleAPI_v_1_0_x mumble_api_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_api_t = struct MumbleAPI_v_1_0_x
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:8:9: warning: header guard does not follow preferred style [llvm-header-guard]
    8 | #ifndef EXTERNAL_MUMBLE_PLUGIN_H_
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_MUMBLE_MUMBLEPLUGIN_V_1_0_X_H
    9 | #define EXTERNAL_MUMBLE_PLUGIN_H_
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_MUMBLE_MUMBLEPLUGIN_V_1_0_X_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:29:1: warning: replace macro with enum [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
   29 | #define MUMBLE_PLUGIN_FUNCTIONS_MAJOR_MACRO 1
      | ^~~~~~~                                      
      |                                             =,
   30 | #define MUMBLE_PLUGIN_FUNCTIONS_MINOR_MACRO 0
      | ~~~~~~~                                      
      |                                             =,
   31 | #define MUMBLE_PLUGIN_FUNCTIONS_PATCH_MACRO 1
      | ~~~~~~~
      |                                             =
   32 | 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:29:9: warning: macro 'MUMBLE_PLUGIN_FUNCTIONS_MAJOR_MACRO' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
   29 | #define MUMBLE_PLUGIN_FUNCTIONS_MAJOR_MACRO 1
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:29:9: warning: macro 'MUMBLE_PLUGIN_FUNCTIONS_MAJOR_MACRO' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:30:9: warning: macro 'MUMBLE_PLUGIN_FUNCTIONS_MINOR_MACRO' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
   30 | #define MUMBLE_PLUGIN_FUNCTIONS_MINOR_MACRO 0
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:30:9: warning: macro 'MUMBLE_PLUGIN_FUNCTIONS_MINOR_MACRO' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:31:9: warning: macro 'MUMBLE_PLUGIN_FUNCTIONS_PATCH_MACRO' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
   31 | #define MUMBLE_PLUGIN_FUNCTIONS_PATCH_MACRO 1
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:31:9: warning: macro 'MUMBLE_PLUGIN_FUNCTIONS_PATCH_MACRO' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:53:56: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   53 | PLUGIN_EXPORT mumble_error_t PLUGIN_CALLING_CONVENTION mumble_init(uint32_t id);
      |               ~~~~~~~~~~~~~~                           ^                       
      |               auto                                                              -> mumble_error_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:53:77: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
   53 | PLUGIN_EXPORT mumble_error_t PLUGIN_CALLING_CONVENTION mumble_init(uint32_t id);
      |                                                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:64:68: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   64 | PLUGIN_EXPORT struct MumbleStringWrapper PLUGIN_CALLING_CONVENTION mumble_getName();
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^               
      |               auto                                                                  -> struct MumbleStringWrapper
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:72:58: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   72 | PLUGIN_EXPORT mumble_version_t PLUGIN_CALLING_CONVENTION mumble_getAPIVersion();
      |               ~~~~~~~~~~~~~~~~                           ^                     
      |               auto                                                              -> mumble_version_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:133:58: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  133 | PLUGIN_EXPORT mumble_version_t PLUGIN_CALLING_CONVENTION mumble_getVersion();
      |               ~~~~~~~~~~~~~~~~                           ^                  
      |               auto                                                           -> mumble_version_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:140:68: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  140 | PLUGIN_EXPORT struct MumbleStringWrapper PLUGIN_CALLING_CONVENTION mumble_getAuthor();
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^                 
      |               auto                                                                    -> struct MumbleStringWrapper
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:147:68: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  147 | PLUGIN_EXPORT struct MumbleStringWrapper PLUGIN_CALLING_CONVENTION mumble_getDescription();
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^                      
      |               auto                                                                         -> struct MumbleStringWrapper
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:155:50: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  155 | PLUGIN_EXPORT uint32_t PLUGIN_CALLING_CONVENTION mumble_getFeatures();
      |               ~~~~~~~~                           ^                   
      |               auto                                                    -> uint32_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:170:50: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  170 | PLUGIN_EXPORT uint32_t PLUGIN_CALLING_CONVENTION mumble_deactivateFeatures(uint32_t features);
      |               ~~~~~~~~                           ^                                           
      |               auto                                                                            -> uint32_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:193:49: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  193 | PLUGIN_EXPORT uint8_t PLUGIN_CALLING_CONVENTION mumble_initPositionalData(const char *const *programNames,
      |               ~~~~~~~                           ^
      |               auto
  194 |                                                                                                                                                   const uint64_t *programPIDs,
  195 |                                                                                                                                                   size_t programCount);
      |                                                                                                                                                                       
      |                                                                                                                                                                        -> uint8_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:221:46: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  221 | PLUGIN_EXPORT bool PLUGIN_CALLING_CONVENTION mumble_fetchPositionalData(float *avatarPos, float *avatarDir,
      |               ~~~~                           ^
      |               auto
  222 |                                                                                                                                                 float *avatarAxis, float *cameraPos,
  223 |                                                                                                                                                 float *cameraDir, float *cameraAxis,
  224 |                                                                                                                                                 const char **context, const char **identity);
      |                                                                                                                                                                                             
      |                                                                                                                                                                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:304:46: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  304 | PLUGIN_EXPORT bool PLUGIN_CALLING_CONVENTION mumble_onAudioInput(short *inputPCM, uint32_t sampleCount,
      |               ~~~~                           ^
      |               auto
  305 |                                                                                                                                  uint16_t channelCount, uint32_t sampleRate,
  306 |                                                                                                                                  bool isSpeech);
      |                                                                                                                                                
      |                                                                                                                                                 -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:304:66: warning: consider replacing 'short' with 'int16' [google-runtime-int]
  304 | PLUGIN_EXPORT bool PLUGIN_CALLING_CONVENTION mumble_onAudioInput(short *inputPCM, uint32_t sampleCount,
      |                                                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:323:46: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  323 | PLUGIN_EXPORT bool PLUGIN_CALLING_CONVENTION mumble_onAudioSourceFetched(float *outputPCM, uint32_t sampleCount,
      |               ~~~~                           ^
      |               auto
  324 |                                                                                                                                                  uint16_t channelCount, uint32_t sampleRate,
  325 |                                                                                                                                                  bool isSpeech, mumble_userid_t userID);
      |                                                                                                                                                                                        
      |                                                                                                                                                                                         -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:339:46: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  339 | PLUGIN_EXPORT bool PLUGIN_CALLING_CONVENTION mumble_onAudioOutputAboutToPlay(float *outputPCM, uint32_t sampleCount,
      |               ~~~~                           ^
      |               auto
  340 |                                                                                                                                                          uint16_t channelCount,
  341 |                                                                                                                                                          uint32_t sampleRate);
      |                                                                                                                                                                              
      |                                                                                                                                                                               -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:353:46: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  353 | PLUGIN_EXPORT bool PLUGIN_CALLING_CONVENTION mumble_onReceiveData(mumble_connection_t connection,
      |               ~~~~                           ^
      |               auto
  354 |                                                                                                                                   mumble_userid_t sender, const uint8_t *data,
  355 |                                                                                                                                   size_t dataLength, const char *dataID);
      |                                                                                                                                                                         
      |                                                                                                                                                                          -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:424:46: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  424 | PLUGIN_EXPORT bool PLUGIN_CALLING_CONVENTION mumble_hasUpdate();
      |               ~~~~                           ^                 
      |               auto                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:431:68: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  431 | PLUGIN_EXPORT struct MumbleStringWrapper PLUGIN_CALLING_CONVENTION mumble_getUpdateDownloadURL();
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^                            
      |               auto                                                                               -> struct MumbleStringWrapper
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:8:9: warning: header guard does not follow preferred style [llvm-header-guard]
    8 | #ifndef EXTERNAL_MUMBLE_PLUGINCOMPONENT_H_
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_MUMBLE_PLUGINCOMPONENTS_V_1_0_X_H
    9 | #define EXTERNAL_MUMBLE_PLUGINCOMPONENT_H_
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_MUMBLE_PLUGINCOMPONENTS_V_1_0_X_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:16:1: warning: system include string not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h [llvmlibc-restrict-system-libc-headers]
   16 | #       include <string>
      | ^~~~~~~~~~~~~~~~~~~~~~~~
   17 | #endif
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:35:6: warning: enum 'Mumble_PluginFeature' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   35 | enum Mumble_PluginFeature {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:39:30: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
   39 |         MUMBLE_FEATURE_POSITIONAL = 1 << 0,
      |                                     ^ ~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:41:25: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
   41 |         MUMBLE_FEATURE_AUDIO = 1 << 1
      |                                ^ ~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:45:6: warning: enum 'Mumble_TalkingState' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   45 | enum Mumble_TalkingState {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:57:6: warning: enum 'Mumble_TransmissionMode' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   57 | enum Mumble_TransmissionMode { MUMBLE_TM_CONTINOUS, MUMBLE_TM_VOICE_ACTIVATION, MUMBLE_TM_PUSH_TO_TALK };
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:61:6: warning: enum 'Mumble_ErrorCode' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   61 | enum Mumble_ErrorCode {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:89:6: warning: enum 'Mumble_PositionalDataErrorCode' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   89 | enum Mumble_PositionalDataErrorCode {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:100:6: warning: enum 'Mumble_SettingsKey' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  100 | enum Mumble_SettingsKey {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:112:6: warning: enum 'Mumble_KeyCode' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int16_t' (2 bytes) as the base type to reduce its size [performance-enum-size]
  112 | enum Mumble_KeyCode {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:183:2: warning: 'MUMBLE_KC_I' is confusable with 'MUMBLE_KC_1' [misc-confusable-identifiers]
  183 |         MUMBLE_KC_I                 = 'I',
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:159:2: note: other declaration found here
  159 |         MUMBLE_KC_1                 = '1',
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:189:2: warning: 'MUMBLE_KC_O' is confusable with 'MUMBLE_KC_0' [misc-confusable-identifiers]
  189 |         MUMBLE_KC_O                 = 'O',
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:158:2: note: other declaration found here
  158 |         MUMBLE_KC_0                 = '0',
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:242:8: warning: accessing fields in struct 'MumbleVersion' is inefficient due to poor alignment; currently aligned to 4 bytes, but recommended alignment is 16 bytes [altera-struct-pack-align]
  242 | struct MumbleVersion {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:242:8: note: use "__attribute__((aligned(16)))" to align struct 'MumbleVersion' to 16 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:243:10: warning: member variable 'major' has public visibility [misc-non-private-member-variables-in-classes]
  243 |         int32_t major;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:244:10: warning: member variable 'minor' has public visibility [misc-non-private-member-variables-in-classes]
  244 |         int32_t minor;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:245:10: warning: member variable 'patch' has public visibility [misc-non-private-member-variables-in-classes]
  245 |         int32_t patch;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:247:2: warning: overloading 'operator<' is disallowed [fuchsia-overloaded-operator]
  247 |         bool operator<(const MumbleVersion &other) const {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:247:2: warning: 'operator<' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  247 |         bool operator<(const MumbleVersion &other) const {
      |         ^
      |         LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:247:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  247 |         bool operator<(const MumbleVersion &other) const {
      |         ~~~~ ^
      |         auto                                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:258:2: warning: overloading 'operator>' is disallowed [fuchsia-overloaded-operator]
  258 |         bool operator>(const MumbleVersion &other) const {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:258:2: warning: 'operator>' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  258 |         bool operator>(const MumbleVersion &other) const {
      |         ^
      |         LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:258:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  258 |         bool operator>(const MumbleVersion &other) const {
      |         ~~~~ ^
      |         auto                                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:269:2: warning: overloading 'operator>=' is disallowed [fuchsia-overloaded-operator]
  269 |         bool operator>=(const MumbleVersion &other) const {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:269:2: warning: 'operator>=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  269 |         bool operator>=(const MumbleVersion &other) const {
      |         ^
      |         LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:269:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  269 |         bool operator>=(const MumbleVersion &other) const {
      |         ~~~~ ^
      |         auto                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:280:2: warning: overloading 'operator<=' is disallowed [fuchsia-overloaded-operator]
  280 |         bool operator<=(const MumbleVersion &other) const {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:280:2: warning: 'operator<=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  280 |         bool operator<=(const MumbleVersion &other) const {
      |         ^
      |         LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:280:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  280 |         bool operator<=(const MumbleVersion &other) const {
      |         ~~~~ ^
      |         auto                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:291:2: warning: overloading 'operator==' is disallowed [fuchsia-overloaded-operator]
  291 |         bool operator==(const MumbleVersion &other) const {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:291:2: warning: 'operator==' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  291 |         bool operator==(const MumbleVersion &other) const {
      |         ^
      |         LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:291:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  291 |         bool operator==(const MumbleVersion &other) const {
      |         ~~~~ ^
      |         auto                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:295:2: warning: overloading 'operator!=' is disallowed [fuchsia-overloaded-operator]
  295 |         bool operator!=(const MumbleVersion &other) const {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:295:2: warning: 'operator!=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  295 |         bool operator!=(const MumbleVersion &other) const {
      |         ^
      |         LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:295:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  295 |         bool operator!=(const MumbleVersion &other) const {
      |         ~~~~ ^
      |         auto                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:299:2: warning: 'operator basic_string' must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
  299 |         operator std::string() const {
      |         ^
      |         explicit 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:299:2: warning: 'operator basic_string' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  299 |         operator std::string() const {
      |         ^
      |         LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:300:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  300 |                 return std::string("v") + std::to_string(this->major) + std::string(".") + std::to_string(this->minor)
      |                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:300:27: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  300 |                 return std::string("v") + std::to_string(this->major) + std::string(".") + std::to_string(this->minor)
      |                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:300:29: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  300 |                 return std::string("v") + std::to_string(this->major) + std::string(".") + std::to_string(this->minor)
      |                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:300:57: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  300 |                 return std::string("v") + std::to_string(this->major) + std::string(".") + std::to_string(this->minor)
      |                                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:300:59: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  300 |                 return std::string("v") + std::to_string(this->major) + std::string(".") + std::to_string(this->minor)
      |                                                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:300:76: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  300 |                 return std::string("v") + std::to_string(this->major) + std::string(".") + std::to_string(this->minor)
      |                                                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:300:78: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  300 |                 return std::string("v") + std::to_string(this->major) + std::string(".") + std::to_string(this->minor)
      |                                                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:301:7: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  301 |                            + std::string(".") + std::to_string(this->patch);
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:301:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  301 |                            + std::string(".") + std::to_string(this->patch);
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:301:26: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  301 |                            + std::string(".") + std::to_string(this->patch);
      |                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:301:28: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  301 |                            + std::string(".") + std::to_string(this->patch);
      |                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:321:1: warning: 'mumble_errorMessage' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  321 | inline const char *mumble_errorMessage(int16_t errorCode) {
      | ^
      | LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:321:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  321 | inline const char *mumble_errorMessage(int16_t errorCode) {
      |        ~~~~~~~~~~~~^
      |        auto                                               -> const char *
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:377:8: warning: accessing fields in struct 'MumbleStringWrapper' is inefficient due to padding; only needs 17 bytes but is using 24 bytes [altera-struct-pack-align]
  377 | struct MumbleStringWrapper {
      |        ^
  378 |         /// The pointer to the actual String data
  379 |         const char *data;
  380 |         /// The size of the pointed String data
  381 |         size_t size;
  382 |         /// Whether the wrapped String needs to be released
  383 |         /// after its usage. Instances for which this would be
  384 |         /// false: Static Strings, String literals
  385 |         bool needsReleasing;
  386 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:377:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'MumbleStringWrapper'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:377:8: warning: accessing fields in struct 'MumbleStringWrapper' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 32 bytes [altera-struct-pack-align]
  377 | struct MumbleStringWrapper {
      |        ^
  378 |         /// The pointer to the actual String data
  379 |         const char *data;
  380 |         /// The size of the pointed String data
  381 |         size_t size;
  382 |         /// Whether the wrapped String needs to be released
  383 |         /// after its usage. Instances for which this would be
  384 |         /// false: Static Strings, String literals
  385 |         bool needsReleasing;
  386 | };
      |  
      |   __attribute__((aligned(32)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:377:8: note: use "__attribute__((aligned(32)))" to align struct 'MumbleStringWrapper' to 32 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:389:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  389 | typedef enum Mumble_TalkingState mumble_talking_state_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_talking_state_t = enum Mumble_TalkingState
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:391:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  391 | typedef enum Mumble_TransmissionMode mumble_transmission_mode_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_transmission_mode_t = enum Mumble_TransmissionMode
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:393:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  393 | typedef struct MumbleVersion mumble_version_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_version_t = struct MumbleVersion
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:395:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  395 | typedef int32_t mumble_connection_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_connection_t = int32_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:397:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  397 | typedef uint32_t mumble_userid_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_userid_t = uint32_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:399:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  399 | typedef int32_t mumble_channelid_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_channelid_t = int32_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:401:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  401 | typedef enum Mumble_ErrorCode mumble_error_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_error_t = enum Mumble_ErrorCode
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:403:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  403 | typedef uint32_t mumble_plugin_id_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_plugin_id_t = uint32_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:405:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  405 | typedef enum Mumble_SettingsKey mumble_settings_key_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_settings_key_t = enum Mumble_SettingsKey
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:407:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  407 | typedef enum Mumble_KeyCode mumble_keycode_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_keycode_t = enum Mumble_KeyCode
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:27:1: warning: #includes are not sorted properly [llvm-include-order]
   27 | #include <stdio.h>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:27:1: warning: system include stdio.h not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c [llvmlibc-restrict-system-libc-headers]
   27 | #include <stdio.h>
      | ^~~~~~~~~~~~~~~~~~
   28 | #include <math.h>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:28:1: warning: system include math.h not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c [llvmlibc-restrict-system-libc-headers]
   28 | #include <math.h>
      | ^~~~~~~~~~~~~~~~~
   29 | //#include "portaudio.h"
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:37:8: warning: consider replacing 'unsigned long' with 'uint64' [google-runtime-int]
   37 | static unsigned long GenerateRandomNumber( void )
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:37:22: warning: function 'GenerateRandomNumber' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
   37 | static unsigned long GenerateRandomNumber( void )
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:37:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   37 | static unsigned long GenerateRandomNumber( void )
      |        ~~~~~~~~~~~~~ ^                           
      |        auto                                       -> unsigned long
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:37:44: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
   37 | static unsigned long GenerateRandomNumber( void )
      |                                            ^~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:39:9: warning: consider replacing 'unsigned long' with 'uint64' [google-runtime-int]
   39 |         static unsigned long randSeed = 22222;  /* Change this for different random sequences. */
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:39:34: warning: 22222 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   39 |         static unsigned long randSeed = 22222;  /* Change this for different random sequences. */
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:40:25: warning: 196314165 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   40 |         randSeed = (randSeed * 196314165) + 907633515;
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:40:38: warning: 907633515 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   40 |         randSeed = (randSeed * 196314165) + 907633515;
      |                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:48:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   48 | typedef struct
      | ^~~~~~~~~~~~~~
   49 | {
      | ~
   50 |         long      pink_Rows[PINK_MAX_RANDOM_ROWS];
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |         long      pink_RunningSum;   /* Used to optimize summing of generators. */
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |         int       pink_Index;        /* Incremented each sample. */
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |         int       pink_IndexMask;    /* Index wrapped by ANDing with this mask. */
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |         float     pink_Scalar;       /* Used to scale within range of -1.0 to +1.0 */
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   55 | } PinkNoise;
      | ~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:48:9: warning: accessing fields in struct 'PinkNoise' is inefficient due to padding; only needs 260 bytes but is using 264 bytes [altera-struct-pack-align]
   48 | typedef struct
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:48:9: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'PinkNoise'
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:48:9: warning: accessing fields in struct 'PinkNoise' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 128 bytes [altera-struct-pack-align]
   48 | typedef struct
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:48:9: note: use "__attribute__((aligned(128)))" to align struct 'PinkNoise' to 128 bytes
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:50:2: warning: consider replacing 'long' with 'int64' [google-runtime-int]
   50 |         long      pink_Rows[PINK_MAX_RANDOM_ROWS];
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:51:2: warning: consider replacing 'long' with 'int64' [google-runtime-int]
   51 |         long      pink_RunningSum;   /* Used to optimize summing of generators. */
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:60:6: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
   60 |         int i;
      |             ^
      |               = 0
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:60:6: warning: variable name 'i' is too short, expected at least 3 characters [readability-identifier-length]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:61:2: warning: consider replacing 'long' with 'int64' [google-runtime-int]
   61 |         long pmax;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:61:7: warning: variable 'pmax' is not initialized [cppcoreguidelines-init-variables]
   61 |         long pmax;
      |              ^   
      |                   = 0
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:63:26: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
   63 |         pink->pink_IndexMask = (1<<numRows) - 1;
      |                                 ^~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:65:9: warning: performing an implicit widening conversion to type 'long' of a multiplication performed in type 'int' [bugprone-implicit-widening-of-multiplication-result]
   65 |         pmax = (numRows + 1) * (1<<(PINK_RANDOM_BITS-1));
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:65:9: note: make conversion explicit to silence this warning
   29 |         pmax = (numRows + 1) * (1<<(PINK_RANDOM_BITS-1));
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                static_cast<long>(                       )
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:65:9: note: perform multiplication in a wider type
   65 |         pmax = (numRows + 1) * (1<<(PINK_RANDOM_BITS-1));
      |                ^~~~~~~~~~~~
      |                 static_cast<long>( )
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:65:26: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
   65 |         pmax = (numRows + 1) * (1<<(PINK_RANDOM_BITS-1));
      |                                 ^~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:66:22: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   66 |         pink->pink_Scalar = 1.0f / pmax;
      |                             ^  ~
      |                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:66:29: warning: narrowing conversion from 'long' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
   66 |         pink->pink_Scalar = 1.0f / pmax;
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:68:2: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   68 |         for( i=0; i<numRows; i++ ) pink->pink_Rows[i] = 0;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:68:28: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
   68 |         for( i=0; i<numRows; i++ ) pink->pink_Rows[i] = 0;
      |                                   ^                       
      |                                    {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:68:29: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
   68 |         for( i=0; i<numRows; i++ ) pink->pink_Rows[i] = 0;
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:74:19: warning: 999.0 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   74 |         float pinkMax = -999.0;
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:75:19: warning: 999.0 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   75 |         float pinkMin =  999.0;
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:79:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   79 | float GeneratePinkNoise( PinkNoise *pink )
      | ~~~~~ ^                                   
      | auto                                       -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:81:2: warning: consider replacing 'long' with 'int64' [google-runtime-int]
   81 |         long newRandom;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:81:7: warning: variable 'newRandom' is not initialized [cppcoreguidelines-init-variables]
   81 |         long newRandom;
      |              ^        
      |                        = 0
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:82:2: warning: consider replacing 'long' with 'int64' [google-runtime-int]
   82 |         long sum;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:82:7: warning: variable 'sum' is not initialized [cppcoreguidelines-init-variables]
   82 |         long sum;
      |              ^  
      |                  = 0
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:83:8: warning: variable 'output' is not initialized [cppcoreguidelines-init-variables]
   27 |         float output;
      |               ^     
      |                      = NAN
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:86:21: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
   86 |         pink->pink_Index = (pink->pink_Index + 1) & pink->pink_IndexMask;
      |                            ^~~~~~~~~~~~~~~~~~~~~~ ~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:94:7: warning: variable name 'n' is too short, expected at least 3 characters [readability-identifier-length]
   94 |                 int n = pink->pink_Index;
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:95:3: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   95 |                 while( (n & 1) == 0 )
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:95:10: warning: backward branch (while loop) is ID-dependent due to variable reference to 'n' and may cause performance degradation [altera-id-dependent-backward-branch]
   95 |                 while( (n & 1) == 0 )
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:94:3: note: inferred assignment of ID-dependent value from ID-dependent 
   94 |                 int n = pink->pink_Index;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:95:11: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
   95 |                 while( (n & 1) == 0 )
      |                         ^ ~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:97:8: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
   97 |                         n = n >> 1;
      |                             ^ ~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:105:28: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  105 |                 pink->pink_RunningSum -= pink->pink_Rows[numZeros];
      |                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:106:15: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
  106 |                 newRandom = ((long)GenerateRandomNumber()) >> PINK_RANDOM_SHIFT;
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:106:17: warning: consider replacing 'long' with 'int64' [google-runtime-int]
  106 |                 newRandom = ((long)GenerateRandomNumber()) >> PINK_RANDOM_SHIFT;
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:106:22: warning: 'GenerateRandomNumber' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  106 |                 newRandom = ((long)GenerateRandomNumber()) >> PINK_RANDOM_SHIFT;
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:37:22: note: resolves to this declaration
   37 | static unsigned long GenerateRandomNumber( void )
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:108:3: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  108 |                 pink->pink_Rows[numZeros] = newRandom;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:112:14: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
  112 |         newRandom = ((long)GenerateRandomNumber()) >> PINK_RANDOM_SHIFT;
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:112:16: warning: consider replacing 'long' with 'int64' [google-runtime-int]
  112 |         newRandom = ((long)GenerateRandomNumber()) >> PINK_RANDOM_SHIFT;
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:112:21: warning: 'GenerateRandomNumber' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  112 |         newRandom = ((long)GenerateRandomNumber()) >> PINK_RANDOM_SHIFT;
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:37:22: note: resolves to this declaration
   37 | static unsigned long GenerateRandomNumber( void )
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:116:31: warning: narrowing conversion from 'long' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  116 |         output = pink->pink_Scalar * sum;
      |                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:120:24: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  120 |         if( output > pinkMax ) pinkMax = output;
      |                               ^
      |                                {
  121 |         else if( output < pinkMin ) pinkMin = output;
      |         } 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/noise/phil_burk_19990905_patest_pink.c:121:29: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  121 |         else if( output < pinkMin ) pinkMin = output;
      |                                    ^                 
      |                                     {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:1:1: warning: header is missing header guard [llvm-header-guard]
    1 | /* 
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:17:1: warning: #includes are not sorted properly [llvm-include-order]
   17 | #include <cstdint>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:17:1: warning: system include cstdint not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h [llvmlibc-restrict-system-libc-headers]
   17 | #include <cstdint>
      | ^~~~~~~~~~~~~~~~~~
   18 | #include <iostream> 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:18:1: warning: system include iostream not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h [llvmlibc-restrict-system-libc-headers]
   18 | #include <iostream> 
      | ^~~~~~~~~~~~~~~~~~~
   19 | #include <cmath>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:19:1: warning: system include cmath not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h [llvmlibc-restrict-system-libc-headers]
   19 | #include <cmath>
      | ^~~~~~~~~~~~~~~~
   20 | #include <regex>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:20:1: warning: system include regex not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h [llvmlibc-restrict-system-libc-headers]
   20 | #include <regex>
      | ^~~~~~~~~~~~~~~~
   21 | 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:34:9: warning: macro 'EARTH_RADIUS_CONST' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   34 | #define EARTH_RADIUS_CONST 3.57  // earth radius factor constant for m/km
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:35:9: warning: macro 'EARTH_RADIUS_AVG' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   35 | #define EARTH_RADIUS_AVG   6371  // earth radius constant in km
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:39:8: warning: accessing fields in struct 'fgcom_radio' is inefficient due to padding; only needs 172 bytes but is using 192 bytes [altera-struct-pack-align]
   39 | struct fgcom_radio {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:39:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'fgcom_radio'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:39:8: warning: accessing fields in struct 'fgcom_radio' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 128 bytes [altera-struct-pack-align]
   39 | struct fgcom_radio {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:39:8: note: use "__attribute__((aligned(128)))" to align struct 'fgcom_radio' to 128 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:40:15: warning: member variable 'frequency' has public visibility [misc-non-private-member-variables-in-classes]
   40 |         std::string  frequency; // tuned frequency (real carrier frequency)
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:41:15: warning: member variable 'dialedFRQ' has public visibility [misc-non-private-member-variables-in-classes]
   41 |         std::string  dialedFRQ; // dialed frequency (aka "channel"; what was supplied from the COMn_FRQ= field)
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:42:8: warning: member variable 'power_btn' has public visibility [misc-non-private-member-variables-in-classes]
   42 |         bool  power_btn;     // true if switched on
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:43:8: warning: member variable 'volts' has public visibility [misc-non-private-member-variables-in-classes]
   43 |         float volts;         // how much electric power it has (>0 = on)
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:44:8: warning: member variable 'serviceable' has public visibility [misc-non-private-member-variables-in-classes]
   44 |         bool  serviceable;   // false if broken
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:45:8: warning: member variable 'ptt' has public visibility [misc-non-private-member-variables-in-classes]
   45 |         bool  ptt;           // true if PTT is actually pushed (synced to remotes and used to determine reception)
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:46:8: warning: member variable 'ptt_req' has public visibility [misc-non-private-member-variables-in-classes]
   46 |         bool  ptt_req;       // true if PTT is requested from client/udp
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:47:8: warning: member variable 'volume' has public visibility [misc-non-private-member-variables-in-classes]
   47 |         float volume;        // volume, 0.0->1.0
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:48:8: warning: member variable 'pwr' has public visibility [misc-non-private-member-variables-in-classes]
   48 |         float pwr;           // tx power in watts
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:49:8: warning: member variable 'operable' has public visibility [misc-non-private-member-variables-in-classes]
   49 |         bool  operable;      // false if switched off, not powered or broken
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:50:8: warning: member variable 'squelch' has public visibility [misc-non-private-member-variables-in-classes]
   50 |         float squelch;       // squelch setting (cutoff signal below this quality)
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:51:8: warning: member variable 'rdfEnabled' has public visibility [misc-non-private-member-variables-in-classes]
   51 |         bool  rdfEnabled;    // if radio can receive RDF information
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:52:8: warning: member variable 'channelWidth' has public visibility [misc-non-private-member-variables-in-classes]
   52 |         float channelWidth;  // channel width in kHz
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:53:8: warning: member variable 'publish' has public visibility [misc-non-private-member-variables-in-classes]
   53 |         bool  publish;       // if set to false, radio will not be broadcast to other plugins (implies receive-only)
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:56:14: warning: member variable 'antenna_type' has public visibility [misc-non-private-member-variables-in-classes]
   56 |         std::string antenna_type;      // Type of antenna (vertical, yagi, loop, etc.)
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:57:14: warning: member variable 'frequency_band' has public visibility [misc-non-private-member-variables-in-classes]
   57 |         std::string frequency_band;    // Frequency band for regulatory compliance
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:58:8: warning: member variable 'power_efficiency' has public visibility [misc-non-private-member-variables-in-classes]
   58 |         float power_efficiency;        // Current power efficiency (0.0-1.0)
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:59:7: warning: member variable 'power_limiting_enabled' has public visibility [misc-non-private-member-variables-in-classes]
   59 |         bool power_limiting_enabled;   // Whether automatic power limiting is enabled
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:60:8: warning: member variable 'swr' has public visibility [misc-non-private-member-variables-in-classes]
   60 |         float swr;                     // Standing Wave Ratio
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:61:8: warning: member variable 'temperature' has public visibility [misc-non-private-member-variables-in-classes]
   61 |         float temperature;             // Antenna temperature in Celsius
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:62:8: warning: member variable 'battery_level' has public visibility [misc-non-private-member-variables-in-classes]
   62 |         float battery_level;           // Battery level (0.0-1.0)
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:64:2: warning: 'fgcom_radio' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   64 |         fgcom_radio()  {
      |         ^
      |         LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:65:9: warning: 'frequency' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   40 |         frequency   = "";
      |         ^~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:65:21: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   65 |         frequency   = "";
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:66:9: warning: 'dialedFRQ' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   41 |         dialedFRQ   = "";
      |         ^~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:66:21: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   66 |         dialedFRQ   = "";
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:67:9: warning: 'power_btn' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   42 |         power_btn   = true;
      |         ^~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:68:9: warning: 'volts' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   43 |         volts       = 12;
      |         ^~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:68:23: warning: 12 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   68 |         volts       = 12;
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:69:9: warning: 'serviceable' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   44 |         serviceable = true;
      |         ^~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:70:9: warning: 'ptt' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   45 |         ptt         = false;
      |         ^~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:71:9: warning: 'ptt_req' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   46 |         ptt_req     = false;
      |         ^~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:72:9: warning: 'volume' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   47 |         volume      = 1.0;
      |         ^~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:73:9: warning: 'pwr' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   48 |         pwr         = 10;
      |         ^~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:73:23: warning: 10 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   73 |         pwr         = 10;
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:74:9: warning: 'operable' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   49 |         operable    = true;
      |         ^~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:75:9: warning: 'squelch' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   50 |         squelch     = 0.1;
      |         ^~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:75:23: warning: 0.1 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   75 |         squelch     = 0.1;
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:76:9: warning: 'rdfEnabled' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   51 |         rdfEnabled  = false;
      |         ^~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:77:9: warning: 'channelWidth' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   52 |         channelWidth = -1;   // let the selected radio model decide on defaults
      |         ^~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:78:9: warning: 'publish' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   53 |         publish     = true;
      |         ^~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:81:9: warning: 'antenna_type' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   56 |         antenna_type = "vertical";
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:81:22: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   81 |         antenna_type = "vertical";
      |                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:82:9: warning: 'frequency_band' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   57 |         frequency_band = "amateur";
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:82:24: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   82 |         frequency_band = "amateur";
      |                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:83:9: warning: 'power_efficiency' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   58 |         power_efficiency = 0.8f;
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:83:28: warning: 0.8f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   83 |         power_efficiency = 0.8f;
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:83:28: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:84:9: warning: 'power_limiting_enabled' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   59 |         power_limiting_enabled = true;
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:85:9: warning: 'swr' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   60 |         swr = 1.0f;
      |         ^~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:85:15: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   85 |         swr = 1.0f;
      |               ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:86:9: warning: 'temperature' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   61 |         temperature = 25.0f;
      |         ^~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:86:23: warning: 25.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   86 |         temperature = 25.0f;
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:86:23: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:87:9: warning: 'battery_level' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   62 |         battery_level = 1.0f;
      |         ^~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:87:25: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   87 |         battery_level = 1.0f;
      |                         ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:92:8: warning: accessing fields in struct 'fgcom_amateur_radio' is inefficient due to padding; only needs 105 bytes but is using 304 bytes [altera-struct-pack-align]
   92 | struct fgcom_amateur_radio : public fgcom_radio {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:92:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'fgcom_amateur_radio'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:92:8: warning: accessing fields in struct 'fgcom_amateur_radio' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 128 bytes [altera-struct-pack-align]
   92 | struct fgcom_amateur_radio : public fgcom_radio {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:92:8: note: use "__attribute__((aligned(128)))" to align struct 'fgcom_amateur_radio' to 128 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:93:17: warning: member variable 'band' has public visibility [misc-non-private-member-variables-in-classes]
   93 |     std::string band;           // "160m", "80m", "40m", "20m", etc.
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:94:17: warning: member variable 'mode' has public visibility [misc-non-private-member-variables-in-classes]
   94 |     std::string mode;           // "CW", "LSB", "USB", "NFM", "AM"
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:95:17: warning: member variable 'grid_locator' has public visibility [misc-non-private-member-variables-in-classes]
   95 |     std::string grid_locator;   // Maidenhead grid square
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:96:11: warning: member variable 'power_watts' has public visibility [misc-non-private-member-variables-in-classes]
   96 |     float power_watts;          // Transmit power (50W-1000W)
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:97:10: warning: member variable 'is_amateur' has public visibility [misc-non-private-member-variables-in-classes]
   97 |     bool is_amateur;            // Amateur radio flag
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:98:9: warning: member variable 'itu_region' has public visibility [misc-non-private-member-variables-in-classes]
   98 |     int itu_region;             // ITU Region (1, 2, 3)
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:100:5: warning: 'fgcom_amateur_radio' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  100 |     fgcom_amateur_radio() : fgcom_radio() {
      |     ^
      |     LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:100:29: warning: initializer for base class 'fgcom_radio' is redundant [readability-redundant-member-init]
  100 |     fgcom_amateur_radio() : fgcom_radio() {
      |                             ^~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:101:9: warning: 'band' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   93 |     std::string band;           // "160m", "80m", "40m", "20m", etc.
      |                     
      |                     {""}
   94 |     std::string mode;           // "CW", "LSB", "USB", "NFM", "AM"
   95 |     std::string grid_locator;   // Maidenhead grid square
   96 |     float power_watts;          // Transmit power (50W-1000W)
   97 |     bool is_amateur;            // Amateur radio flag
   98 |     int itu_region;             // ITU Region (1, 2, 3)
   99 |     
  100 |     fgcom_amateur_radio() : fgcom_radio() {
  101 |         band = "";
      |         ^~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:101:14: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  101 |         band = "";
      |              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:102:9: warning: 'mode' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   94 |     std::string mode;           // "CW", "LSB", "USB", "NFM", "AM"
      |                     
      |                     {"USB"}
   95 |     std::string grid_locator;   // Maidenhead grid square
   96 |     float power_watts;          // Transmit power (50W-1000W)
   97 |     bool is_amateur;            // Amateur radio flag
   98 |     int itu_region;             // ITU Region (1, 2, 3)
   99 |     
  100 |     fgcom_amateur_radio() : fgcom_radio() {
  101 |         band = "";
  102 |         mode = "USB";
      |         ^~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:102:14: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  102 |         mode = "USB";
      |              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:103:9: warning: 'grid_locator' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   95 |     std::string grid_locator;   // Maidenhead grid square
      |                             
      |                             {""}
   96 |     float power_watts;          // Transmit power (50W-1000W)
   97 |     bool is_amateur;            // Amateur radio flag
   98 |     int itu_region;             // ITU Region (1, 2, 3)
   99 |     
  100 |     fgcom_amateur_radio() : fgcom_radio() {
  101 |         band = "";
  102 |         mode = "USB";
  103 |         grid_locator = "";
      |         ^~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:103:22: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  103 |         grid_locator = "";
      |                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:104:9: warning: 'power_watts' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   96 |     float power_watts;          // Transmit power (50W-1000W)
      |                      
      |                      {100.0}
   97 |     bool is_amateur;            // Amateur radio flag
   98 |     int itu_region;             // ITU Region (1, 2, 3)
   99 |     
  100 |     fgcom_amateur_radio() : fgcom_radio() {
  101 |         band = "";
  102 |         mode = "USB";
  103 |         grid_locator = "";
  104 |         power_watts = 100.0;
      |         ^~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:105:9: warning: 'is_amateur' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   97 |     bool is_amateur;            // Amateur radio flag
      |                    
      |                    {false}
   98 |     int itu_region;             // ITU Region (1, 2, 3)
   99 |     
  100 |     fgcom_amateur_radio() : fgcom_radio() {
  101 |         band = "";
  102 |         mode = "USB";
  103 |         grid_locator = "";
  104 |         power_watts = 100.0;
  105 |         is_amateur = false;
      |         ^~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:106:9: warning: 'itu_region' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   98 |     int itu_region;             // ITU Region (1, 2, 3)
      |                   
      |                   {1}
   99 |     
  100 |     fgcom_amateur_radio() : fgcom_radio() {
  101 |         band = "";
  102 |         mode = "USB";
  103 |         grid_locator = "";
  104 |         power_watts = 100.0;
  105 |         is_amateur = false;
  106 |         itu_region = 1;  // Default to Region 1
      |         ^~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:113:8: warning: accessing fields in struct 'fgcom_radiowave_signal' is inefficient due to poor alignment; currently aligned to 4 bytes, but recommended alignment is 16 bytes [altera-struct-pack-align]
  113 | struct fgcom_radiowave_signal {
      |        ^
  114 |     float quality;        // 0.0=no signal, 1.0=perfect signal
  115 |     float direction;      // 0.0=north, 90=east, 180=south, 270=west
  116 |     float verticalAngle;  // 0.0=straight, 90=above, -90=below
  117 |     
  118 |     fgcom_radiowave_signal()  {
  119 |         quality       = -1;
  120 |         direction     = -1;
  121 |         verticalAngle = -1;
  122 |     };
  123 | };
      |  
      |   __attribute__((aligned(16)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:113:8: note: use "__attribute__((aligned(16)))" to align struct 'fgcom_radiowave_signal' to 16 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:114:11: warning: member variable 'quality' has public visibility [misc-non-private-member-variables-in-classes]
  114 |     float quality;        // 0.0=no signal, 1.0=perfect signal
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:115:11: warning: member variable 'direction' has public visibility [misc-non-private-member-variables-in-classes]
  115 |     float direction;      // 0.0=north, 90=east, 180=south, 270=west
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:116:11: warning: member variable 'verticalAngle' has public visibility [misc-non-private-member-variables-in-classes]
  116 |     float verticalAngle;  // 0.0=straight, 90=above, -90=below
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:118:5: warning: 'fgcom_radiowave_signal' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  118 |     fgcom_radiowave_signal()  {
      |     ^
      |     LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:119:9: warning: 'quality' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
  114 |     float quality;        // 0.0=no signal, 1.0=perfect signal
      |                  
      |                  {-1}
  115 |     float direction;      // 0.0=north, 90=east, 180=south, 270=west
  116 |     float verticalAngle;  // 0.0=straight, 90=above, -90=below
  117 |     
  118 |     fgcom_radiowave_signal()  {
  119 |         quality       = -1;
      |         ^~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:120:9: warning: 'direction' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
  115 |     float direction;      // 0.0=north, 90=east, 180=south, 270=west
      |                    
      |                    {-1}
  116 |     float verticalAngle;  // 0.0=straight, 90=above, -90=below
  117 |     
  118 |     fgcom_radiowave_signal()  {
  119 |         quality       = -1;
  120 |         direction     = -1;
      |         ^~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:121:9: warning: 'verticalAngle' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
  116 |     float verticalAngle;  // 0.0=straight, 90=above, -90=below
      |                        
      |                        {-1}
  117 |     
  118 |     fgcom_radiowave_signal()  {
  119 |         quality       = -1;
  120 |         direction     = -1;
  121 |         verticalAngle = -1;
      |         ^~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:127:8: warning: accessing fields in struct 'fgcom_radiowave_freqConvRes' is inefficient due to padding; only needs 65 bytes but is using 72 bytes [altera-struct-pack-align]
  127 | struct fgcom_radiowave_freqConvRes {
      |        ^
  128 |     std::string prefix;    // extracted prefix
  129 |     std::string frequency; // extracted and converted frequency
  130 |     bool isNumeric;        // tells if frequency is a valid numeric
  131 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:127:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'fgcom_radiowave_freqConvRes'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:127:8: warning: accessing fields in struct 'fgcom_radiowave_freqConvRes' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 128 bytes [altera-struct-pack-align]
  127 | struct fgcom_radiowave_freqConvRes {
      |        ^
  128 |     std::string prefix;    // extracted prefix
  129 |     std::string frequency; // extracted and converted frequency
  130 |     bool isNumeric;        // tells if frequency is a valid numeric
  131 | };
      |  
      |   __attribute__((aligned(128)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:127:8: note: use "__attribute__((aligned(128)))" to align struct 'fgcom_radiowave_freqConvRes' to 128 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:139:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  139 | bool fgcom_radio_updateOperable(fgcom_radio &r);
      | ~~~~ ^                                         
      | auto                                            -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:139:46: warning: parameter name 'r' is too short, expected at least 3 characters [readability-identifier-length]
  139 | bool fgcom_radio_updateOperable(fgcom_radio &r);
      |                                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:148:7: warning: destructor of 'FGCom_radiowaveModel' is public and non-virtual [cppcoreguidelines-virtual-class-destructor]
  148 | class FGCom_radiowaveModel {
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:148:7: note: make it public and virtual
  148 | class FGCom_radiowaveModel {
      |       ^
  149 | public:
      |        
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:161:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  161 |     virtual std::string getType() = 0;  // pure-virtual: cannot be provided by the base class
      |             ~~~~~~~~~~~ ^
      |             auto                  -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:176:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  176 |     virtual fgcom_radiowave_signal getSignal(double lat1, double lon1, float alt1, double lat2, double lon2, float alt2, float power) = 0;
      |             ~~~~~~~~~~~~~~~~~~~~~~ ^
      |             auto                                                                                                                      -> fgcom_radiowave_signal
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:185:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  185 |     virtual std::string conv_chan2freq(std::string frq) = 0;
      |             ~~~~~~~~~~~ ^
      |             auto                                        -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:194:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  194 |     virtual std::string conv_freq2chan(std::string frq) = 0;
      |             ~~~~~~~~~~~ ^
      |             auto                                        -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:208:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  208 |     virtual float getFrqMatch(fgcom_radio r1, fgcom_radio r2) = 0;
      |             ~~~~~ ^
      |             auto                                              -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:208:43: warning: parameter name 'r1' is too short, expected at least 3 characters [readability-identifier-length]
  208 |     virtual float getFrqMatch(fgcom_radio r1, fgcom_radio r2) = 0;
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:208:59: warning: parameter name 'r2' is too short, expected at least 3 characters [readability-identifier-length]
  208 |     virtual float getFrqMatch(fgcom_radio r1, fgcom_radio r2) = 0;
      |                                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:247:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  247 |     virtual float getChannelAlignment(float frq1_real, float frq2_real, float width_kHz, float core_kHz);
      |             ~~~~~ ^                                                                                     
      |             auto                                                                                         -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:256:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  256 |     virtual bool isCompatible(FGCom_radiowaveModel *otherModel);
      |             ~~~~ ^                                             
      |             auto                                                -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:265:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  265 |     virtual double getDistToHorizon(float h);
      |             ~~~~~~ ^                        
      |             auto                             -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:265:43: warning: parameter name 'h' is too short, expected at least 3 characters [readability-identifier-length]
  265 |     virtual double getDistToHorizon(float h);
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:276:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  276 |     virtual double heightAboveHorizon(double dist, float hA, float hB);
      |             ~~~~~~ ^                                                  
      |             auto                                                       -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:276:58: warning: parameter name 'hA' is too short, expected at least 3 characters [readability-identifier-length]
  276 |     virtual double heightAboveHorizon(double dist, float hA, float hB);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:276:68: warning: parameter name 'hB' is too short, expected at least 3 characters [readability-identifier-length]
  276 |     virtual double heightAboveHorizon(double dist, float hA, float hB);
      |                                                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:286:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  286 |     virtual double getSlantDistance(double surfacedist, double hah);
      |             ~~~~~~ ^                                               
      |             auto                                                    -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:296:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  296 |     virtual double degreeAboveHorizon(double surfacedist, double hah);
      |             ~~~~~~ ^                                                 
      |             auto                                                      -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:307:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  307 |     virtual double getDirection(double lat1, double lon1, double lat2, double lon2);
      |             ~~~~~~ ^                                                               
      |             auto                                                                    -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:319:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  319 |     virtual double getSurfaceDistance(double lat1, double lon1, double lat2, double lon2);
      |             ~~~~~~ ^                                                                     
      |             auto                                                                          -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:338:50: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  338 |     static std::unique_ptr<FGCom_radiowaveModel> selectModel(std::string freq);
      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^                            
      |            auto                                                                -> std::unique_ptr<FGCom_radiowaveModel>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:361:40: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  361 |     static fgcom_radiowave_freqConvRes splitFreqString(std::string frq);
      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^                               
      |            auto                                                         -> fgcom_radiowave_freqConvRes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:2:1: warning: #includes are not sorted properly [llvm-include-order]
    2 | #include <cmath>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:2:1: warning: system include cmath not allowed [llvmlibc-restrict-system-libc-headers]
    2 | #include <cmath>
      | ^~~~~~~~~~~~~~~~
    3 | #include <algorithm>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:3:1: warning: system include algorithm not allowed [llvmlibc-restrict-system-libc-headers]
    3 | #include <algorithm>
      | ^~~~~~~~~~~~~~~~~~~~
    4 | #include <iostream>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:4:1: warning: system include iostream not allowed [llvmlibc-restrict-system-libc-headers]
    4 | #include <iostream>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:4:1: warning: included header iostream is not used directly [misc-include-cleaner]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:5:1: warning: system include sstream not allowed [llvmlibc-restrict-system-libc-headers]
    5 | #include <sstream>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:5:1: warning: included header sstream is not used directly [misc-include-cleaner]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:6:1: warning: system include iomanip not allowed [llvmlibc-restrict-system-libc-headers]
    6 | #include <iomanip>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:6:1: warning: included header iomanip is not used directly [misc-include-cleaner]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:9:1: warning: static objects are disallowed; if possible, use a constexpr constructor instead [fuchsia-statically-constructed-objects]
    9 | std::unique_ptr<FGCom_VehicleDynamicsManager> g_vehicle_dynamics_manager = nullptr;
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:9:6: warning: no header providing "std::unique_ptr" is directly included [misc-include-cleaner]
    5 | #include <sstream>
    6 | #include <iomanip>
    7 | 
    8 | // Global instance
    9 | std::unique_ptr<FGCom_VehicleDynamicsManager> g_vehicle_dynamics_manager = nullptr;
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:9:47: warning: variable 'g_vehicle_dynamics_manager' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
    9 | std::unique_ptr<FGCom_VehicleDynamicsManager> g_vehicle_dynamics_manager = nullptr;
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:9:47: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:12:14: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   12 | const double EARTH_RADIUS_KM = 6371.0;
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:13:14: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   13 | const double DEG_TO_RAD = M_PI / 180.0;
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:13:27: warning: no header providing "M_PI" is directly included [misc-include-cleaner]
    5 | #include <sstream>
    6 | #include <iomanip>
    7 | 
    8 | // Global instance
    9 | std::unique_ptr<FGCom_VehicleDynamicsManager> g_vehicle_dynamics_manager = nullptr;
   10 | 
   11 | // Constants
   12 | const double EARTH_RADIUS_KM = 6371.0;
   13 | const double DEG_TO_RAD = M_PI / 180.0;
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:14:14: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   14 | const double RAD_TO_DEG = 180.0 / M_PI;
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:16:31: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   16 | FGCom_VehicleDynamicsManager::FGCom_VehicleDynamicsManager() 
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:17:60: warning: 300 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   17 |     : auto_cleanup_enabled(true), cleanup_interval_seconds(300) {
      |                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:18:18: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   18 |     last_cleanup = std::chrono::system_clock::now();
      |                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:18:20: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   18 |     last_cleanup = std::chrono::system_clock::now();
      |                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:18:33: warning: no header providing "std::chrono::system_clock" is directly included [misc-include-cleaner]
    2 |     last_cleanup = std::chrono::system_clock::now();
      |                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:21:31: warning: use '= default' to define a trivial destructor [hicpp-use-equals-default,modernize-use-equals-default]
   21 | FGCom_VehicleDynamicsManager::~FGCom_VehicleDynamicsManager() {
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:21:31: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:25:36: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   25 | bool FGCom_VehicleDynamicsManager::registerVehicle(const std::string& vehicle_id, const std::string& vehicle_type) {
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:25:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   25 | bool FGCom_VehicleDynamicsManager::registerVehicle(const std::string& vehicle_id, const std::string& vehicle_type) {
      | ~~~~                               ^
      | auto                                                                                                               -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:25:63: warning: no header providing "std::string" is directly included [misc-include-cleaner]
    7 | bool FGCom_VehicleDynamicsManager::registerVehicle(const std::string& vehicle_id, const std::string& vehicle_type) {
      |                                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:26:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
   26 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:26:10: warning: no header providing "std::lock_guard" is directly included [misc-include-cleaner]
    5 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:26:26: warning: no header providing "std::mutex" is directly included [misc-include-cleaner]
   26 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:28:35: warning: 'operator!=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   28 |     if (vehicles.find(vehicle_id) != vehicles.end()) {
      |                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:320:7: note: resolves to this declaration
  320 |       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:33:25: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   33 |     dynamics.vehicle_id = vehicle_id;
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:812:7: note: resolves to this declaration
  812 |       operator=(const basic_string& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:34:36: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   34 |     dynamics.position.vehicle_type = vehicle_type;
      |                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:812:7: note: resolves to this declaration
  812 |       operator=(const basic_string& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:35:21: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   35 |     dynamics.status = "active";
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:36:26: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   36 |     dynamics.last_update = std::chrono::system_clock::now();
      |                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:36:28: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   36 |     dynamics.last_update = std::chrono::system_clock::now();
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:38:13: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   38 |     vehicles[vehicle_id] = dynamics;
      |             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:38:26: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   38 |     vehicles[vehicle_id] = dynamics;
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:73:8: note: resolves to this declaration
   73 | struct fgcom_vehicle_dynamics {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:42:36: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   42 | bool FGCom_VehicleDynamicsManager::unregisterVehicle(const std::string& vehicle_id) {
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:42:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   42 | bool FGCom_VehicleDynamicsManager::unregisterVehicle(const std::string& vehicle_id) {
      | ~~~~                               ^
      | auto                                                                                -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:43:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
   43 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:45:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
   45 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:46:12: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   46 |     if (it == vehicles.end()) {
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:315:7: note: resolves to this declaration
  315 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:54:36: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   54 | bool FGCom_VehicleDynamicsManager::updateVehiclePosition(const std::string& vehicle_id, const fgcom_vehicle_position& position) {
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:54:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   54 | bool FGCom_VehicleDynamicsManager::updateVehiclePosition(const std::string& vehicle_id, const fgcom_vehicle_position& position) {
      | ~~~~                               ^
      | auto                                                                                                                            -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:55:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
   55 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:57:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
   57 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:58:12: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   58 |     if (it == vehicles.end()) {
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:315:7: note: resolves to this declaration
  315 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:62:7: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   62 |     it->second.position = position;
      |       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:62:25: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   62 |     it->second.position = position;
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:41:8: note: resolves to this declaration
   41 | struct fgcom_vehicle_position {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:63:7: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   63 |     it->second.last_update = std::chrono::system_clock::now();
      |       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:63:28: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   63 |     it->second.last_update = std::chrono::system_clock::now();
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:63:30: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   63 |     it->second.last_update = std::chrono::system_clock::now();
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:66:9: warning: 'abs' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   66 |     if (std::abs(it->second.position.latitude - position.latitude) > 0.01 ||
      |         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/std_abs.h:71:3: note: resolves to this declaration
   71 |   abs(double __x)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:66:20: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   66 |     if (std::abs(it->second.position.latitude - position.latitude) > 0.01 ||
      |                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:66:70: warning: 0.01 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   66 |     if (std::abs(it->second.position.latitude - position.latitude) > 0.01 ||
      |                                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:67:9: warning: 'abs' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   67 |         std::abs(it->second.position.longitude - position.longitude) > 0.01) {
      |         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/std_abs.h:71:3: note: resolves to this declaration
   71 |   abs(double __x)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:67:20: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   67 |         std::abs(it->second.position.longitude - position.longitude) > 0.01) {
      |                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:67:72: warning: 0.01 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   67 |         std::abs(it->second.position.longitude - position.longitude) > 0.01) {
      |                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:68:11: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   68 |         it->second.attitude.magnetic_declination_deg = calculateMagneticDeclination(position.latitude, position.longitude);
      |           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:74:36: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   74 | bool FGCom_VehicleDynamicsManager::updateVehicleAttitude(const std::string& vehicle_id, const fgcom_vehicle_attitude& attitude) {
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:74:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   74 | bool FGCom_VehicleDynamicsManager::updateVehicleAttitude(const std::string& vehicle_id, const fgcom_vehicle_attitude& attitude) {
      | ~~~~                               ^
      | auto                                                                                                                            -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:75:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
   75 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:77:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
   77 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:78:12: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   78 |     if (it == vehicles.end()) {
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:315:7: note: resolves to this declaration
  315 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:82:7: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   82 |     it->second.attitude = attitude;
      |       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:82:25: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   82 |     it->second.attitude = attitude;
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:12:8: note: resolves to this declaration
   12 | struct fgcom_vehicle_attitude {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:83:7: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   83 |     it->second.last_update = std::chrono::system_clock::now();
      |       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:83:28: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   83 |     it->second.last_update = std::chrono::system_clock::now();
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:83:30: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   83 |     it->second.last_update = std::chrono::system_clock::now();
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:86:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   86 |     for (auto& antenna : it->second.antennas) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:86:24: warning: 'operator!=<fgcom_antenna_orientation *, std::vector<fgcom_antenna_orientation>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   86 |     for (auto& antenna : it->second.antennas) {
      |                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1241:5: note: resolves to this declaration
 1241 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:86:24: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   86 |     for (auto& antenna : it->second.antennas) {
      |                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1099:7: note: resolves to this declaration
 1099 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:86:24: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   86 |     for (auto& antenna : it->second.antennas) {
      |                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1109:7: note: resolves to this declaration
 1109 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:86:28: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   86 |     for (auto& antenna : it->second.antennas) {
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:93:36: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   93 | bool FGCom_VehicleDynamicsManager::updateVehicleVelocity(const std::string& vehicle_id, const fgcom_vehicle_velocity& velocity) {
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:93:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   93 | bool FGCom_VehicleDynamicsManager::updateVehicleVelocity(const std::string& vehicle_id, const fgcom_vehicle_velocity& velocity) {
      | ~~~~                               ^
      | auto                                                                                                                            -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:94:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
   94 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:96:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
   96 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:97:12: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   97 |     if (it == vehicles.end()) {
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:315:7: note: resolves to this declaration
  315 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:101:7: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  101 |     it->second.velocity = velocity;
      |       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:101:25: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  101 |     it->second.velocity = velocity;
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:26:8: note: resolves to this declaration
   26 | struct fgcom_vehicle_velocity {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:102:7: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  102 |     it->second.last_update = std::chrono::system_clock::now();
      |       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:102:28: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  102 |     it->second.last_update = std::chrono::system_clock::now();
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:102:30: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  102 |     it->second.last_update = std::chrono::system_clock::now();
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:106:36: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  106 | bool FGCom_VehicleDynamicsManager::updateVehicleDynamics(const std::string& vehicle_id, const fgcom_vehicle_dynamics& dynamics) {
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:106:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  106 | bool FGCom_VehicleDynamicsManager::updateVehicleDynamics(const std::string& vehicle_id, const fgcom_vehicle_dynamics& dynamics) {
      | ~~~~                               ^
      | auto                                                                                                                            -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:107:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  107 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:109:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  109 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:110:12: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  110 |     if (it == vehicles.end()) {
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:315:7: note: resolves to this declaration
  315 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:114:7: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  114 |     it->second = dynamics;
      |       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:114:16: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  114 |     it->second = dynamics;
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:73:8: note: resolves to this declaration
   73 | struct fgcom_vehicle_dynamics {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:115:7: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  115 |     it->second.last_update = std::chrono::system_clock::now();
      |       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:115:28: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  115 |     it->second.last_update = std::chrono::system_clock::now();
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:115:30: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  115 |     it->second.last_update = std::chrono::system_clock::now();
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:119:36: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  119 | bool FGCom_VehicleDynamicsManager::addAntenna(const std::string& vehicle_id, const fgcom_antenna_orientation& antenna) {
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:119:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  119 | bool FGCom_VehicleDynamicsManager::addAntenna(const std::string& vehicle_id, const fgcom_antenna_orientation& antenna) {
      | ~~~~                               ^
      | auto                                                                                                                   -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:120:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  120 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:122:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  122 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:123:12: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  123 |     if (it == vehicles.end()) {
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:315:7: note: resolves to this declaration
  315 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:128:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  128 |     for (const auto& existing_antenna : it->second.antennas) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:128:39: warning: 'operator!=<fgcom_antenna_orientation *, std::vector<fgcom_antenna_orientation>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  128 |     for (const auto& existing_antenna : it->second.antennas) {
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1241:5: note: resolves to this declaration
 1241 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:128:39: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  128 |     for (const auto& existing_antenna : it->second.antennas) {
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1099:7: note: resolves to this declaration
 1099 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:128:39: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  128 |     for (const auto& existing_antenna : it->second.antennas) {
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1109:7: note: resolves to this declaration
 1109 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:128:43: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  128 |     for (const auto& existing_antenna : it->second.antennas) {
      |                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:129:41: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  129 |         if (existing_antenna.antenna_id == antenna.antenna_id) {
      |                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3710:5: note: resolves to this declaration
 3710 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:134:7: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  134 |     it->second.antennas.push_back(antenna);
      |       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:135:7: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  135 |     it->second.last_update = std::chrono::system_clock::now();
      |       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:135:28: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  135 |     it->second.last_update = std::chrono::system_clock::now();
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:135:30: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  135 |     it->second.last_update = std::chrono::system_clock::now();
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:139:36: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  139 | bool FGCom_VehicleDynamicsManager::removeAntenna(const std::string& vehicle_id, const std::string& antenna_id) {
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:139:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  139 | bool FGCom_VehicleDynamicsManager::removeAntenna(const std::string& vehicle_id, const std::string& antenna_id) {
      | ~~~~                               ^
      | auto                                                                                                           -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:139:50: warning: 2 adjacent parameters of 'removeAntenna' of similar type ('const std::string &') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  139 | bool FGCom_VehicleDynamicsManager::removeAntenna(const std::string& vehicle_id, const std::string& antenna_id) {
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:139:69: note: the first parameter in the range is 'vehicle_id'
  139 | bool FGCom_VehicleDynamicsManager::removeAntenna(const std::string& vehicle_id, const std::string& antenna_id) {
      |                                                                     ^~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:139:100: note: the last parameter in the range is 'antenna_id'
  139 | bool FGCom_VehicleDynamicsManager::removeAntenna(const std::string& vehicle_id, const std::string& antenna_id) {
      |                                                                                                    ^~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:140:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  140 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:142:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  142 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:143:12: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  143 |     if (it == vehicles.end()) {
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:315:7: note: resolves to this declaration
  315 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:147:23: warning: 'find_if<__gnu_cxx::__normal_iterator<fgcom_antenna_orientation *, std::vector<fgcom_antenna_orientation>>, (lambda at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:148:35)>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  147 |     auto antenna_it = std::find_if(it->second.antennas.begin(), it->second.antennas.end(),
      |                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:3914:5: note: resolves to this declaration
 3914 |     find_if(_InputIterator __first, _InputIterator __last,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:147:38: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  147 |     auto antenna_it = std::find_if(it->second.antennas.begin(), it->second.antennas.end(),
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:147:67: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  147 |     auto antenna_it = std::find_if(it->second.antennas.begin(), it->second.antennas.end(),
      |                                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:149:65: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  149 |                                       return antenna.antenna_id == antenna_id;
      |                                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3710:5: note: resolves to this declaration
 3710 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:152:20: warning: 'operator==<fgcom_antenna_orientation *, std::vector<fgcom_antenna_orientation>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  152 |     if (antenna_it == it->second.antennas.end()) {
      |                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1225:5: note: resolves to this declaration
 1225 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:152:25: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  152 |     if (antenna_it == it->second.antennas.end()) {
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:156:7: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  156 |     it->second.antennas.erase(antenna_it);
      |       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:157:7: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  157 |     it->second.last_update = std::chrono::system_clock::now();
      |       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:157:28: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  157 |     it->second.last_update = std::chrono::system_clock::now();
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:157:30: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  157 |     it->second.last_update = std::chrono::system_clock::now();
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:161:36: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  161 | bool FGCom_VehicleDynamicsManager::updateAntennaOrientation(const std::string& vehicle_id, const std::string& antenna_id,
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:161:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  161 | bool FGCom_VehicleDynamicsManager::updateAntennaOrientation(const std::string& vehicle_id, const std::string& antenna_id,
      | ~~~~                               ^
      | auto
  162 |                                                            const fgcom_antenna_orientation& orientation) {
      |                                                                                                          -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:161:61: warning: 2 adjacent parameters of 'updateAntennaOrientation' of similar type ('const std::string &') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  161 | bool FGCom_VehicleDynamicsManager::updateAntennaOrientation(const std::string& vehicle_id, const std::string& antenna_id,
      |                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:161:80: note: the first parameter in the range is 'vehicle_id'
  161 | bool FGCom_VehicleDynamicsManager::updateAntennaOrientation(const std::string& vehicle_id, const std::string& antenna_id,
      |                                                                                ^~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:161:111: note: the last parameter in the range is 'antenna_id'
  161 | bool FGCom_VehicleDynamicsManager::updateAntennaOrientation(const std::string& vehicle_id, const std::string& antenna_id,
      |                                                                                                               ^~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:163:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  163 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:165:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  165 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:166:12: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  166 |     if (it == vehicles.end()) {
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:315:7: note: resolves to this declaration
  315 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:170:23: warning: 'find_if<__gnu_cxx::__normal_iterator<fgcom_antenna_orientation *, std::vector<fgcom_antenna_orientation>>, (lambda at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:171:35)>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  170 |     auto antenna_it = std::find_if(it->second.antennas.begin(), it->second.antennas.end(),
      |                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:3914:5: note: resolves to this declaration
 3914 |     find_if(_InputIterator __first, _InputIterator __last,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:170:38: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  170 |     auto antenna_it = std::find_if(it->second.antennas.begin(), it->second.antennas.end(),
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:170:67: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  170 |     auto antenna_it = std::find_if(it->second.antennas.begin(), it->second.antennas.end(),
      |                                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:172:65: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  172 |                                       return antenna.antenna_id == antenna_id;
      |                                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3710:5: note: resolves to this declaration
 3710 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:175:20: warning: 'operator==<fgcom_antenna_orientation *, std::vector<fgcom_antenna_orientation>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  175 |     if (antenna_it == it->second.antennas.end()) {
      |                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1225:5: note: resolves to this declaration
 1225 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:175:25: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  175 |     if (antenna_it == it->second.antennas.end()) {
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:179:5: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  179 |     *antenna_it = orientation;
      |     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1099:7: note: resolves to this declaration
 1099 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:179:17: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  179 |     *antenna_it = orientation;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:57:8: note: resolves to this declaration
   57 | struct fgcom_antenna_orientation {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:180:15: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  180 |     antenna_it->timestamp = std::chrono::system_clock::now();
      |               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1104:7: note: resolves to this declaration
 1104 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:180:27: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  180 |     antenna_it->timestamp = std::chrono::system_clock::now();
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:180:29: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  180 |     antenna_it->timestamp = std::chrono::system_clock::now();
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:181:7: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  181 |     it->second.last_update = std::chrono::system_clock::now();
      |       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:181:28: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  181 |     it->second.last_update = std::chrono::system_clock::now();
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:181:30: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  181 |     it->second.last_update = std::chrono::system_clock::now();
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:185:36: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  185 | bool FGCom_VehicleDynamicsManager::rotateAntenna(const std::string& vehicle_id, const std::string& antenna_id,
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:185:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  185 | bool FGCom_VehicleDynamicsManager::rotateAntenna(const std::string& vehicle_id, const std::string& antenna_id,
      | ~~~~                               ^
      | auto
  186 |                                                 float target_azimuth, float target_elevation, bool immediate) {
      |                                                                                                               -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:185:50: warning: 2 adjacent parameters of 'rotateAntenna' of similar type ('const std::string &') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  185 | bool FGCom_VehicleDynamicsManager::rotateAntenna(const std::string& vehicle_id, const std::string& antenna_id,
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:185:69: note: the first parameter in the range is 'vehicle_id'
  185 | bool FGCom_VehicleDynamicsManager::rotateAntenna(const std::string& vehicle_id, const std::string& antenna_id,
      |                                                                     ^~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:185:100: note: the last parameter in the range is 'antenna_id'
  185 | bool FGCom_VehicleDynamicsManager::rotateAntenna(const std::string& vehicle_id, const std::string& antenna_id,
      |                                                                                                    ^~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:186:49: warning: 2 adjacent parameters of 'rotateAntenna' of similar type ('float') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  186 |                                                 float target_azimuth, float target_elevation, bool immediate) {
      |                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:186:55: note: the first parameter in the range is 'target_azimuth'
  186 |                                                 float target_azimuth, float target_elevation, bool immediate) {
      |                                                       ^~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:186:77: note: the last parameter in the range is 'target_elevation'
  186 |                                                 float target_azimuth, float target_elevation, bool immediate) {
      |                                                                             ^~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:187:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  187 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:189:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  189 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:190:12: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  190 |     if (it == vehicles.end()) {
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:315:7: note: resolves to this declaration
  315 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:194:23: warning: 'find_if<__gnu_cxx::__normal_iterator<fgcom_antenna_orientation *, std::vector<fgcom_antenna_orientation>>, (lambda at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:195:35)>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  194 |     auto antenna_it = std::find_if(it->second.antennas.begin(), it->second.antennas.end(),
      |                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:3914:5: note: resolves to this declaration
 3914 |     find_if(_InputIterator __first, _InputIterator __last,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:194:38: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  194 |     auto antenna_it = std::find_if(it->second.antennas.begin(), it->second.antennas.end(),
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:194:67: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  194 |     auto antenna_it = std::find_if(it->second.antennas.begin(), it->second.antennas.end(),
      |                                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:196:65: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  196 |                                       return antenna.antenna_id == antenna_id;
      |                                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3710:5: note: resolves to this declaration
 3710 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:199:20: warning: 'operator==<fgcom_antenna_orientation *, std::vector<fgcom_antenna_orientation>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  199 |     if (antenna_it == it->second.antennas.end()) {
      |                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1225:5: note: resolves to this declaration
 1225 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:199:25: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  199 |     if (antenna_it == it->second.antennas.end()) {
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:204:5: warning: if with identical then and else branches [bugprone-branch-clone]
  204 |     if (immediate) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:207:7: note: else branch starts here
  207 |     } else {
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:205:19: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  205 |         antenna_it->azimuth_deg = normalizeAngle(target_azimuth);
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1104:7: note: resolves to this declaration
 1104 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:206:19: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  206 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1104:7: note: resolves to this declaration
 1104 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:206:37: warning: 'max<float>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  206 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algobase.h:257:5: note: resolves to this declaration
  257 |     max(const _Tp& __a, const _Tp& __b)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:206:47: warning: 90.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  206 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:206:47: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  206 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                                               ^   ~
      |                                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:206:54: warning: 'min<float>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  206 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algobase.h:233:5: note: resolves to this declaration
  233 |     min(const _Tp& __a, const _Tp& __b)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:206:63: warning: 90.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  206 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:206:63: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  206 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                                                               ^   ~
      |                                                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:210:19: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  210 |         antenna_it->azimuth_deg = normalizeAngle(target_azimuth);
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1104:7: note: resolves to this declaration
 1104 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:211:19: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  211 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1104:7: note: resolves to this declaration
 1104 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:211:37: warning: 'max<float>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  211 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algobase.h:257:5: note: resolves to this declaration
  257 |     max(const _Tp& __a, const _Tp& __b)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:211:47: warning: 90.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  211 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:211:47: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  211 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                                               ^   ~
      |                                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:211:54: warning: 'min<float>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  211 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algobase.h:233:5: note: resolves to this declaration
  233 |     min(const _Tp& __a, const _Tp& __b)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:211:63: warning: 90.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  211 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:211:63: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  211 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                                                               ^   ~
      |                                                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:214:15: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  214 |     antenna_it->timestamp = std::chrono::system_clock::now();
      |               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1104:7: note: resolves to this declaration
 1104 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:214:27: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  214 |     antenna_it->timestamp = std::chrono::system_clock::now();
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:214:29: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  214 |     antenna_it->timestamp = std::chrono::system_clock::now();
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:215:7: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  215 |     it->second.last_update = std::chrono::system_clock::now();
      |       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:215:28: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  215 |     it->second.last_update = std::chrono::system_clock::now();
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:215:30: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  215 |     it->second.last_update = std::chrono::system_clock::now();
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:219:55: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  219 | VehicleDynamicsResponse FGCom_VehicleDynamicsManager::getVehicleDynamics(const std::string& vehicle_id) {
      |                                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:219:55: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  219 | VehicleDynamicsResponse FGCom_VehicleDynamicsManager::getVehicleDynamics(const std::string& vehicle_id) {
      | ~~~~~~~~~~~~~~~~~~~~~~~                               ^
      | auto                                                                                                    -> VehicleDynamicsResponse
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:222:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  222 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:224:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  224 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:225:12: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  225 |     if (it == vehicles.end()) {
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:315:7: note: resolves to this declaration
  315 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:226:26: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  226 |         response.message = "Vehicle not found";
      |                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:231:23: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  231 |     response.dynamics = it->second;
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:73:8: note: resolves to this declaration
   73 | struct fgcom_vehicle_dynamics {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:231:27: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  231 |     response.dynamics = it->second;
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:232:22: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  232 |     response.message = "Vehicle dynamics retrieved successfully";
      |                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:236:51: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  236 | VehicleListResponse FGCom_VehicleDynamicsManager::getAllVehicles() {
      |                                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:236:51: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  236 | VehicleListResponse FGCom_VehicleDynamicsManager::getAllVehicles() {
      | ~~~~~~~~~~~~~~~~~~~                               ^
      | auto                                                               -> VehicleListResponse
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:239:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  239 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:242:22: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  242 |     response.message = "Vehicle list retrieved successfully";
      |                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:244:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  244 |     for (const auto& vehicle : vehicles) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:244:30: warning: 'operator!=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  244 |     for (const auto& vehicle : vehicles) {
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:320:7: note: resolves to this declaration
  320 |       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:244:30: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  244 |     for (const auto& vehicle : vehicles) {
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:277:7: note: resolves to this declaration
  277 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:244:30: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  244 |     for (const auto& vehicle : vehicles) {
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:285:7: note: resolves to this declaration
  285 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:246:31: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  246 |         response.vehicle_types[vehicle.first] = vehicle.second.position.vehicle_type;
      |                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:246:47: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  246 |         response.vehicle_types[vehicle.first] = vehicle.second.position.vehicle_type;
      |                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:812:7: note: resolves to this declaration
  812 |       operator=(const basic_string& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:247:32: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  247 |         response.vehicle_status[vehicle.first] = vehicle.second.status;
      |                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:247:48: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  247 |         response.vehicle_status[vehicle.first] = vehicle.second.status;
      |                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:812:7: note: resolves to this declaration
  812 |       operator=(const basic_string& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:253:6: warning: no header providing "std::vector" is directly included [misc-include-cleaner]
    7 | std::vector<fgcom_antenna_orientation> FGCom_VehicleDynamicsManager::getVehicleAntennas(const std::string& vehicle_id) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:253:70: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  253 | std::vector<fgcom_antenna_orientation> FGCom_VehicleDynamicsManager::getVehicleAntennas(const std::string& vehicle_id) {
      |                                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:253:70: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  253 | std::vector<fgcom_antenna_orientation> FGCom_VehicleDynamicsManager::getVehicleAntennas(const std::string& vehicle_id) {
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                               ^
      | auto                                                                                                                   -> std::vector<fgcom_antenna_orientation>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:254:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  254 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:256:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  256 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:257:12: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  257 |     if (it == vehicles.end()) {
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:315:7: note: resolves to this declaration
  315 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:258:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
  258 |         return std::vector<fgcom_antenna_orientation>();
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                {}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:261:14: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  261 |     return it->second.antennas;
      |              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:264:54: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  264 | fgcom_vehicle_position FGCom_VehicleDynamicsManager::getVehiclePosition(const std::string& vehicle_id) {
      |                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:264:54: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  264 | fgcom_vehicle_position FGCom_VehicleDynamicsManager::getVehiclePosition(const std::string& vehicle_id) {
      | ~~~~~~~~~~~~~~~~~~~~~~                               ^
      | auto                                                                                                   -> fgcom_vehicle_position
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:265:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  265 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:267:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  267 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:268:12: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  268 |     if (it == vehicles.end()) {
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:315:7: note: resolves to this declaration
  315 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:269:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
  269 |         return fgcom_vehicle_position(); // Return default position
      |                ^~~~~~~~~~~~~~~~~~~~~~~~
      |                {}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:272:14: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  272 |     return it->second.position;
      |              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:275:54: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  275 | fgcom_vehicle_attitude FGCom_VehicleDynamicsManager::getVehicleAttitude(const std::string& vehicle_id) {
      |                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:275:54: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  275 | fgcom_vehicle_attitude FGCom_VehicleDynamicsManager::getVehicleAttitude(const std::string& vehicle_id) {
      | ~~~~~~~~~~~~~~~~~~~~~~                               ^
      | auto                                                                                                   -> fgcom_vehicle_attitude
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:276:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  276 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:278:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  278 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:279:12: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  279 |     if (it == vehicles.end()) {
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:315:7: note: resolves to this declaration
  315 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:280:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
  280 |         return fgcom_vehicle_attitude(); // Return default attitude
      |                ^~~~~~~~~~~~~~~~~~~~~~~~
      |                {}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:283:14: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  283 |     return it->second.attitude;
      |              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:286:54: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  286 | fgcom_vehicle_velocity FGCom_VehicleDynamicsManager::getVehicleVelocity(const std::string& vehicle_id) {
      |                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:286:54: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  286 | fgcom_vehicle_velocity FGCom_VehicleDynamicsManager::getVehicleVelocity(const std::string& vehicle_id) {
      | ~~~~~~~~~~~~~~~~~~~~~~                               ^
      | auto                                                                                                   -> fgcom_vehicle_velocity
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:287:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  287 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:289:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  289 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:290:12: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  290 |     if (it == vehicles.end()) {
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:315:7: note: resolves to this declaration
  315 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:291:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
  291 |         return fgcom_vehicle_velocity(); // Return default velocity
      |                ^~~~~~~~~~~~~~~~~~~~~~~~
      |                {}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:294:14: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  294 |     return it->second.velocity;
      |              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:297:55: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  297 | AntennaRotationResponse FGCom_VehicleDynamicsManager::calculateAntennaRotation(const AntennaRotationRequest& request) {
      |                                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:297:55: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  297 | AntennaRotationResponse FGCom_VehicleDynamicsManager::calculateAntennaRotation(const AntennaRotationRequest& request) {
      | ~~~~~~~~~~~~~~~~~~~~~~~                               ^
      | auto                                                                                                                  -> AntennaRotationResponse
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:300:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  300 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:302:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  302 |     auto it = vehicles.find(request.vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:303:12: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  303 |     if (it == vehicles.end()) {
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:315:7: note: resolves to this declaration
  315 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:304:26: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  304 |         response.message = "Vehicle not found";
      |                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:308:23: warning: 'find_if<__gnu_cxx::__normal_iterator<fgcom_antenna_orientation *, std::vector<fgcom_antenna_orientation>>, (lambda at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:309:35)>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  308 |     auto antenna_it = std::find_if(it->second.antennas.begin(), it->second.antennas.end(),
      |                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:3914:5: note: resolves to this declaration
 3914 |     find_if(_InputIterator __first, _InputIterator __last,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:308:38: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  308 |     auto antenna_it = std::find_if(it->second.antennas.begin(), it->second.antennas.end(),
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:308:67: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  308 |     auto antenna_it = std::find_if(it->second.antennas.begin(), it->second.antennas.end(),
      |                                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:310:65: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  310 |                                       return antenna.antenna_id == request.antenna_id;
      |                                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3710:5: note: resolves to this declaration
 3710 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:313:20: warning: 'operator==<fgcom_antenna_orientation *, std::vector<fgcom_antenna_orientation>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  313 |     if (antenna_it == it->second.antennas.end()) {
      |                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1225:5: note: resolves to this declaration
 1225 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:313:25: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  313 |     if (antenna_it == it->second.antennas.end()) {
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:314:26: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  314 |         response.message = "Antenna not found";
      |                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:320:34: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  320 |     response.current_orientation = *antenna_it;
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:57:8: note: resolves to this declaration
   57 | struct fgcom_antenna_orientation {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:320:36: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  320 |     response.current_orientation = *antenna_it;
      |                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1099:7: note: resolves to this declaration
 1099 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:323:47: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  323 |         response.estimated_arrival_time_sec = 0.0f;
      |                                               ^  ~
      |                                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:324:26: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  324 |         response.message = "Antenna rotation completed immediately";
      |                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:327:9: warning: variable 'azimuth_diff' of type 'float' can be declared 'const' [misc-const-correctness]
  327 |         float azimuth_diff = std::abs(normalizeAngle(request.target_azimuth_deg - antenna_it->azimuth_deg));
      |         ^
      |               const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:327:30: warning: 'abs' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  327 |         float azimuth_diff = std::abs(normalizeAngle(request.target_azimuth_deg - antenna_it->azimuth_deg));
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/std_abs.h:75:3: note: resolves to this declaration
   75 |   abs(float __x)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:327:93: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  327 |         float azimuth_diff = std::abs(normalizeAngle(request.target_azimuth_deg - antenna_it->azimuth_deg));
      |                                                                                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1104:7: note: resolves to this declaration
 1104 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:328:9: warning: variable 'elevation_diff' of type 'float' can be declared 'const' [misc-const-correctness]
  328 |         float elevation_diff = std::abs(request.target_elevation_deg - antenna_it->elevation_deg);
      |         ^
      |               const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:328:32: warning: 'abs' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  328 |         float elevation_diff = std::abs(request.target_elevation_deg - antenna_it->elevation_deg);
      |                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/std_abs.h:75:3: note: resolves to this declaration
   75 |   abs(float __x)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:328:82: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  328 |         float elevation_diff = std::abs(request.target_elevation_deg - antenna_it->elevation_deg);
      |                                                                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1104:7: note: resolves to this declaration
 1104 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:330:9: warning: variable 'total_rotation_deg' of type 'float' can be declared 'const' [misc-const-correctness]
  330 |         float total_rotation_deg = std::sqrt(azimuth_diff * azimuth_diff + elevation_diff * elevation_diff);
      |         ^
      |               const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:330:36: warning: 'sqrt' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  330 |         float total_rotation_deg = std::sqrt(azimuth_diff * azimuth_diff + elevation_diff * elevation_diff);
      |                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath:438:3: note: resolves to this declaration
  438 |   sqrt(float __x)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:331:78: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  331 |         response.estimated_arrival_time_sec = total_rotation_deg / antenna_it->rotation_speed_deg_per_sec;
      |                                                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1104:7: note: resolves to this declaration
 1104 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:332:26: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  332 |         response.message = "Antenna rotation calculated successfully";
      |                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:338:56: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  338 | std::vector<std::string> FGCom_VehicleDynamicsManager::getVehiclesInRange(double center_lat, double center_lon, float radius_km) {
      |                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:338:56: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  338 | std::vector<std::string> FGCom_VehicleDynamicsManager::getVehiclesInRange(double center_lat, double center_lon, float radius_km) {
      | ~~~~~~~~~~~~~~~~~~~~~~~~                               ^
      | auto                                                                                                                             -> std::vector<std::string>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:338:94: warning: 2 adjacent parameters of 'getVehiclesInRange' of convertible types are easily swapped by mistake [bugprone-easily-swappable-parameters]
  338 | std::vector<std::string> FGCom_VehicleDynamicsManager::getVehiclesInRange(double center_lat, double center_lon, float radius_km) {
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:338:101: note: the first parameter in the range is 'center_lon'
  338 | std::vector<std::string> FGCom_VehicleDynamicsManager::getVehiclesInRange(double center_lat, double center_lon, float radius_km) {
      |                                                                                                     ^~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:338:119: note: the last parameter in the range is 'radius_km'
  338 | std::vector<std::string> FGCom_VehicleDynamicsManager::getVehiclesInRange(double center_lat, double center_lon, float radius_km) {
      |                                                                                                                       ^~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:338:113: note: 'double' and 'float' may be implicitly converted
  338 | std::vector<std::string> FGCom_VehicleDynamicsManager::getVehiclesInRange(double center_lat, double center_lon, float radius_km) {
      |                                                                                                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:341:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  341 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:343:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  343 |     for (const auto& vehicle : vehicles) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:343:30: warning: 'operator!=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  343 |     for (const auto& vehicle : vehicles) {
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:320:7: note: resolves to this declaration
  320 |       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:343:30: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  343 |     for (const auto& vehicle : vehicles) {
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:277:7: note: resolves to this declaration
  277 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:343:30: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  343 |     for (const auto& vehicle : vehicles) {
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:285:7: note: resolves to this declaration
  285 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:344:9: warning: variable 'distance' of type 'float' can be declared 'const' [misc-const-correctness]
  344 |         float distance = calculateDistance(center_lat, center_lon, 
      |         ^
      |               const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:356:56: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  356 | std::vector<std::string> FGCom_VehicleDynamicsManager::getVehiclesByType(const std::string& vehicle_type) {
      |                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:356:56: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  356 | std::vector<std::string> FGCom_VehicleDynamicsManager::getVehiclesByType(const std::string& vehicle_type) {
      | ~~~~~~~~~~~~~~~~~~~~~~~~                               ^
      | auto                                                                                                      -> std::vector<std::string>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:359:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  359 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:361:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  361 |     for (const auto& vehicle : vehicles) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:361:30: warning: 'operator!=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  361 |     for (const auto& vehicle : vehicles) {
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:320:7: note: resolves to this declaration
  320 |       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:361:30: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  361 |     for (const auto& vehicle : vehicles) {
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:277:7: note: resolves to this declaration
  277 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:361:30: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  361 |     for (const auto& vehicle : vehicles) {
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:285:7: note: resolves to this declaration
  285 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:362:50: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  362 |         if (vehicle.second.position.vehicle_type == vehicle_type) {
      |                                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3710:5: note: resolves to this declaration
 3710 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:370:36: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  370 | bool FGCom_VehicleDynamicsManager::enableAutoTracking(const std::string& vehicle_id, const std::string& antenna_id,
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:370:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  370 | bool FGCom_VehicleDynamicsManager::enableAutoTracking(const std::string& vehicle_id, const std::string& antenna_id,
      | ~~~~                               ^
      | auto
  371 |                                                      const std::string& target_vehicle_id) {
      |                                                                                            -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:370:55: warning: 3 adjacent parameters of 'enableAutoTracking' of similar type ('const std::string &') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  370 | bool FGCom_VehicleDynamicsManager::enableAutoTracking(const std::string& vehicle_id, const std::string& antenna_id,
      |                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  371 |                                                      const std::string& target_vehicle_id) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:370:74: note: the first parameter in the range is 'vehicle_id'
  370 | bool FGCom_VehicleDynamicsManager::enableAutoTracking(const std::string& vehicle_id, const std::string& antenna_id,
      |                                                                          ^~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:371:73: note: the last parameter in the range is 'target_vehicle_id'
  371 |                                                      const std::string& target_vehicle_id) {
      |                                                                         ^~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:371:73: warning: parameter 'target_vehicle_id' is unused [misc-unused-parameters]
  371 |                                                      const std::string& target_vehicle_id) {
      |                                                                         ^~~~~~~~~~~~~~~~~
      |                                                                          /*target_vehicle_id*/
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:372:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  372 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:374:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  374 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:375:12: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  375 |     if (it == vehicles.end()) {
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:315:7: note: resolves to this declaration
  315 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:379:23: warning: 'find_if<__gnu_cxx::__normal_iterator<fgcom_antenna_orientation *, std::vector<fgcom_antenna_orientation>>, (lambda at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:380:35)>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  379 |     auto antenna_it = std::find_if(it->second.antennas.begin(), it->second.antennas.end(),
      |                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:3914:5: note: resolves to this declaration
 3914 |     find_if(_InputIterator __first, _InputIterator __last,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:379:38: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  379 |     auto antenna_it = std::find_if(it->second.antennas.begin(), it->second.antennas.end(),
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:379:67: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  379 |     auto antenna_it = std::find_if(it->second.antennas.begin(), it->second.antennas.end(),
      |                                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:381:65: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  381 |                                       return antenna.antenna_id == antenna_id;
      |                                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3710:5: note: resolves to this declaration
 3710 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:384:20: warning: 'operator==<fgcom_antenna_orientation *, std::vector<fgcom_antenna_orientation>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  384 |     if (antenna_it == it->second.antennas.end()) {
      |                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1225:5: note: resolves to this declaration
 1225 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:384:25: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  384 |     if (antenna_it == it->second.antennas.end()) {
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:389:15: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  389 |     antenna_it->is_auto_tracking = true;
      |               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1104:7: note: resolves to this declaration
 1104 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:390:15: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  390 |     antenna_it->timestamp = std::chrono::system_clock::now();
      |               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1104:7: note: resolves to this declaration
 1104 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:390:27: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  390 |     antenna_it->timestamp = std::chrono::system_clock::now();
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:390:29: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  390 |     antenna_it->timestamp = std::chrono::system_clock::now();
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:391:7: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  391 |     it->second.last_update = std::chrono::system_clock::now();
      |       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:391:28: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  391 |     it->second.last_update = std::chrono::system_clock::now();
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:391:30: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  391 |     it->second.last_update = std::chrono::system_clock::now();
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:396:36: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  396 | bool FGCom_VehicleDynamicsManager::disableAutoTracking(const std::string& vehicle_id, const std::string& antenna_id) {
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:396:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  396 | bool FGCom_VehicleDynamicsManager::disableAutoTracking(const std::string& vehicle_id, const std::string& antenna_id) {
      | ~~~~                               ^
      | auto                                                                                                                 -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:396:56: warning: 2 adjacent parameters of 'disableAutoTracking' of similar type ('const std::string &') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  396 | bool FGCom_VehicleDynamicsManager::disableAutoTracking(const std::string& vehicle_id, const std::string& antenna_id) {
      |                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:396:75: note: the first parameter in the range is 'vehicle_id'
  396 | bool FGCom_VehicleDynamicsManager::disableAutoTracking(const std::string& vehicle_id, const std::string& antenna_id) {
      |                                                                           ^~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:396:106: note: the last parameter in the range is 'antenna_id'
  396 | bool FGCom_VehicleDynamicsManager::disableAutoTracking(const std::string& vehicle_id, const std::string& antenna_id) {
      |                                                                                                          ^~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:397:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  397 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:399:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  399 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:400:12: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  400 |     if (it == vehicles.end()) {
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:315:7: note: resolves to this declaration
  315 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:404:23: warning: 'find_if<__gnu_cxx::__normal_iterator<fgcom_antenna_orientation *, std::vector<fgcom_antenna_orientation>>, (lambda at /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:405:35)>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  404 |     auto antenna_it = std::find_if(it->second.antennas.begin(), it->second.antennas.end(),
      |                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:3914:5: note: resolves to this declaration
 3914 |     find_if(_InputIterator __first, _InputIterator __last,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:404:38: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  404 |     auto antenna_it = std::find_if(it->second.antennas.begin(), it->second.antennas.end(),
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:404:67: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  404 |     auto antenna_it = std::find_if(it->second.antennas.begin(), it->second.antennas.end(),
      |                                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:406:65: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  406 |                                       return antenna.antenna_id == antenna_id;
      |                                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3710:5: note: resolves to this declaration
 3710 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:409:20: warning: 'operator==<fgcom_antenna_orientation *, std::vector<fgcom_antenna_orientation>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  409 |     if (antenna_it == it->second.antennas.end()) {
      |                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1225:5: note: resolves to this declaration
 1225 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:409:25: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  409 |     if (antenna_it == it->second.antennas.end()) {
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:413:15: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  413 |     antenna_it->is_auto_tracking = false;
      |               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1104:7: note: resolves to this declaration
 1104 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:414:15: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  414 |     antenna_it->timestamp = std::chrono::system_clock::now();
      |               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1104:7: note: resolves to this declaration
 1104 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:414:27: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  414 |     antenna_it->timestamp = std::chrono::system_clock::now();
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:414:29: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  414 |     antenna_it->timestamp = std::chrono::system_clock::now();
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:415:7: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  415 |     it->second.last_update = std::chrono::system_clock::now();
      |       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:415:28: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  415 |     it->second.last_update = std::chrono::system_clock::now();
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:415:30: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  415 |     it->second.last_update = std::chrono::system_clock::now();
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:420:36: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  420 | bool FGCom_VehicleDynamicsManager::updateAutoTracking() {
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:420:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  420 | bool FGCom_VehicleDynamicsManager::updateAutoTracking() {
      | ~~~~                               ^
      | auto                                                    -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:421:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  421 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:425:24: warning: 'operator!=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  425 |     for (auto& vehicle : vehicles) {
      |                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:320:7: note: resolves to this declaration
  320 |       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:425:24: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  425 |     for (auto& vehicle : vehicles) {
      |                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:277:7: note: resolves to this declaration
  277 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:425:24: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  425 |     for (auto& vehicle : vehicles) {
      |                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:285:7: note: resolves to this declaration
  285 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:426:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  426 |         for (auto& antenna : vehicle.second.antennas) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:426:28: warning: 'operator!=<fgcom_antenna_orientation *, std::vector<fgcom_antenna_orientation>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  426 |         for (auto& antenna : vehicle.second.antennas) {
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1241:5: note: resolves to this declaration
 1241 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:426:28: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  426 |         for (auto& antenna : vehicle.second.antennas) {
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1099:7: note: resolves to this declaration
 1099 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:426:28: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  426 |         for (auto& antenna : vehicle.second.antennas) {
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1109:7: note: resolves to this declaration
 1109 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:430:35: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  430 |                 antenna.timestamp = std::chrono::system_clock::now();
      |                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:430:37: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  430 |                 antenna.timestamp = std::chrono::system_clock::now();
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:439:36: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  439 | void FGCom_VehicleDynamicsManager::cleanupInactiveVehicles() {
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:440:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  440 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:442:16: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  442 |     auto now = std::chrono::system_clock::now();
      |                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:443:33: warning: no header providing "std::chrono::seconds" is directly included [misc-include-cleaner]
  443 |     auto timeout = std::chrono::seconds(cleanup_interval_seconds);
      |                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:445:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  445 |     auto it = vehicles.begin();
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:446:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  446 |     while (it != vehicles.end()) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:446:12: warning: backward branch (while loop) is ID-dependent due to variable reference to 'it' and may cause performance degradation [altera-id-dependent-backward-branch]
  446 |     while (it != vehicles.end()) {
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:445:5: note: inferred assignment of ID-dependent value from ID-dependent 
  445 |     auto it = vehicles.begin();
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:446:15: warning: 'operator!=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  446 |     while (it != vehicles.end()) {
      |               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:320:7: note: resolves to this declaration
  320 |       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:447:17: warning: 'operator-<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>, std::chrono::duration<long, std::ratio<1, 1000000000>>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  447 |         if (now - it->second.last_update > timeout) {
      |                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1141:7: note: resolves to this declaration
 1141 |       operator-(const time_point<_Clock, _Dur1>& __lhs,
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:447:21: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  447 |         if (now - it->second.last_update > timeout) {
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
  281 |       operator->() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:447:42: warning: 'operator><long, std::ratio<1, 1000000000>, long, std::ratio<1>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  447 |         if (now - it->second.last_update > timeout) {
      |                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:862:7: note: resolves to this declaration
  862 |       operator>(const duration<_Rep1, _Period1>& __lhs,
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:448:16: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  448 |             it = vehicles.erase(it);
      |                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:256:12: note: resolves to this declaration
  256 |     struct _Rb_tree_iterator
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:450:13: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  450 |             ++it;
      |             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:285:7: note: resolves to this declaration
  285 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:454:18: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  454 |     last_cleanup = now;
      |                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:457:36: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  457 | void FGCom_VehicleDynamicsManager::setAutoCleanup(bool enabled, int interval_seconds) {
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:462:6: warning: no header providing "std::map" is directly included [misc-include-cleaner]
    5 | std::map<std::string, std::string> FGCom_VehicleDynamicsManager::getSystemStatus() {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:462:66: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  462 | std::map<std::string, std::string> FGCom_VehicleDynamicsManager::getSystemStatus() {
      |                                                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:462:66: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  462 | std::map<std::string, std::string> FGCom_VehicleDynamicsManager::getSystemStatus() {
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                               ^
      | auto                                                                               -> std::map<std::string, std::string>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:465:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  465 |     std::lock_guard<std::mutex> lock(vehicles_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:467:11: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  467 |     status["total_vehicles"] = std::to_string(vehicles.size());
      |           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:524:7: note: resolves to this declaration
  524 |       operator[](key_type&& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:467:12: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  467 |     status["total_vehicles"] = std::to_string(vehicles.size());
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:467:30: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  467 |     status["total_vehicles"] = std::to_string(vehicles.size());
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:853:7: note: resolves to this declaration
  853 |       operator=(basic_string&& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:467:32: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  467 |     status["total_vehicles"] = std::to_string(vehicles.size());
      |                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4204:3: note: resolves to this declaration
 4204 |   to_string(unsigned long __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:467:37: warning: no header providing "std::to_string" is directly included [misc-include-cleaner]
  467 |     status["total_vehicles"] = std::to_string(vehicles.size());
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:468:11: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  468 |     status["auto_cleanup_enabled"] = auto_cleanup_enabled ? "true" : "false";
      |           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:524:7: note: resolves to this declaration
  524 |       operator[](key_type&& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:468:12: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  468 |     status["auto_cleanup_enabled"] = auto_cleanup_enabled ? "true" : "false";
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:468:36: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  468 |     status["auto_cleanup_enabled"] = auto_cleanup_enabled ? "true" : "false";
      |                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:823:7: note: resolves to this declaration
  823 |       operator=(const _CharT* __s)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:469:11: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  469 |     status["cleanup_interval_seconds"] = std::to_string(cleanup_interval_seconds);
      |           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:524:7: note: resolves to this declaration
  524 |       operator[](key_type&& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:469:12: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  469 |     status["cleanup_interval_seconds"] = std::to_string(cleanup_interval_seconds);
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:469:40: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  469 |     status["cleanup_interval_seconds"] = std::to_string(cleanup_interval_seconds);
      |                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:853:7: note: resolves to this declaration
  853 |       operator=(basic_string&& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:469:42: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  469 |     status["cleanup_interval_seconds"] = std::to_string(cleanup_interval_seconds);
      |                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:469:47: warning: no header providing "std::to_string" is directly included [misc-include-cleaner]
  469 |     status["cleanup_interval_seconds"] = std::to_string(cleanup_interval_seconds);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:473:5: warning: variable 'rotatable_antennas' of type 'int' can be declared 'const' [misc-const-correctness]
  473 |     int rotatable_antennas = 0;
      |     ^
      |         const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:476:30: warning: 'operator!=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  476 |     for (const auto& vehicle : vehicles) {
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:320:7: note: resolves to this declaration
  320 |       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:476:30: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  476 |     for (const auto& vehicle : vehicles) {
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:277:7: note: resolves to this declaration
  277 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:476:30: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  476 |     for (const auto& vehicle : vehicles) {
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_tree.h:285:7: note: resolves to this declaration
  285 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:477:35: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  477 |         if (vehicle.second.status == "active") {
      |                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:481:27: warning: narrowing conversion from 'size_type' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  481 |         total_antennas += vehicle.second.antennas.size();
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:483:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  483 |         for (const auto& antenna : vehicle.second.antennas) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:483:34: warning: 'operator!=<const fgcom_antenna_orientation *, std::vector<fgcom_antenna_orientation>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  483 |         for (const auto& antenna : vehicle.second.antennas) {
      |                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1241:5: note: resolves to this declaration
 1241 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:483:34: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  483 |         for (const auto& antenna : vehicle.second.antennas) {
      |                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1099:7: note: resolves to this declaration
 1099 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:483:34: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  483 |         for (const auto& antenna : vehicle.second.antennas) {
      |                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1109:7: note: resolves to this declaration
 1109 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:490:11: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  490 |     status["active_vehicles"] = std::to_string(active_vehicles);
      |           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:524:7: note: resolves to this declaration
  524 |       operator[](key_type&& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:490:12: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  490 |     status["active_vehicles"] = std::to_string(active_vehicles);
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:490:31: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  490 |     status["active_vehicles"] = std::to_string(active_vehicles);
      |                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:853:7: note: resolves to this declaration
  853 |       operator=(basic_string&& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:490:33: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  490 |     status["active_vehicles"] = std::to_string(active_vehicles);
      |                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:491:11: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  491 |     status["total_antennas"] = std::to_string(total_antennas);
      |           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:524:7: note: resolves to this declaration
  524 |       operator[](key_type&& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:491:12: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  491 |     status["total_antennas"] = std::to_string(total_antennas);
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:491:30: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  491 |     status["total_antennas"] = std::to_string(total_antennas);
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:853:7: note: resolves to this declaration
  853 |       operator=(basic_string&& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:491:32: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  491 |     status["total_antennas"] = std::to_string(total_antennas);
      |                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:492:11: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  492 |     status["rotatable_antennas"] = std::to_string(rotatable_antennas);
      |           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:524:7: note: resolves to this declaration
  524 |       operator[](key_type&& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:492:12: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  492 |     status["rotatable_antennas"] = std::to_string(rotatable_antennas);
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:492:34: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  492 |     status["rotatable_antennas"] = std::to_string(rotatable_antennas);
      |                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:853:7: note: resolves to this declaration
  853 |       operator=(basic_string&& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:492:36: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  492 |     status["rotatable_antennas"] = std::to_string(rotatable_antennas);
      |                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:493:11: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  493 |     status["auto_tracking_antennas"] = std::to_string(auto_tracking_antennas);
      |           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_map.h:524:7: note: resolves to this declaration
  524 |       operator[](key_type&& __k)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:493:12: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  493 |     status["auto_tracking_antennas"] = std::to_string(auto_tracking_antennas);
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:493:38: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  493 |     status["auto_tracking_antennas"] = std::to_string(auto_tracking_antennas);
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:853:7: note: resolves to this declaration
  853 |       operator=(basic_string&& __str)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:493:40: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  493 |     status["auto_tracking_antennas"] = std::to_string(auto_tracking_antennas);
      |                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:498:36: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  498 | void FGCom_VehicleDynamicsManager::setDefaultRotationSpeed(float deg_per_sec) {
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:503:36: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  503 | void FGCom_VehicleDynamicsManager::setMagneticDeclinationSource(const std::string& source) {
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:507:36: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  507 | void FGCom_VehicleDynamicsManager::setManualMagneticDeclination(float declination_deg) {
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:512:37: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  512 | float FGCom_VehicleDynamicsManager::calculateMagneticDeclination(double lat, double lon) {
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:512:37: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  512 | float FGCom_VehicleDynamicsManager::calculateMagneticDeclination(double lat, double lon) {
      | ~~~~~                               ^
      | auto                                                                                     -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:512:37: warning: method 'calculateMagneticDeclination' can be made static [readability-convert-member-functions-to-static]
  512 | float FGCom_VehicleDynamicsManager::calculateMagneticDeclination(double lat, double lon) {
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:512:66: warning: 2 adjacent parameters of 'calculateMagneticDeclination' of similar type ('double') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  512 | float FGCom_VehicleDynamicsManager::calculateMagneticDeclination(double lat, double lon) {
      |                                                                  ^~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:512:73: note: the first parameter in the range is 'lat'
  512 | float FGCom_VehicleDynamicsManager::calculateMagneticDeclination(double lat, double lon) {
      |                                                                         ^~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:512:85: note: the last parameter in the range is 'lon'
  512 | float FGCom_VehicleDynamicsManager::calculateMagneticDeclination(double lat, double lon) {
      |                                                                                     ^~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:512:85: warning: parameter 'lon' is unused [misc-unused-parameters]
  512 | float FGCom_VehicleDynamicsManager::calculateMagneticDeclination(double lat, double lon) {
      |                                                                                     ^~~
      |                                                                                      /*lon*/
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:516:12: warning: narrowing conversion from 'double' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  516 |     return lat * 0.1f; // Very rough approximation
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:516:18: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  516 |     return lat * 0.1f; // Very rough approximation
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:516:18: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  516 |     return lat * 0.1f; // Very rough approximation
      |                  ^  ~
      |                     F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:519:36: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  519 | void FGCom_VehicleDynamicsManager::transformAttitudeToAntennaOrientation(const fgcom_vehicle_attitude& attitude,
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:524:30: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  524 |     if (antenna.antenna_type == "yagi" || antenna.antenna_type == "dipole") {
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:524:64: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  524 |     if (antenna.antenna_type == "yagi" || antenna.antenna_type == "dipole") {
      |                                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:527:33: warning: 'max<float>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  527 |         antenna.elevation_deg = std::max(-90.0f, std::min(90.0f, 
      |                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algobase.h:257:5: note: resolves to this declaration
  257 |     max(const _Tp& __a, const _Tp& __b)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:527:43: warning: 90.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  527 |         antenna.elevation_deg = std::max(-90.0f, std::min(90.0f, 
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:527:43: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  527 |         antenna.elevation_deg = std::max(-90.0f, std::min(90.0f, 
      |                                           ^   ~
      |                                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:527:50: warning: 'min<float>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  527 |         antenna.elevation_deg = std::max(-90.0f, std::min(90.0f, 
      |                                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algobase.h:233:5: note: resolves to this declaration
  233 |     min(const _Tp& __a, const _Tp& __b)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:527:59: warning: 90.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  527 |         antenna.elevation_deg = std::max(-90.0f, std::min(90.0f, 
      |                                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:527:59: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  527 |         antenna.elevation_deg = std::max(-90.0f, std::min(90.0f, 
      |                                                           ^   ~
      |                                                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:533:37: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  533 | float FGCom_VehicleDynamicsManager::normalizeAngle(float angle_deg) {
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:533:37: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  533 | float FGCom_VehicleDynamicsManager::normalizeAngle(float angle_deg) {
      | ~~~~~                               ^
      | auto                                                                -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:533:37: warning: method 'normalizeAngle' can be made static [readability-convert-member-functions-to-static]
  533 | float FGCom_VehicleDynamicsManager::normalizeAngle(float angle_deg) {
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:534:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  534 |     while (angle_deg < 0.0f) angle_deg += 360.0f;
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:534:24: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  534 |     while (angle_deg < 0.0f) angle_deg += 360.0f;
      |                        ^  ~
      |                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:534:29: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  534 |     while (angle_deg < 0.0f) angle_deg += 360.0f;
      |                             ^                    
      |                              {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:534:43: warning: 360.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  534 |     while (angle_deg < 0.0f) angle_deg += 360.0f;
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:534:43: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  534 |     while (angle_deg < 0.0f) angle_deg += 360.0f;
      |                                           ^    ~
      |                                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:535:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  535 |     while (angle_deg >= 360.0f) angle_deg -= 360.0f;
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:535:25: warning: 360.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  535 |     while (angle_deg >= 360.0f) angle_deg -= 360.0f;
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:535:25: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  535 |     while (angle_deg >= 360.0f) angle_deg -= 360.0f;
      |                         ^    ~
      |                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:535:32: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  535 |     while (angle_deg >= 360.0f) angle_deg -= 360.0f;
      |                                ^                    
      |                                 {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:535:46: warning: 360.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  535 |     while (angle_deg >= 360.0f) angle_deg -= 360.0f;
      |                                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:535:46: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  535 |     while (angle_deg >= 360.0f) angle_deg -= 360.0f;
      |                                              ^    ~
      |                                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:539:37: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  539 | float FGCom_VehicleDynamicsManager::calculateDistance(double lat1, double lon1, double lat2, double lon2) {
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:539:37: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  539 | float FGCom_VehicleDynamicsManager::calculateDistance(double lat1, double lon1, double lat2, double lon2) {
      | ~~~~~                               ^
      | auto                                                                                                      -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:539:37: warning: method 'calculateDistance' can be made static [readability-convert-member-functions-to-static]
  539 | float FGCom_VehicleDynamicsManager::calculateDistance(double lat1, double lon1, double lat2, double lon2) {
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:539:55: warning: 2 adjacent parameters of 'calculateDistance' of similar type ('double') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  539 | float FGCom_VehicleDynamicsManager::calculateDistance(double lat1, double lon1, double lat2, double lon2) {
      |                                                       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:539:62: note: the first parameter in the range is 'lat1'
  539 | float FGCom_VehicleDynamicsManager::calculateDistance(double lat1, double lon1, double lat2, double lon2) {
      |                                                              ^~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:539:75: note: the last parameter in the range is 'lon1'
  539 | float FGCom_VehicleDynamicsManager::calculateDistance(double lat1, double lon1, double lat2, double lon2) {
      |                                                                           ^~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:539:81: warning: 2 adjacent parameters of 'calculateDistance' of similar type ('double') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  539 | float FGCom_VehicleDynamicsManager::calculateDistance(double lat1, double lon1, double lat2, double lon2) {
      |                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:539:88: note: the first parameter in the range is 'lat2'
  539 | float FGCom_VehicleDynamicsManager::calculateDistance(double lat1, double lon1, double lat2, double lon2) {
      |                                                                                        ^~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:539:101: note: the last parameter in the range is 'lon2'
  539 | float FGCom_VehicleDynamicsManager::calculateDistance(double lat1, double lon1, double lat2, double lon2) {
      |                                                                                                     ^~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:541:5: warning: variable 'dlat' of type 'double' can be declared 'const' [misc-const-correctness]
  541 |     double dlat = (lat2 - lat1) * DEG_TO_RAD;
      |     ^
      |            const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:542:5: warning: variable 'dlon' of type 'double' can be declared 'const' [misc-const-correctness]
  542 |     double dlon = (lon2 - lon1) * DEG_TO_RAD;
      |     ^
      |            const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:544:5: warning: variable 'a' of type 'double' can be declared 'const' [misc-const-correctness]
  544 |     double a = std::sin(dlat/2) * std::sin(dlat/2) +
      |     ^
      |            const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:544:12: warning: variable name 'a' is too short, expected at least 3 characters [readability-identifier-length]
  544 |     double a = std::sin(dlat/2) * std::sin(dlat/2) +
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:548:5: warning: variable 'c' of type 'double' can be declared 'const' [misc-const-correctness]
  548 |     double c = 2 * std::atan2(std::sqrt(a), std::sqrt(1-a));
      |     ^
      |            const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:548:12: warning: variable name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  548 |     double c = 2 * std::atan2(std::sqrt(a), std::sqrt(1-a));
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:550:12: warning: narrowing conversion from 'double' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  550 |     return EARTH_RADIUS_KM * c;
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:553:37: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  553 | float FGCom_VehicleDynamicsManager::calculateBearing(double lat1, double lon1, double lat2, double lon2) {
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:553:37: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  553 | float FGCom_VehicleDynamicsManager::calculateBearing(double lat1, double lon1, double lat2, double lon2) {
      | ~~~~~                               ^
      | auto                                                                                                     -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:553:54: warning: 2 adjacent parameters of 'calculateBearing' of similar type ('double') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  553 | float FGCom_VehicleDynamicsManager::calculateBearing(double lat1, double lon1, double lat2, double lon2) {
      |                                                      ^~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:553:61: note: the first parameter in the range is 'lat1'
  553 | float FGCom_VehicleDynamicsManager::calculateBearing(double lat1, double lon1, double lat2, double lon2) {
      |                                                             ^~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:553:74: note: the last parameter in the range is 'lon1'
  553 | float FGCom_VehicleDynamicsManager::calculateBearing(double lat1, double lon1, double lat2, double lon2) {
      |                                                                          ^~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:553:80: warning: 2 adjacent parameters of 'calculateBearing' of similar type ('double') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  553 | float FGCom_VehicleDynamicsManager::calculateBearing(double lat1, double lon1, double lat2, double lon2) {
      |                                                                                ^~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:553:87: note: the first parameter in the range is 'lat2'
  553 | float FGCom_VehicleDynamicsManager::calculateBearing(double lat1, double lon1, double lat2, double lon2) {
      |                                                                                       ^~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:553:100: note: the last parameter in the range is 'lon2'
  553 | float FGCom_VehicleDynamicsManager::calculateBearing(double lat1, double lon1, double lat2, double lon2) {
      |                                                                                                    ^~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:555:5: warning: variable 'dlat' of type 'double' can be declared 'const' [misc-const-correctness]
  555 |     double dlat = (lat2 - lat1) * DEG_TO_RAD;
      |     ^
      |            const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:555:12: warning: Value stored to 'dlat' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  555 |     double dlat = (lat2 - lat1) * DEG_TO_RAD;
      |            ^~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:555:12: note: Value stored to 'dlat' during its initialization is never read
  555 |     double dlat = (lat2 - lat1) * DEG_TO_RAD;
      |            ^~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:556:5: warning: variable 'dlon' of type 'double' can be declared 'const' [misc-const-correctness]
  556 |     double dlon = (lon2 - lon1) * DEG_TO_RAD;
      |     ^
      |            const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:558:5: warning: variable 'y' of type 'double' can be declared 'const' [misc-const-correctness]
  558 |     double y = std::sin(dlon) * std::cos(lat2 * DEG_TO_RAD);
      |     ^
      |            const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:558:12: warning: variable name 'y' is too short, expected at least 3 characters [readability-identifier-length]
  558 |     double y = std::sin(dlon) * std::cos(lat2 * DEG_TO_RAD);
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:559:5: warning: variable 'x' of type 'double' can be declared 'const' [misc-const-correctness]
  559 |     double x = std::cos(lat1 * DEG_TO_RAD) * std::sin(lat2 * DEG_TO_RAD) -
      |     ^
      |            const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:559:12: warning: variable name 'x' is too short, expected at least 3 characters [readability-identifier-length]
  559 |     double x = std::cos(lat1 * DEG_TO_RAD) * std::sin(lat2 * DEG_TO_RAD) -
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:562:5: warning: variable 'bearing' of type 'double' can be declared 'const' [misc-const-correctness]
  562 |     double bearing = std::atan2(y, x) * RAD_TO_DEG;
      |     ^
      |            const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:563:27: warning: narrowing conversion from 'double' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  563 |     return normalizeAngle(bearing);
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:567:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  567 | bool initializeVehicleDynamicsManager() {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:567:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  567 | bool initializeVehicleDynamicsManager() {
      | ~~~~ ^
      | auto                                    -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:572:32: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  572 |     g_vehicle_dynamics_manager = std::make_unique<FGCom_VehicleDynamicsManager>();
      |                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/unique_ptr.h:414:19: note: resolves to this declaration
  414 |       unique_ptr& operator=(unique_ptr&&) = default;
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:572:34: warning: 'make_unique<FGCom_VehicleDynamicsManager>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  572 |     g_vehicle_dynamics_manager = std::make_unique<FGCom_VehicleDynamicsManager>();
      |                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/unique_ptr.h:1069:5: note: resolves to this declaration
 1069 |     make_unique(_Args&&... __args)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:572:39: warning: no header providing "std::make_unique" is directly included [misc-include-cleaner]
  572 |     g_vehicle_dynamics_manager = std::make_unique<FGCom_VehicleDynamicsManager>();
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:576:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  576 | void shutdownVehicleDynamicsManager() {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:577:5: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  577 |     g_vehicle_dynamics_manager.reset();
      |     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/unique_ptr.h:505:13: note: default parameter was declared here
  505 |       reset(pointer __p = pointer()) noexcept
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:1:9: warning: header guard does not follow preferred style [llvm-header-guard]
    1 | #ifndef FGCOM_VEHICLE_DYNAMICS_H
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_VEHICLE_DYNAMICS_H
    2 | #define FGCOM_VEHICLE_DYNAMICS_H
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_VEHICLE_DYNAMICS_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:4:1: warning: #includes are not sorted properly [llvm-include-order]
    4 | #include <string>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:4:1: warning: system include string not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h [llvmlibc-restrict-system-libc-headers]
    4 | #include <string>
      | ^~~~~~~~~~~~~~~~~
    5 | #include <vector>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:5:1: warning: system include vector not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h [llvmlibc-restrict-system-libc-headers]
    5 | #include <vector>
      | ^~~~~~~~~~~~~~~~~
    6 | #include <map>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:6:1: warning: system include map not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h [llvmlibc-restrict-system-libc-headers]
    6 | #include <map>
      | ^~~~~~~~~~~~~~
    7 | #include <mutex>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:7:1: warning: system include mutex not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h [llvmlibc-restrict-system-libc-headers]
    7 | #include <mutex>
      | ^~~~~~~~~~~~~~~~
    8 | #include <chrono>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:8:1: warning: system include chrono not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h [llvmlibc-restrict-system-libc-headers]
    8 | #include <chrono>
      | ^~~~~~~~~~~~~~~~~
    9 | #include <memory>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:9:1: warning: system include memory not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h [llvmlibc-restrict-system-libc-headers]
    9 | #include <memory>
      | ^~~~~~~~~~~~~~~~~
   10 | 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:12:8: warning: accessing fields in struct 'fgcom_vehicle_attitude' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 32 bytes [altera-struct-pack-align]
   12 | struct fgcom_vehicle_attitude {
      |        ^
   13 |     float pitch_deg;        // Pitch angle in degrees (-90 to +90)
   14 |     float roll_deg;         // Roll angle in degrees (-180 to +180)
   15 |     float yaw_deg;          // Yaw angle in degrees (0 to 360, true heading)
   16 |     float magnetic_heading_deg; // Magnetic heading in degrees (0 to 360)
   17 |     float magnetic_declination_deg; // Magnetic declination at current location
   18 |     std::chrono::system_clock::time_point timestamp;
   19 |     
   20 |     fgcom_vehicle_attitude() : pitch_deg(0.0f), roll_deg(0.0f), yaw_deg(0.0f), 
   21 |                               magnetic_heading_deg(0.0f), magnetic_declination_deg(0.0f) {
   22 |         timestamp = std::chrono::system_clock::now();
   23 |     }
   24 | };
      |  
      |   __attribute__((aligned(32)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:12:8: note: use "__attribute__((aligned(32)))" to align struct 'fgcom_vehicle_attitude' to 32 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:13:11: warning: use default member initializer for 'pitch_deg' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   13 |     float pitch_deg;        // Pitch angle in degrees (-90 to +90)
      |           ^        
      |                    {0.0f}
   14 |     float roll_deg;         // Roll angle in degrees (-180 to +180)
   15 |     float yaw_deg;          // Yaw angle in degrees (0 to 360, true heading)
   16 |     float magnetic_heading_deg; // Magnetic heading in degrees (0 to 360)
   17 |     float magnetic_declination_deg; // Magnetic declination at current location
   18 |     std::chrono::system_clock::time_point timestamp;
   19 |     
   20 |     fgcom_vehicle_attitude() : pitch_deg(0.0f), roll_deg(0.0f), yaw_deg(0.0f), 
      |                                ~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:13:11: warning: member variable 'pitch_deg' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:14:11: warning: use default member initializer for 'roll_deg' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   14 |     float roll_deg;         // Roll angle in degrees (-180 to +180)
      |           ^       
      |                   {0.0f}
   15 |     float yaw_deg;          // Yaw angle in degrees (0 to 360, true heading)
   16 |     float magnetic_heading_deg; // Magnetic heading in degrees (0 to 360)
   17 |     float magnetic_declination_deg; // Magnetic declination at current location
   18 |     std::chrono::system_clock::time_point timestamp;
   19 |     
   20 |     fgcom_vehicle_attitude() : pitch_deg(0.0f), roll_deg(0.0f), yaw_deg(0.0f), 
      |                                                 ~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:14:11: warning: member variable 'roll_deg' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:15:11: warning: use default member initializer for 'yaw_deg' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   15 |     float yaw_deg;          // Yaw angle in degrees (0 to 360, true heading)
      |           ^      
      |                  {0.0f}
   16 |     float magnetic_heading_deg; // Magnetic heading in degrees (0 to 360)
   17 |     float magnetic_declination_deg; // Magnetic declination at current location
   18 |     std::chrono::system_clock::time_point timestamp;
   19 |     
   20 |     fgcom_vehicle_attitude() : pitch_deg(0.0f), roll_deg(0.0f), yaw_deg(0.0f), 
      |                                                                 ~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:15:11: warning: member variable 'yaw_deg' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:16:11: warning: use default member initializer for 'magnetic_heading_deg' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   16 |     float magnetic_heading_deg; // Magnetic heading in degrees (0 to 360)
      |           ^                   
      |                               {0.0f}
   17 |     float magnetic_declination_deg; // Magnetic declination at current location
   18 |     std::chrono::system_clock::time_point timestamp;
   19 |     
   20 |     fgcom_vehicle_attitude() : pitch_deg(0.0f), roll_deg(0.0f), yaw_deg(0.0f), 
   21 |                               magnetic_heading_deg(0.0f), magnetic_declination_deg(0.0f) {
      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:16:11: warning: member variable 'magnetic_heading_deg' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:17:11: warning: use default member initializer for 'magnetic_declination_deg' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   17 |     float magnetic_declination_deg; // Magnetic declination at current location
      |           ^                       
      |                                   {0.0f}
   18 |     std::chrono::system_clock::time_point timestamp;
   19 |     
   20 |     fgcom_vehicle_attitude() : pitch_deg(0.0f), roll_deg(0.0f), yaw_deg(0.0f), 
   21 |                               magnetic_heading_deg(0.0f), magnetic_declination_deg(0.0f) {
      |                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:17:11: warning: member variable 'magnetic_declination_deg' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:18:43: warning: member variable 'timestamp' has public visibility [misc-non-private-member-variables-in-classes]
   18 |     std::chrono::system_clock::time_point timestamp;
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:20:5: warning: 'fgcom_vehicle_attitude' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   20 |     fgcom_vehicle_attitude() : pitch_deg(0.0f), roll_deg(0.0f), yaw_deg(0.0f), 
      |     ^
      |     LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:20:42: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   20 |     fgcom_vehicle_attitude() : pitch_deg(0.0f), roll_deg(0.0f), yaw_deg(0.0f), 
      |                                          ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:20:58: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   20 |     fgcom_vehicle_attitude() : pitch_deg(0.0f), roll_deg(0.0f), yaw_deg(0.0f), 
      |                                                          ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:20:73: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   20 |     fgcom_vehicle_attitude() : pitch_deg(0.0f), roll_deg(0.0f), yaw_deg(0.0f), 
      |                                                                         ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:21:52: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   21 |                               magnetic_heading_deg(0.0f), magnetic_declination_deg(0.0f) {
      |                                                    ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:21:84: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   21 |                               magnetic_heading_deg(0.0f), magnetic_declination_deg(0.0f) {
      |                                                                                    ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:22:19: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   22 |         timestamp = std::chrono::system_clock::now();
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:22:21: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   22 |         timestamp = std::chrono::system_clock::now();
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:26:8: warning: accessing fields in struct 'fgcom_vehicle_velocity' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 32 bytes [altera-struct-pack-align]
   26 | struct fgcom_vehicle_velocity {
      |        ^
   27 |     float speed_knots;      // Speed in knots
   28 |     float speed_kmh;        // Speed in km/h
   29 |     float speed_ms;         // Speed in m/s
   30 |     float course_deg;       // Course over ground in degrees (0-360)
   31 |     float vertical_speed_fpm; // Vertical speed in feet per minute
   32 |     float vertical_speed_ms;  // Vertical speed in m/s
   33 |     std::chrono::system_clock::time_point timestamp;
   34 |     
   35 |     fgcom_vehicle_velocity() : speed_knots(0.0f), speed_kmh(0.0f), speed_ms(0.0f),
   36 |                               course_deg(0.0f), vertical_speed_fpm(0.0f), vertical_speed_ms(0.0f) {
   37 |         timestamp = std::chrono::system_clock::now();
   38 |     }
   39 | };
      |  
      |   __attribute__((aligned(32)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:26:8: note: use "__attribute__((aligned(32)))" to align struct 'fgcom_vehicle_velocity' to 32 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:27:11: warning: use default member initializer for 'speed_knots' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   27 |     float speed_knots;      // Speed in knots
      |           ^          
      |                      {0.0f}
   28 |     float speed_kmh;        // Speed in km/h
   29 |     float speed_ms;         // Speed in m/s
   30 |     float course_deg;       // Course over ground in degrees (0-360)
   31 |     float vertical_speed_fpm; // Vertical speed in feet per minute
   32 |     float vertical_speed_ms;  // Vertical speed in m/s
   33 |     std::chrono::system_clock::time_point timestamp;
   34 |     
   35 |     fgcom_vehicle_velocity() : speed_knots(0.0f), speed_kmh(0.0f), speed_ms(0.0f),
      |                                ~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:27:11: warning: member variable 'speed_knots' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:28:11: warning: use default member initializer for 'speed_kmh' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   28 |     float speed_kmh;        // Speed in km/h
      |           ^        
      |                    {0.0f}
   29 |     float speed_ms;         // Speed in m/s
   30 |     float course_deg;       // Course over ground in degrees (0-360)
   31 |     float vertical_speed_fpm; // Vertical speed in feet per minute
   32 |     float vertical_speed_ms;  // Vertical speed in m/s
   33 |     std::chrono::system_clock::time_point timestamp;
   34 |     
   35 |     fgcom_vehicle_velocity() : speed_knots(0.0f), speed_kmh(0.0f), speed_ms(0.0f),
      |                                                   ~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:28:11: warning: member variable 'speed_kmh' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:29:11: warning: use default member initializer for 'speed_ms' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   29 |     float speed_ms;         // Speed in m/s
      |           ^       
      |                   {0.0f}
   30 |     float course_deg;       // Course over ground in degrees (0-360)
   31 |     float vertical_speed_fpm; // Vertical speed in feet per minute
   32 |     float vertical_speed_ms;  // Vertical speed in m/s
   33 |     std::chrono::system_clock::time_point timestamp;
   34 |     
   35 |     fgcom_vehicle_velocity() : speed_knots(0.0f), speed_kmh(0.0f), speed_ms(0.0f),
      |                                                                    ~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:29:11: warning: member variable 'speed_ms' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:30:11: warning: use default member initializer for 'course_deg' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   30 |     float course_deg;       // Course over ground in degrees (0-360)
      |           ^         
      |                     {0.0f}
   31 |     float vertical_speed_fpm; // Vertical speed in feet per minute
   32 |     float vertical_speed_ms;  // Vertical speed in m/s
   33 |     std::chrono::system_clock::time_point timestamp;
   34 |     
   35 |     fgcom_vehicle_velocity() : speed_knots(0.0f), speed_kmh(0.0f), speed_ms(0.0f),
   36 |                               course_deg(0.0f), vertical_speed_fpm(0.0f), vertical_speed_ms(0.0f) {
      |                               ~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:30:11: warning: member variable 'course_deg' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:31:11: warning: use default member initializer for 'vertical_speed_fpm' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   31 |     float vertical_speed_fpm; // Vertical speed in feet per minute
      |           ^                 
      |                             {0.0f}
   32 |     float vertical_speed_ms;  // Vertical speed in m/s
   33 |     std::chrono::system_clock::time_point timestamp;
   34 |     
   35 |     fgcom_vehicle_velocity() : speed_knots(0.0f), speed_kmh(0.0f), speed_ms(0.0f),
   36 |                               course_deg(0.0f), vertical_speed_fpm(0.0f), vertical_speed_ms(0.0f) {
      |                                                 ~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:31:11: warning: member variable 'vertical_speed_fpm' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:32:11: warning: use default member initializer for 'vertical_speed_ms' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   32 |     float vertical_speed_ms;  // Vertical speed in m/s
      |           ^                
      |                            {0.0f}
   33 |     std::chrono::system_clock::time_point timestamp;
   34 |     
   35 |     fgcom_vehicle_velocity() : speed_knots(0.0f), speed_kmh(0.0f), speed_ms(0.0f),
   36 |                               course_deg(0.0f), vertical_speed_fpm(0.0f), vertical_speed_ms(0.0f) {
      |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:32:11: warning: member variable 'vertical_speed_ms' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:33:43: warning: member variable 'timestamp' has public visibility [misc-non-private-member-variables-in-classes]
   33 |     std::chrono::system_clock::time_point timestamp;
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:35:5: warning: 'fgcom_vehicle_velocity' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   35 |     fgcom_vehicle_velocity() : speed_knots(0.0f), speed_kmh(0.0f), speed_ms(0.0f),
      |     ^
      |     LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:35:44: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   35 |     fgcom_vehicle_velocity() : speed_knots(0.0f), speed_kmh(0.0f), speed_ms(0.0f),
      |                                            ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:35:61: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   35 |     fgcom_vehicle_velocity() : speed_knots(0.0f), speed_kmh(0.0f), speed_ms(0.0f),
      |                                                             ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:35:77: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   35 |     fgcom_vehicle_velocity() : speed_knots(0.0f), speed_kmh(0.0f), speed_ms(0.0f),
      |                                                                             ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:36:42: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   36 |                               course_deg(0.0f), vertical_speed_fpm(0.0f), vertical_speed_ms(0.0f) {
      |                                          ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:36:68: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   36 |                               course_deg(0.0f), vertical_speed_fpm(0.0f), vertical_speed_ms(0.0f) {
      |                                                                    ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:36:93: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   36 |                               course_deg(0.0f), vertical_speed_fpm(0.0f), vertical_speed_ms(0.0f) {
      |                                                                                             ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:37:19: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   37 |         timestamp = std::chrono::system_clock::now();
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:37:21: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   37 |         timestamp = std::chrono::system_clock::now();
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:41:8: warning: accessing fields in struct 'fgcom_vehicle_position' is inefficient due to padding; only needs 100 bytes but is using 104 bytes [altera-struct-pack-align]
   41 | struct fgcom_vehicle_position {
      |        ^
   42 |     double latitude;        // Latitude in decimal degrees
   43 |     double longitude;       // Longitude in decimal degrees
   44 |     float altitude_ft_msl;  // Altitude in feet MSL
   45 |     float altitude_ft_agl;  // Altitude in feet AGL
   46 |     float ground_elevation_ft; // Ground elevation in feet MSL
   47 |     std::string callsign;   // Vehicle callsign
   48 |     std::string vehicle_type; // "aircraft", "boat", "ship", "vehicle", "ground_station"
   49 |     std::chrono::system_clock::time_point timestamp;
   50 |     
   51 |     fgcom_vehicle_position() : latitude(0.0), longitude(0.0), altitude_ft_msl(0.0f),
   52 |                               altitude_ft_agl(0.0f), ground_elevation_ft(0.0f) {
   53 |         timestamp = std::chrono::system_clock::now();
   54 |     }
   55 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:41:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'fgcom_vehicle_position'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:41:8: warning: accessing fields in struct 'fgcom_vehicle_position' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 128 bytes [altera-struct-pack-align]
   41 | struct fgcom_vehicle_position {
      |        ^
   42 |     double latitude;        // Latitude in decimal degrees
   43 |     double longitude;       // Longitude in decimal degrees
   44 |     float altitude_ft_msl;  // Altitude in feet MSL
   45 |     float altitude_ft_agl;  // Altitude in feet AGL
   46 |     float ground_elevation_ft; // Ground elevation in feet MSL
   47 |     std::string callsign;   // Vehicle callsign
   48 |     std::string vehicle_type; // "aircraft", "boat", "ship", "vehicle", "ground_station"
   49 |     std::chrono::system_clock::time_point timestamp;
   50 |     
   51 |     fgcom_vehicle_position() : latitude(0.0), longitude(0.0), altitude_ft_msl(0.0f),
   52 |                               altitude_ft_agl(0.0f), ground_elevation_ft(0.0f) {
   53 |         timestamp = std::chrono::system_clock::now();
   54 |     }
   55 | };
      |  
      |   __attribute__((aligned(128)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:41:8: note: use "__attribute__((aligned(128)))" to align struct 'fgcom_vehicle_position' to 128 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:42:12: warning: use default member initializer for 'latitude' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   42 |     double latitude;        // Latitude in decimal degrees
      |            ^       
      |                    {0.0}
   43 |     double longitude;       // Longitude in decimal degrees
   44 |     float altitude_ft_msl;  // Altitude in feet MSL
   45 |     float altitude_ft_agl;  // Altitude in feet AGL
   46 |     float ground_elevation_ft; // Ground elevation in feet MSL
   47 |     std::string callsign;   // Vehicle callsign
   48 |     std::string vehicle_type; // "aircraft", "boat", "ship", "vehicle", "ground_station"
   49 |     std::chrono::system_clock::time_point timestamp;
   50 |     
   51 |     fgcom_vehicle_position() : latitude(0.0), longitude(0.0), altitude_ft_msl(0.0f),
      |                                ~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:42:12: warning: member variable 'latitude' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:43:12: warning: use default member initializer for 'longitude' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   43 |     double longitude;       // Longitude in decimal degrees
      |            ^        
      |                     {0.0}
   44 |     float altitude_ft_msl;  // Altitude in feet MSL
   45 |     float altitude_ft_agl;  // Altitude in feet AGL
   46 |     float ground_elevation_ft; // Ground elevation in feet MSL
   47 |     std::string callsign;   // Vehicle callsign
   48 |     std::string vehicle_type; // "aircraft", "boat", "ship", "vehicle", "ground_station"
   49 |     std::chrono::system_clock::time_point timestamp;
   50 |     
   51 |     fgcom_vehicle_position() : latitude(0.0), longitude(0.0), altitude_ft_msl(0.0f),
      |                                               ~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:43:12: warning: member variable 'longitude' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:44:11: warning: use default member initializer for 'altitude_ft_msl' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   44 |     float altitude_ft_msl;  // Altitude in feet MSL
      |           ^              
      |                          {0.0f}
   45 |     float altitude_ft_agl;  // Altitude in feet AGL
   46 |     float ground_elevation_ft; // Ground elevation in feet MSL
   47 |     std::string callsign;   // Vehicle callsign
   48 |     std::string vehicle_type; // "aircraft", "boat", "ship", "vehicle", "ground_station"
   49 |     std::chrono::system_clock::time_point timestamp;
   50 |     
   51 |     fgcom_vehicle_position() : latitude(0.0), longitude(0.0), altitude_ft_msl(0.0f),
      |                                                               ~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:44:11: warning: member variable 'altitude_ft_msl' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:45:11: warning: use default member initializer for 'altitude_ft_agl' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   45 |     float altitude_ft_agl;  // Altitude in feet AGL
      |           ^              
      |                          {0.0f}
   46 |     float ground_elevation_ft; // Ground elevation in feet MSL
   47 |     std::string callsign;   // Vehicle callsign
   48 |     std::string vehicle_type; // "aircraft", "boat", "ship", "vehicle", "ground_station"
   49 |     std::chrono::system_clock::time_point timestamp;
   50 |     
   51 |     fgcom_vehicle_position() : latitude(0.0), longitude(0.0), altitude_ft_msl(0.0f),
   52 |                               altitude_ft_agl(0.0f), ground_elevation_ft(0.0f) {
      |                               ~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:45:11: warning: member variable 'altitude_ft_agl' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:46:11: warning: use default member initializer for 'ground_elevation_ft' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   46 |     float ground_elevation_ft; // Ground elevation in feet MSL
      |           ^                  
      |                              {0.0f}
   47 |     std::string callsign;   // Vehicle callsign
   48 |     std::string vehicle_type; // "aircraft", "boat", "ship", "vehicle", "ground_station"
   49 |     std::chrono::system_clock::time_point timestamp;
   50 |     
   51 |     fgcom_vehicle_position() : latitude(0.0), longitude(0.0), altitude_ft_msl(0.0f),
   52 |                               altitude_ft_agl(0.0f), ground_elevation_ft(0.0f) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:46:11: warning: member variable 'ground_elevation_ft' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:47:17: warning: member variable 'callsign' has public visibility [misc-non-private-member-variables-in-classes]
   47 |     std::string callsign;   // Vehicle callsign
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:48:17: warning: member variable 'vehicle_type' has public visibility [misc-non-private-member-variables-in-classes]
   48 |     std::string vehicle_type; // "aircraft", "boat", "ship", "vehicle", "ground_station"
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:49:43: warning: member variable 'timestamp' has public visibility [misc-non-private-member-variables-in-classes]
   49 |     std::chrono::system_clock::time_point timestamp;
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:51:5: warning: 'fgcom_vehicle_position' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   51 |     fgcom_vehicle_position() : latitude(0.0), longitude(0.0), altitude_ft_msl(0.0f),
      |     ^
      |     LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:51:79: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   51 |     fgcom_vehicle_position() : latitude(0.0), longitude(0.0), altitude_ft_msl(0.0f),
      |                                                                               ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:52:47: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   52 |                               altitude_ft_agl(0.0f), ground_elevation_ft(0.0f) {
      |                                               ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:52:74: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   52 |                               altitude_ft_agl(0.0f), ground_elevation_ft(0.0f) {
      |                                                                          ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:53:19: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   53 |         timestamp = std::chrono::system_clock::now();
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:53:21: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   53 |         timestamp = std::chrono::system_clock::now();
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:57:8: warning: accessing fields in struct 'fgcom_antenna_orientation' is inefficient due to padding; only needs 85 bytes but is using 88 bytes [altera-struct-pack-align]
   57 | struct fgcom_antenna_orientation {
      |        ^
   58 |     std::string antenna_id;     // Unique antenna identifier
   59 |     std::string antenna_type;   // "yagi", "dipole", "vertical", "loop", "whip"
   60 |     float azimuth_deg;          // Azimuth pointing direction (0-360)
   61 |     float elevation_deg;        // Elevation angle (-90 to +90)
   62 |     bool is_auto_tracking;      // Is auto-tracking enabled?
   63 |     float rotation_speed_deg_per_sec; // Rotation speed for motorized antennas
   64 |     std::chrono::system_clock::time_point timestamp;
   65 |     
   66 |     fgcom_antenna_orientation() : azimuth_deg(0.0f), elevation_deg(0.0f),
   67 |                                  is_auto_tracking(false),
   68 |                                  rotation_speed_deg_per_sec(0.0f) {
   69 |         timestamp = std::chrono::system_clock::now();
   70 |     }
   71 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:57:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'fgcom_antenna_orientation'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:57:8: warning: accessing fields in struct 'fgcom_antenna_orientation' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 128 bytes [altera-struct-pack-align]
   57 | struct fgcom_antenna_orientation {
      |        ^
   58 |     std::string antenna_id;     // Unique antenna identifier
   59 |     std::string antenna_type;   // "yagi", "dipole", "vertical", "loop", "whip"
   60 |     float azimuth_deg;          // Azimuth pointing direction (0-360)
   61 |     float elevation_deg;        // Elevation angle (-90 to +90)
   62 |     bool is_auto_tracking;      // Is auto-tracking enabled?
   63 |     float rotation_speed_deg_per_sec; // Rotation speed for motorized antennas
   64 |     std::chrono::system_clock::time_point timestamp;
   65 |     
   66 |     fgcom_antenna_orientation() : azimuth_deg(0.0f), elevation_deg(0.0f),
   67 |                                  is_auto_tracking(false),
   68 |                                  rotation_speed_deg_per_sec(0.0f) {
   69 |         timestamp = std::chrono::system_clock::now();
   70 |     }
   71 | };
      |  
      |   __attribute__((aligned(128)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:57:8: note: use "__attribute__((aligned(128)))" to align struct 'fgcom_antenna_orientation' to 128 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:58:17: warning: member variable 'antenna_id' has public visibility [misc-non-private-member-variables-in-classes]
   58 |     std::string antenna_id;     // Unique antenna identifier
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:59:17: warning: member variable 'antenna_type' has public visibility [misc-non-private-member-variables-in-classes]
   59 |     std::string antenna_type;   // "yagi", "dipole", "vertical", "loop", "whip"
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:60:11: warning: use default member initializer for 'azimuth_deg' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   60 |     float azimuth_deg;          // Azimuth pointing direction (0-360)
      |           ^          
      |                      {0.0f}
   61 |     float elevation_deg;        // Elevation angle (-90 to +90)
   62 |     bool is_auto_tracking;      // Is auto-tracking enabled?
   63 |     float rotation_speed_deg_per_sec; // Rotation speed for motorized antennas
   64 |     std::chrono::system_clock::time_point timestamp;
   65 |     
   66 |     fgcom_antenna_orientation() : azimuth_deg(0.0f), elevation_deg(0.0f),
      |                                   ~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:60:11: warning: member variable 'azimuth_deg' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:61:11: warning: use default member initializer for 'elevation_deg' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   61 |     float elevation_deg;        // Elevation angle (-90 to +90)
      |           ^            
      |                        {0.0f}
   62 |     bool is_auto_tracking;      // Is auto-tracking enabled?
   63 |     float rotation_speed_deg_per_sec; // Rotation speed for motorized antennas
   64 |     std::chrono::system_clock::time_point timestamp;
   65 |     
   66 |     fgcom_antenna_orientation() : azimuth_deg(0.0f), elevation_deg(0.0f),
      |                                                      ~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:61:11: warning: member variable 'elevation_deg' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:62:10: warning: use default member initializer for 'is_auto_tracking' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   62 |     bool is_auto_tracking;      // Is auto-tracking enabled?
      |          ^               
      |                          {false}
   63 |     float rotation_speed_deg_per_sec; // Rotation speed for motorized antennas
   64 |     std::chrono::system_clock::time_point timestamp;
   65 |     
   66 |     fgcom_antenna_orientation() : azimuth_deg(0.0f), elevation_deg(0.0f),
   67 |                                  is_auto_tracking(false),
      |                                  ~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:62:10: warning: member variable 'is_auto_tracking' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:63:11: warning: use default member initializer for 'rotation_speed_deg_per_sec' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   63 |     float rotation_speed_deg_per_sec; // Rotation speed for motorized antennas
      |           ^                         
      |                                     {0.0f}
   64 |     std::chrono::system_clock::time_point timestamp;
   65 |     
   66 |     fgcom_antenna_orientation() : azimuth_deg(0.0f), elevation_deg(0.0f),
   67 |                                  is_auto_tracking(false),
   68 |                                  rotation_speed_deg_per_sec(0.0f) {
      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:63:11: warning: member variable 'rotation_speed_deg_per_sec' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:64:43: warning: member variable 'timestamp' has public visibility [misc-non-private-member-variables-in-classes]
   64 |     std::chrono::system_clock::time_point timestamp;
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:66:5: warning: 'fgcom_antenna_orientation' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   66 |     fgcom_antenna_orientation() : azimuth_deg(0.0f), elevation_deg(0.0f),
      |     ^
      |     LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:66:47: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   66 |     fgcom_antenna_orientation() : azimuth_deg(0.0f), elevation_deg(0.0f),
      |                                               ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:66:68: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   66 |     fgcom_antenna_orientation() : azimuth_deg(0.0f), elevation_deg(0.0f),
      |                                                                    ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:68:61: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   68 |                                  rotation_speed_deg_per_sec(0.0f) {
      |                                                             ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:69:19: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   69 |         timestamp = std::chrono::system_clock::now();
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:69:21: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   69 |         timestamp = std::chrono::system_clock::now();
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:73:8: warning: accessing fields in struct 'fgcom_vehicle_dynamics' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 128 bytes [altera-struct-pack-align]
   73 | struct fgcom_vehicle_dynamics {
      |        ^
   74 |     fgcom_vehicle_position position;
   75 |     fgcom_vehicle_attitude attitude;
   76 |     fgcom_vehicle_velocity velocity;
   77 |     std::vector<fgcom_antenna_orientation> antennas;
   78 |     std::string vehicle_id;     // Unique vehicle identifier
   79 |     std::string status;         // "active", "inactive", "maintenance"
   80 |     std::chrono::system_clock::time_point last_update;
   81 |     
   82 |     fgcom_vehicle_dynamics() : status("active") {
   83 |         last_update = std::chrono::system_clock::now();
   84 |     }
   85 | };
      |  
      |   __attribute__((aligned(128)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:73:8: note: use "__attribute__((aligned(128)))" to align struct 'fgcom_vehicle_dynamics' to 128 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:74:28: warning: member variable 'position' has public visibility [misc-non-private-member-variables-in-classes]
   74 |     fgcom_vehicle_position position;
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:75:28: warning: member variable 'attitude' has public visibility [misc-non-private-member-variables-in-classes]
   75 |     fgcom_vehicle_attitude attitude;
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:76:28: warning: member variable 'velocity' has public visibility [misc-non-private-member-variables-in-classes]
   76 |     fgcom_vehicle_velocity velocity;
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:77:44: warning: member variable 'antennas' has public visibility [misc-non-private-member-variables-in-classes]
   77 |     std::vector<fgcom_antenna_orientation> antennas;
      |                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:78:17: warning: member variable 'vehicle_id' has public visibility [misc-non-private-member-variables-in-classes]
   78 |     std::string vehicle_id;     // Unique vehicle identifier
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:79:17: warning: member variable 'status' has public visibility [misc-non-private-member-variables-in-classes]
   79 |     std::string status;         // "active", "inactive", "maintenance"
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:80:43: warning: member variable 'last_update' has public visibility [misc-non-private-member-variables-in-classes]
   80 |     std::chrono::system_clock::time_point last_update;
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:82:5: warning: 'fgcom_vehicle_dynamics' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   82 |     fgcom_vehicle_dynamics() : status("active") {
      |     ^
      |     LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:82:32: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   82 |     fgcom_vehicle_dynamics() : status("active") {
      |                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:83:21: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   83 |         last_update = std::chrono::system_clock::now();
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:83:23: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   83 |         last_update = std::chrono::system_clock::now();
      |                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:88:8: warning: accessing fields in struct 'VehicleDynamicsRequest' is inefficient due to padding; only needs 36 bytes but is using 40 bytes [altera-struct-pack-align]
   88 | struct VehicleDynamicsRequest {
      |        ^
   89 |     std::string vehicle_id;
   90 |     bool include_attitude = true;
   91 |     bool include_velocity = true;
   92 |     bool include_antennas = true;
   93 |     bool include_position = true;
   94 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:88:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'VehicleDynamicsRequest'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:88:8: warning: accessing fields in struct 'VehicleDynamicsRequest' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 64 bytes [altera-struct-pack-align]
   88 | struct VehicleDynamicsRequest {
      |        ^
   89 |     std::string vehicle_id;
   90 |     bool include_attitude = true;
   91 |     bool include_velocity = true;
   92 |     bool include_antennas = true;
   93 |     bool include_position = true;
   94 | };
      |  
      |   __attribute__((aligned(64)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:88:8: note: use "__attribute__((aligned(64)))" to align struct 'VehicleDynamicsRequest' to 64 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:96:8: warning: accessing fields in struct 'VehicleDynamicsResponse' is inefficient due to padding; only needs 305 bytes but is using 312 bytes [altera-struct-pack-align]
   96 | struct VehicleDynamicsResponse {
      |        ^
   97 |     bool success;
   98 |     std::string message;
   99 |     fgcom_vehicle_dynamics dynamics;
  100 |     std::chrono::system_clock::time_point timestamp;
  101 |     
  102 |     VehicleDynamicsResponse() : success(false) {
  103 |         timestamp = std::chrono::system_clock::now();
  104 |     }
  105 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:96:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'VehicleDynamicsResponse'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:96:8: warning: accessing fields in struct 'VehicleDynamicsResponse' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 128 bytes [altera-struct-pack-align]
   96 | struct VehicleDynamicsResponse {
      |        ^
   97 |     bool success;
   98 |     std::string message;
   99 |     fgcom_vehicle_dynamics dynamics;
  100 |     std::chrono::system_clock::time_point timestamp;
  101 |     
  102 |     VehicleDynamicsResponse() : success(false) {
  103 |         timestamp = std::chrono::system_clock::now();
  104 |     }
  105 | };
      |  
      |   __attribute__((aligned(128)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:96:8: note: use "__attribute__((aligned(128)))" to align struct 'VehicleDynamicsResponse' to 128 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:97:10: warning: use default member initializer for 'success' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   97 |     bool success;
      |          ^      
      |                 {false}
   98 |     std::string message;
   99 |     fgcom_vehicle_dynamics dynamics;
  100 |     std::chrono::system_clock::time_point timestamp;
  101 |     
  102 |     VehicleDynamicsResponse() : success(false) {
      |                                 ~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:97:10: warning: member variable 'success' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:98:17: warning: member variable 'message' has public visibility [misc-non-private-member-variables-in-classes]
   98 |     std::string message;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:99:28: warning: member variable 'dynamics' has public visibility [misc-non-private-member-variables-in-classes]
   99 |     fgcom_vehicle_dynamics dynamics;
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:100:43: warning: member variable 'timestamp' has public visibility [misc-non-private-member-variables-in-classes]
  100 |     std::chrono::system_clock::time_point timestamp;
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:102:5: warning: 'VehicleDynamicsResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  102 |     VehicleDynamicsResponse() : success(false) {
      |     ^
      |     LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:103:19: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  103 |         timestamp = std::chrono::system_clock::now();
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:103:21: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  103 |         timestamp = std::chrono::system_clock::now();
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:107:8: warning: accessing fields in struct 'AntennaRotationRequest' is inefficient due to padding; only needs 105 bytes but is using 112 bytes [altera-struct-pack-align]
  107 | struct AntennaRotationRequest {
      |        ^
  108 |     std::string vehicle_id;
  109 |     std::string antenna_id;
  110 |     float target_azimuth_deg;
  111 |     float target_elevation_deg;
  112 |     bool immediate = false;     // If false, use rotation speed
  113 |     std::string rotation_mode = "absolute"; // "absolute" or "relative"
  114 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:107:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'AntennaRotationRequest'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:107:8: warning: accessing fields in struct 'AntennaRotationRequest' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 128 bytes [altera-struct-pack-align]
  107 | struct AntennaRotationRequest {
      |        ^
  108 |     std::string vehicle_id;
  109 |     std::string antenna_id;
  110 |     float target_azimuth_deg;
  111 |     float target_elevation_deg;
  112 |     bool immediate = false;     // If false, use rotation speed
  113 |     std::string rotation_mode = "absolute"; // "absolute" or "relative"
  114 | };
      |  
      |   __attribute__((aligned(128)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:107:8: note: use "__attribute__((aligned(128)))" to align struct 'AntennaRotationRequest' to 128 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:113:33: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  113 |     std::string rotation_mode = "absolute"; // "absolute" or "relative"
      |                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:116:8: warning: accessing fields in struct 'AntennaRotationResponse' is inefficient due to padding; only needs 133 bytes but is using 144 bytes [altera-struct-pack-align]
  116 | struct AntennaRotationResponse {
      |        ^
  117 |     bool success;
  118 |     std::string message;
  119 |     fgcom_antenna_orientation current_orientation;
  120 |     float estimated_arrival_time_sec;
  121 |     std::chrono::system_clock::time_point timestamp;
  122 |     
  123 |     AntennaRotationResponse() : success(false), estimated_arrival_time_sec(0.0f) {
  124 |         timestamp = std::chrono::system_clock::now();
  125 |     }
  126 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:116:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'AntennaRotationResponse'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:116:8: warning: accessing fields in struct 'AntennaRotationResponse' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 128 bytes [altera-struct-pack-align]
  116 | struct AntennaRotationResponse {
      |        ^
  117 |     bool success;
  118 |     std::string message;
  119 |     fgcom_antenna_orientation current_orientation;
  120 |     float estimated_arrival_time_sec;
  121 |     std::chrono::system_clock::time_point timestamp;
  122 |     
  123 |     AntennaRotationResponse() : success(false), estimated_arrival_time_sec(0.0f) {
  124 |         timestamp = std::chrono::system_clock::now();
  125 |     }
  126 | };
      |  
      |   __attribute__((aligned(128)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:116:8: note: use "__attribute__((aligned(128)))" to align struct 'AntennaRotationResponse' to 128 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:117:10: warning: use default member initializer for 'success' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  117 |     bool success;
      |          ^      
      |                 {false}
  118 |     std::string message;
  119 |     fgcom_antenna_orientation current_orientation;
  120 |     float estimated_arrival_time_sec;
  121 |     std::chrono::system_clock::time_point timestamp;
  122 |     
  123 |     AntennaRotationResponse() : success(false), estimated_arrival_time_sec(0.0f) {
      |                                 ~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:117:10: warning: member variable 'success' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:118:17: warning: member variable 'message' has public visibility [misc-non-private-member-variables-in-classes]
  118 |     std::string message;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:119:31: warning: member variable 'current_orientation' has public visibility [misc-non-private-member-variables-in-classes]
  119 |     fgcom_antenna_orientation current_orientation;
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:120:11: warning: use default member initializer for 'estimated_arrival_time_sec' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  120 |     float estimated_arrival_time_sec;
      |           ^                         
      |                                     {0.0f}
  121 |     std::chrono::system_clock::time_point timestamp;
  122 |     
  123 |     AntennaRotationResponse() : success(false), estimated_arrival_time_sec(0.0f) {
      |                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:120:11: warning: member variable 'estimated_arrival_time_sec' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:121:43: warning: member variable 'timestamp' has public visibility [misc-non-private-member-variables-in-classes]
  121 |     std::chrono::system_clock::time_point timestamp;
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:123:5: warning: 'AntennaRotationResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  123 |     AntennaRotationResponse() : success(false), estimated_arrival_time_sec(0.0f) {
      |     ^
      |     LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:123:76: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  123 |     AntennaRotationResponse() : success(false), estimated_arrival_time_sec(0.0f) {
      |                                                                            ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:124:19: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  124 |         timestamp = std::chrono::system_clock::now();
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:124:21: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  124 |         timestamp = std::chrono::system_clock::now();
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:128:8: warning: accessing fields in struct 'VehicleListResponse' is inefficient due to padding; only needs 161 bytes but is using 168 bytes [altera-struct-pack-align]
  128 | struct VehicleListResponse {
      |        ^
  129 |     bool success;
  130 |     std::string message;
  131 |     std::vector<std::string> vehicle_ids;
  132 |     std::map<std::string, std::string> vehicle_types;
  133 |     std::map<std::string, std::string> vehicle_status;
  134 |     std::chrono::system_clock::time_point timestamp;
  135 |     
  136 |     VehicleListResponse() : success(false) {
  137 |         timestamp = std::chrono::system_clock::now();
  138 |     }
  139 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:128:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'VehicleListResponse'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:128:8: warning: accessing fields in struct 'VehicleListResponse' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 128 bytes [altera-struct-pack-align]
  128 | struct VehicleListResponse {
      |        ^
  129 |     bool success;
  130 |     std::string message;
  131 |     std::vector<std::string> vehicle_ids;
  132 |     std::map<std::string, std::string> vehicle_types;
  133 |     std::map<std::string, std::string> vehicle_status;
  134 |     std::chrono::system_clock::time_point timestamp;
  135 |     
  136 |     VehicleListResponse() : success(false) {
  137 |         timestamp = std::chrono::system_clock::now();
  138 |     }
  139 | };
      |  
      |   __attribute__((aligned(128)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:128:8: note: use "__attribute__((aligned(128)))" to align struct 'VehicleListResponse' to 128 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:129:10: warning: use default member initializer for 'success' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  129 |     bool success;
      |          ^      
      |                 {false}
  130 |     std::string message;
  131 |     std::vector<std::string> vehicle_ids;
  132 |     std::map<std::string, std::string> vehicle_types;
  133 |     std::map<std::string, std::string> vehicle_status;
  134 |     std::chrono::system_clock::time_point timestamp;
  135 |     
  136 |     VehicleListResponse() : success(false) {
      |                             ~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:129:10: warning: member variable 'success' has public visibility [misc-non-private-member-variables-in-classes]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:130:17: warning: member variable 'message' has public visibility [misc-non-private-member-variables-in-classes]
  130 |     std::string message;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:131:30: warning: member variable 'vehicle_ids' has public visibility [misc-non-private-member-variables-in-classes]
  131 |     std::vector<std::string> vehicle_ids;
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:132:40: warning: member variable 'vehicle_types' has public visibility [misc-non-private-member-variables-in-classes]
  132 |     std::map<std::string, std::string> vehicle_types;
      |                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:133:40: warning: member variable 'vehicle_status' has public visibility [misc-non-private-member-variables-in-classes]
  133 |     std::map<std::string, std::string> vehicle_status;
      |                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:134:43: warning: member variable 'timestamp' has public visibility [misc-non-private-member-variables-in-classes]
  134 |     std::chrono::system_clock::time_point timestamp;
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:136:5: warning: 'VehicleListResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  136 |     VehicleListResponse() : success(false) {
      |     ^
      |     LIBC_INLINE 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:137:19: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  137 |         timestamp = std::chrono::system_clock::now();
      |                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:137:21: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  137 |         timestamp = std::chrono::system_clock::now();
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:142:7: warning: class 'FGCom_VehicleDynamicsManager' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
  142 | class FGCom_VehicleDynamicsManager {
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:147:10: warning: use default member initializer for 'auto_cleanup_enabled' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  147 |     bool auto_cleanup_enabled;
      |          ^                   
      |                              {true}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:148:9: warning: use default member initializer for 'cleanup_interval_seconds' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  148 |     int cleanup_interval_seconds;
      |         ^                       
      |                                 {300}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:151:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  151 |     float calculateMagneticDeclination(double lat, double lon);
      |     ~~~~~ ^                                                   
      |     auto                                                       -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:158:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  158 |     float normalizeAngle(float angle_deg);
      |     ~~~~~ ^                              
      |     auto                                  -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:159:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  159 |     float calculateDistance(double lat1, double lon1, double lat2, double lon2);
      |     ~~~~~ ^                                                                    
      |     auto                                                                        -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:160:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  160 |     float calculateBearing(double lat1, double lon1, double lat2, double lon2);
      |     ~~~~~ ^                                                                   
      |     auto                                                                       -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:167:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  167 |     bool registerVehicle(const std::string& vehicle_id, const std::string& vehicle_type);
      |     ~~~~ ^                                                                              
      |     auto                                                                                 -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:168:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  168 |     bool unregisterVehicle(const std::string& vehicle_id);
      |     ~~~~ ^                                               
      |     auto                                                  -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:169:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  169 |     bool updateVehiclePosition(const std::string& vehicle_id, const fgcom_vehicle_position& position);
      |     ~~~~ ^                                                                                           
      |     auto                                                                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:170:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  170 |     bool updateVehicleAttitude(const std::string& vehicle_id, const fgcom_vehicle_attitude& attitude);
      |     ~~~~ ^                                                                                           
      |     auto                                                                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:171:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  171 |     bool updateVehicleVelocity(const std::string& vehicle_id, const fgcom_vehicle_velocity& velocity);
      |     ~~~~ ^                                                                                           
      |     auto                                                                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:172:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  172 |     bool updateVehicleDynamics(const std::string& vehicle_id, const fgcom_vehicle_dynamics& dynamics);
      |     ~~~~ ^                                                                                           
      |     auto                                                                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:175:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  175 |     bool addAntenna(const std::string& vehicle_id, const fgcom_antenna_orientation& antenna);
      |     ~~~~ ^                                                                                  
      |     auto                                                                                     -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:176:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  176 |     bool removeAntenna(const std::string& vehicle_id, const std::string& antenna_id);
      |     ~~~~ ^                                                                          
      |     auto                                                                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:177:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  177 |     bool updateAntennaOrientation(const std::string& vehicle_id, const std::string& antenna_id,
      |     ~~~~ ^
      |     auto
  178 |                                  const fgcom_antenna_orientation& orientation);
      |                                                                               
      |                                                                                -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:179:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  179 |     bool rotateAntenna(const std::string& vehicle_id, const std::string& antenna_id,
      |     ~~~~ ^
      |     auto
  180 |                       float target_azimuth, float target_elevation, bool immediate = false);
      |                                                                                            
      |                                                                                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:180:69: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  180 |                       float target_azimuth, float target_elevation, bool immediate = false);
      |                                                                     ^              ~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:183:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  183 |     VehicleDynamicsResponse getVehicleDynamics(const std::string& vehicle_id);
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^                                                
      |     auto                                                                      -> VehicleDynamicsResponse
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:184:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  184 |     VehicleListResponse getAllVehicles();
      |     ~~~~~~~~~~~~~~~~~~~ ^               
      |     auto                                 -> VehicleListResponse
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:185:44: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  185 |     std::vector<fgcom_antenna_orientation> getVehicleAntennas(const std::string& vehicle_id);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^                                                
      |     auto                                                                                     -> std::vector<fgcom_antenna_orientation>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:186:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  186 |     fgcom_vehicle_position getVehiclePosition(const std::string& vehicle_id);
      |     ~~~~~~~~~~~~~~~~~~~~~~ ^                                                
      |     auto                                                                     -> fgcom_vehicle_position
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:187:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  187 |     fgcom_vehicle_attitude getVehicleAttitude(const std::string& vehicle_id);
      |     ~~~~~~~~~~~~~~~~~~~~~~ ^                                                
      |     auto                                                                     -> fgcom_vehicle_attitude
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:188:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  188 |     fgcom_vehicle_velocity getVehicleVelocity(const std::string& vehicle_id);
      |     ~~~~~~~~~~~~~~~~~~~~~~ ^                                                
      |     auto                                                                     -> fgcom_vehicle_velocity
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:191:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  191 |     AntennaRotationResponse calculateAntennaRotation(const AntennaRotationRequest& request);
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^                                                              
      |     auto                                                                                    -> AntennaRotationResponse
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:192:30: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  192 |     std::vector<std::string> getVehiclesInRange(double center_lat, double center_lon, float radius_km);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~ ^                                                                        
      |     auto                                                                                               -> std::vector<std::string>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:193:30: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  193 |     std::vector<std::string> getVehiclesByType(const std::string& vehicle_type);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~ ^                                                 
      |     auto                                                                        -> std::vector<std::string>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:196:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  196 |     bool enableAutoTracking(const std::string& vehicle_id, const std::string& antenna_id,
      |     ~~~~ ^
      |     auto
  197 |                            const std::string& target_vehicle_id);
      |                                                                 
      |                                                                  -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:198:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  198 |     bool disableAutoTracking(const std::string& vehicle_id, const std::string& antenna_id);
      |     ~~~~ ^                                                                                
      |     auto                                                                                   -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:199:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  199 |     bool updateAutoTracking();
      |     ~~~~ ^                   
      |     auto                      -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:203:39: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  203 |     void setAutoCleanup(bool enabled, int interval_seconds = 300);
      |                                       ^                    ~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:203:62: warning: 300 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  203 |     void setAutoCleanup(bool enabled, int interval_seconds = 300);
      |                                                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:204:40: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  204 |     std::map<std::string, std::string> getSystemStatus();
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^                
      |     auto                                                 -> std::map<std::string, std::string>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:213:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  213 |     std::string getVehicleModulationMode(const std::string& vehicle_id);
      |     ~~~~~~~~~~~ ^                                                      
      |     auto                                                                -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:214:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  214 |     bool validateModulationMode(const std::string& mode);
      |     ~~~~ ^                                              
      |     auto                                                 -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:215:30: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  215 |     std::vector<std::string> getSupportedModulationModes();
      |     ~~~~~~~~~~~~~~~~~~~~~~~~ ^                            
      |     auto                                                   -> std::vector<std::string>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:219:54: warning: variable 'g_vehicle_dynamics_manager' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  219 | extern std::unique_ptr<FGCom_VehicleDynamicsManager> g_vehicle_dynamics_manager;
      |                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:222:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  222 | bool initializeVehicleDynamicsManager();
      | ~~~~ ^                                 
      | auto                                    -> bool
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/locale_facets_nonio.h:59:39: error: use of undeclared identifier 'locale'; did you mean '::std::locale'? [clang-diagnostic-error]
   59 |     struct __timepunct_cache : public locale::facet
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/locale_classes.h:62:9: note: '::std::locale' declared here
   62 |   class locale
      |         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/predefined_ops.h:318:16: warning: 'operator()' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  318 |         { return bool(_M_pred(*__it)); }
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:148:35: note: resolves to this declaration
  148 |                                   [&antenna_id](const fgcom_antenna_orientation& antenna) {
      |                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algobase.h:388:18: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  388 |               *__result = *__first;
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:39:8: note: resolves to this declaration
   39 | struct fgcom_radio {
      |        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algobase.h:413:18: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  413 |               *__result = std::move(*__first);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:57:8: note: resolves to this declaration
   57 | struct fgcom_antenna_orientation {
      |        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iostream:62:10: error: unknown type name 'istream'; did you mean '::std::istream'? [clang-diagnostic-error]
   62 |   extern istream cin;           ///< Linked to standard input
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iosfwd:140:33: note: '::std::istream' declared here
  140 |   typedef basic_istream<char>           istream;
      |                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iostream:63:10: error: unknown type name 'ostream'; did you mean '::std::ostream'? [clang-diagnostic-error]
   63 |   extern ostream cout;          ///< Linked to standard output
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iosfwd:143:33: note: '::std::ostream' declared here
  143 |   typedef basic_ostream<char>           ostream;
      |                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iostream:64:10: error: unknown type name 'ostream'; did you mean '::std::ostream'? [clang-diagnostic-error]
   64 |   extern ostream cerr;          ///< Linked to standard error (unbuffered)
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iosfwd:143:33: note: '::std::ostream' declared here
  143 |   typedef basic_ostream<char>           ostream;
      |                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iostream:65:10: error: unknown type name 'ostream'; did you mean '::std::ostream'? [clang-diagnostic-error]
   65 |   extern ostream clog;          ///< Linked to standard error (buffered)
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iosfwd:143:33: note: '::std::ostream' declared here
  143 |   typedef basic_ostream<char>           ostream;
      |                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iostream:68:10: error: unknown type name 'wistream'; did you mean '::std::wistream'? [clang-diagnostic-error]
   68 |   extern wistream wcin;         ///< Linked to standard input
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iosfwd:180:35: note: '::std::wistream' declared here
  180 |   typedef basic_istream<wchar_t>        wistream;
      |                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iostream:69:10: error: unknown type name 'wostream'; did you mean '::std::wostream'? [clang-diagnostic-error]
   69 |   extern wostream wcout;        ///< Linked to standard output
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iosfwd:183:35: note: '::std::wostream' declared here
  183 |   typedef basic_ostream<wchar_t>        wostream;
      |                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iostream:70:10: error: unknown type name 'wostream'; did you mean '::std::wostream'? [clang-diagnostic-error]
   70 |   extern wostream wcerr;        ///< Linked to standard error (unbuffered)
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iosfwd:183:35: note: '::std::wostream' declared here
  183 |   typedef basic_ostream<wchar_t>        wostream;
      |                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iostream:71:10: error: unknown type name 'wostream'; did you mean '::std::wostream'? [clang-diagnostic-error]
   71 |   extern wostream wclog;        ///< Linked to standard error (buffered)
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/iosfwd:183:35: note: '::std::wostream' declared here
  183 |   typedef basic_ostream<wchar_t>        wostream;
      |                                         ^
