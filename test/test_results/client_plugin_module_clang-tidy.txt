/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:23:11: warning: use default member initializer for 'b0' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   23 |     float b0, b1, b2, a1, a2;
      |           ^ 
      |             {1.0f}
   24 |     float x1, x2, y1, y2;
   25 |     
   26 | public:
   27 |     SimpleBiquadFilter() : b0(1.0f), b1(0.0f), b2(0.0f), a1(0.0f), a2(0.0f),
      |                            ~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:23:15: warning: use default member initializer for 'b1' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   23 |     float b0, b1, b2, a1, a2;
      |               ^ 
      |                 {0.0f}
   24 |     float x1, x2, y1, y2;
   25 |     
   26 | public:
   27 |     SimpleBiquadFilter() : b0(1.0f), b1(0.0f), b2(0.0f), a1(0.0f), a2(0.0f),
      |                                      ~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:23:19: warning: use default member initializer for 'b2' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   23 |     float b0, b1, b2, a1, a2;
      |                   ^ 
      |                     {0.0f}
   24 |     float x1, x2, y1, y2;
   25 |     
   26 | public:
   27 |     SimpleBiquadFilter() : b0(1.0f), b1(0.0f), b2(0.0f), a1(0.0f), a2(0.0f),
      |                                                ~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:23:23: warning: use default member initializer for 'a1' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   23 |     float b0, b1, b2, a1, a2;
      |                       ^ 
      |                         {0.0f}
   24 |     float x1, x2, y1, y2;
   25 |     
   26 | public:
   27 |     SimpleBiquadFilter() : b0(1.0f), b1(0.0f), b2(0.0f), a1(0.0f), a2(0.0f),
      |                                                          ~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:23:27: warning: use default member initializer for 'a2' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   23 |     float b0, b1, b2, a1, a2;
      |                           ^ 
      |                             {0.0f}
   24 |     float x1, x2, y1, y2;
   25 |     
   26 | public:
   27 |     SimpleBiquadFilter() : b0(1.0f), b1(0.0f), b2(0.0f), a1(0.0f), a2(0.0f),
      |                                                                    ~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:24:11: warning: use default member initializer for 'x1' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   24 |     float x1, x2, y1, y2;
      |           ^ 
      |             {0.0f}
   25 |     
   26 | public:
   27 |     SimpleBiquadFilter() : b0(1.0f), b1(0.0f), b2(0.0f), a1(0.0f), a2(0.0f),
   28 |                            x1(0.0f), x2(0.0f), y1(0.0f), y2(0.0f) {}
      |                            ~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:24:15: warning: use default member initializer for 'x2' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   24 |     float x1, x2, y1, y2;
      |               ^ 
      |                 {0.0f}
   25 |     
   26 | public:
   27 |     SimpleBiquadFilter() : b0(1.0f), b1(0.0f), b2(0.0f), a1(0.0f), a2(0.0f),
   28 |                            x1(0.0f), x2(0.0f), y1(0.0f), y2(0.0f) {}
      |                                      ~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:24:19: warning: use default member initializer for 'y1' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   24 |     float x1, x2, y1, y2;
      |                   ^ 
      |                     {0.0f}
   25 |     
   26 | public:
   27 |     SimpleBiquadFilter() : b0(1.0f), b1(0.0f), b2(0.0f), a1(0.0f), a2(0.0f),
   28 |                            x1(0.0f), x2(0.0f), y1(0.0f), y2(0.0f) {}
      |                                                ~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:24:23: warning: use default member initializer for 'y2' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   24 |     float x1, x2, y1, y2;
      |                       ^ 
      |                         {0.0f}
   25 |     
   26 | public:
   27 |     SimpleBiquadFilter() : b0(1.0f), b1(0.0f), b2(0.0f), a1(0.0f), a2(0.0f),
   28 |                            x1(0.0f), x2(0.0f), y1(0.0f), y2(0.0f) {}
      |                                                          ~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:27:31: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   27 |     SimpleBiquadFilter() : b0(1.0f), b1(0.0f), b2(0.0f), a1(0.0f), a2(0.0f),
      |                               ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:27:41: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   27 |     SimpleBiquadFilter() : b0(1.0f), b1(0.0f), b2(0.0f), a1(0.0f), a2(0.0f),
      |                                         ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:27:51: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   27 |     SimpleBiquadFilter() : b0(1.0f), b1(0.0f), b2(0.0f), a1(0.0f), a2(0.0f),
      |                                                   ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:27:61: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   27 |     SimpleBiquadFilter() : b0(1.0f), b1(0.0f), b2(0.0f), a1(0.0f), a2(0.0f),
      |                                                             ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:27:71: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   27 |     SimpleBiquadFilter() : b0(1.0f), b1(0.0f), b2(0.0f), a1(0.0f), a2(0.0f),
      |                                                                       ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:28:31: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   28 |                            x1(0.0f), x2(0.0f), y1(0.0f), y2(0.0f) {}
      |                               ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:28:41: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   28 |                            x1(0.0f), x2(0.0f), y1(0.0f), y2(0.0f) {}
      |                                         ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:28:51: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   28 |                            x1(0.0f), x2(0.0f), y1(0.0f), y2(0.0f) {}
      |                                                   ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:28:61: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   28 |                            x1(0.0f), x2(0.0f), y1(0.0f), y2(0.0f) {}
      |                                                             ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:31:15: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
   31 |         float w = 2.0f * M_PI * cutoff / sampleRate;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:31:19: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   31 |         float w = 2.0f * M_PI * cutoff / sampleRate;
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:31:19: warning: narrowing conversion from 'double' to 'float' [cppcoreguidelines-narrowing-conversions]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:31:19: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   31 |         float w = 2.0f * M_PI * cutoff / sampleRate;
      |                   ^  ~
      |                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:34:31: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   34 |         float alpha = sinw / (2.0f * 0.707f); // Q = 0.707
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:34:31: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   34 |         float alpha = sinw / (2.0f * 0.707f); // Q = 0.707
      |                               ^  ~
      |                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:34:38: warning: 0.707f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   34 |         float alpha = sinw / (2.0f * 0.707f); // Q = 0.707
      |                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:34:38: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   34 |         float alpha = sinw / (2.0f * 0.707f); // Q = 0.707
      |                                      ^    ~
      |                                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:36:15: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   36 |         b0 = (1.0f - cosw) / 2.0f;
      |               ^  ~
      |                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:36:30: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   36 |         b0 = (1.0f - cosw) / 2.0f;
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:36:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   36 |         b0 = (1.0f - cosw) / 2.0f;
      |                              ^  ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:37:14: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   37 |         b1 = 1.0f - cosw;
      |              ^  ~
      |                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:38:15: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   38 |         b2 = (1.0f - cosw) / 2.0f;
      |               ^  ~
      |                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:38:30: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   38 |         b2 = (1.0f - cosw) / 2.0f;
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:38:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   38 |         b2 = (1.0f - cosw) / 2.0f;
      |                              ^  ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:39:15: warning: variable name 'a0' is too short, expected at least 3 characters [readability-identifier-length]
   39 |         float a0 = 1.0f + alpha;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:39:20: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   39 |         float a0 = 1.0f + alpha;
      |                    ^  ~
      |                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:40:15: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   40 |         a1 = -2.0f * cosw / a0;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:40:15: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   40 |         a1 = -2.0f * cosw / a0;
      |               ^  ~
      |                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:41:15: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   41 |         a2 = (1.0f - alpha) / a0;
      |               ^  ~
      |                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:48:15: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
   48 |         float w = 2.0f * M_PI * cutoff / sampleRate;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:48:19: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   48 |         float w = 2.0f * M_PI * cutoff / sampleRate;
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:48:19: warning: narrowing conversion from 'double' to 'float' [cppcoreguidelines-narrowing-conversions]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:48:19: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   48 |         float w = 2.0f * M_PI * cutoff / sampleRate;
      |                   ^  ~
      |                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:51:31: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   51 |         float alpha = sinw / (2.0f * 0.707f);
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:51:31: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   51 |         float alpha = sinw / (2.0f * 0.707f);
      |                               ^  ~
      |                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:51:38: warning: 0.707f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   51 |         float alpha = sinw / (2.0f * 0.707f);
      |                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:51:38: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   51 |         float alpha = sinw / (2.0f * 0.707f);
      |                                      ^    ~
      |                                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:53:15: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   53 |         b0 = (1.0f + cosw) / 2.0f;
      |               ^  ~
      |                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:53:30: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   53 |         b0 = (1.0f + cosw) / 2.0f;
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:53:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   53 |         b0 = (1.0f + cosw) / 2.0f;
      |                              ^  ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:54:16: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   54 |         b1 = -(1.0f + cosw);
      |                ^  ~
      |                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:55:15: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   55 |         b2 = (1.0f + cosw) / 2.0f;
      |               ^  ~
      |                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:55:30: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   55 |         b2 = (1.0f + cosw) / 2.0f;
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:55:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   55 |         b2 = (1.0f + cosw) / 2.0f;
      |                              ^  ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:56:15: warning: variable name 'a0' is too short, expected at least 3 characters [readability-identifier-length]
   56 |         float a0 = 1.0f + alpha;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:56:20: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   56 |         float a0 = 1.0f + alpha;
      |                    ^  ~
      |                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:57:15: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   57 |         a1 = -2.0f * cosw / a0;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:57:15: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   57 |         a1 = -2.0f * cosw / a0;
      |               ^  ~
      |                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:58:15: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   58 |         a2 = (1.0f - alpha) / a0;
      |               ^  ~
      |                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:63:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   63 |     float process(float input) {
      |     ~~~~~ ^
      |     auto                       -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:76:27: warning: variable 'lowpassFilter' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   76 | static SimpleBiquadFilter lowpassFilter;
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:77:27: warning: variable 'highpassFilter' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   77 | static SimpleBiquadFilter highpassFilter;
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:78:13: warning: variable 'filtersInitialized' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   78 | static bool filtersInitialized = false;
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:83:34: warning: 3000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   83 |         lowpassFilter.setLowpass(3000.0f, 48000.0f);  // 3kHz lowpass
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:83:34: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   83 |         lowpassFilter.setLowpass(3000.0f, 48000.0f);  // 3kHz lowpass
      |                                  ^     ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:83:43: warning: 48000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   83 |         lowpassFilter.setLowpass(3000.0f, 48000.0f);  // 3kHz lowpass
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:83:43: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   83 |         lowpassFilter.setLowpass(3000.0f, 48000.0f);  // 3kHz lowpass
      |                                           ^      ~
      |                                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:84:36: warning: 300.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   84 |         highpassFilter.setHighpass(300.0f, 48000.0f); // 300Hz highpass
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:84:36: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   84 |         highpassFilter.setHighpass(300.0f, 48000.0f); // 300Hz highpass
      |                                    ^    ~
      |                                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:84:44: warning: 48000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   84 |         highpassFilter.setHighpass(300.0f, 48000.0f); // 300Hz highpass
      |                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:84:44: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   84 |         highpassFilter.setHighpass(300.0f, 48000.0f); // 300Hz highpass
      |                                            ^      ~
      |                                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:93:31: warning: statement should be inside braces [readability-braces-around-statements]
   93 |         if (channelCount <= 1) return;
      |                               ^       
      |                                {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:97:25: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   97 |             float sum = 0.0f;
      |                         ^  ~
      |                            F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:99:24: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   99 |                 sum += outputPCM[i * channelCount + ch];
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:101:13: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  101 |             outputPCM[i] = sum / channelCount;
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:101:34: warning: narrowing conversion from 'int' to 'float' [cppcoreguidelines-narrowing-conversions]
  101 |             outputPCM[i] = sum / channelCount;
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:110:28: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  110 |             float sample = outputPCM[i];
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:122:13: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  122 |             outputPCM[i] = sample;
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:128:27: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  128 |         volume = std::max(0.0f, std::min(2.0f, volume));
      |                           ^  ~
      |                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:128:42: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  128 |         volume = std::max(0.0f, std::min(2.0f, volume));
      |                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:128:42: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  128 |         volume = std::max(0.0f, std::min(2.0f, volume));
      |                                          ^  ~
      |                                             F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:131:13: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  131 |             outputPCM[i] *= volume;
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:136:35: warning: variable name 'rd' is too short, expected at least 3 characters [readability-identifier-length]
  136 |         static std::random_device rd;
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:138:59: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  138 |         static std::uniform_real_distribution<float> dis(-1.0f, 1.0f);
      |                                                           ^  ~
      |                                                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:138:65: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  138 |         static std::uniform_real_distribution<float> dis(-1.0f, 1.0f);
      |                                                                 ^  ~
      |                                                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:141:32: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  141 |         noiseVolume = std::max(0.0f, std::min(1.0f, noiseVolume));
      |                                ^  ~
      |                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:141:47: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  141 |         noiseVolume = std::max(0.0f, std::min(1.0f, noiseVolume));
      |                                               ^  ~
      |                                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:144:13: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  144 |             outputPCM[i] += dis(gen) * noiseVolume;
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:150:39: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  150 |         dropoutProbability = std::max(0.0f, std::min(1.0f, dropoutProbability));
      |                                       ^  ~
      |                                          F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:150:54: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  150 |         dropoutProbability = std::max(0.0f, std::min(1.0f, dropoutProbability));
      |                                                      ^  ~
      |                                                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:155:28: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  155 |             float sample = outputPCM[i];
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:156:38: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  156 |             if (dropoutProbability > 0.0f) {
      |                                      ^  ~
      |                                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:158:66: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  158 |                 sample += sample * sample * dropoutProbability * 0.1f;
      |                                                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:158:66: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  158 |                 sample += sample * sample * dropoutProbability * 0.1f;
      |                                                                  ^  ~
      |                                                                     F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:160:28: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  160 |                 sample *= (1.0f - dropoutProbability * 0.2f);
      |                            ^  ~
      |                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:160:56: warning: 0.2f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  160 |                 sample *= (1.0f - dropoutProbability * 0.2f);
      |                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:160:56: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  160 |                 sample *= (1.0f - dropoutProbability * 0.2f);
      |                                                        ^  ~
      |                                                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_modern.cpp:162:13: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  162 |             outputPCM[i] = sample;
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:21:49: warning: variable 'g_audioProcessor' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   21 | static std::unique_ptr<ProfessionalAudioEngine> g_audioProcessor;
      |                                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:22:43: warning: variable 'g_vhfProcessor' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   22 | static std::unique_ptr<VHFAudioProcessor> g_vhfProcessor;
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:23:42: warning: variable 'g_hfProcessor' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   23 | static std::unique_ptr<HFAudioProcessor> g_hfProcessor;
      |                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:24:47: warning: variable 'g_amateurProcessor' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   24 | static std::unique_ptr<AmateurRadioProcessor> g_amateurProcessor;
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:25:46: warning: variable 'g_webrtcProcessor' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   25 | static std::unique_ptr<WebRTCAudioProcessor> g_webrtcProcessor;
      |                                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:26:44: warning: variable 'g_sovietProcessor' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   26 | static std::unique_ptr<SovietVHFProcessor> g_sovietProcessor;
      |                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:48:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   48 | float IIR1Filter::process(float input) {
      | ~~~~~             ^
      | auto                                   -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:56:15: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   56 |     x1 = y1 = 0.0f;
      |               ^  ~
      |                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:60:19: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   60 |     float omega = 2.0f * M_PI * cutoff / sampleRate;
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:60:19: warning: narrowing conversion from 'double' to 'float' [cppcoreguidelines-narrowing-conversions]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:60:19: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   60 |     float omega = 2.0f * M_PI * cutoff / sampleRate;
      |                   ^  ~
      |                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:63:11: warning: Value stored to 'alpha' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   63 |     float alpha = sinw / (2.0f * 0.707f); // Q = 0.707 for Butterworth response
      |           ^~~~~   ~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:63:11: note: Value stored to 'alpha' during its initialization is never read
   63 |     float alpha = sinw / (2.0f * 0.707f); // Q = 0.707 for Butterworth response
      |           ^~~~~   ~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:63:27: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   63 |     float alpha = sinw / (2.0f * 0.707f); // Q = 0.707 for Butterworth response
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:63:27: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   63 |     float alpha = sinw / (2.0f * 0.707f); // Q = 0.707 for Butterworth response
      |                           ^  ~
      |                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:63:34: warning: 0.707f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   63 |     float alpha = sinw / (2.0f * 0.707f); // Q = 0.707 for Butterworth response
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:63:34: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   63 |     float alpha = sinw / (2.0f * 0.707f); // Q = 0.707 for Butterworth response
      |                                  ^    ~
      |                                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:67:15: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   67 |         a0 = (1.0f + cosw) / 2.0f;
      |               ^  ~
      |                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:67:30: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   67 |         a0 = (1.0f + cosw) / 2.0f;
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:67:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   67 |         a0 = (1.0f + cosw) / 2.0f;
      |                              ^  ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:68:16: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   68 |         a1 = -(1.0f + cosw);
      |                ^  ~
      |                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:72:15: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   72 |         a0 = (1.0f - cosw) / 2.0f;
      |               ^  ~
      |                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:72:30: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   72 |         a0 = (1.0f - cosw) / 2.0f;
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:72:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   72 |         a0 = (1.0f - cosw) / 2.0f;
      |                              ^  ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:73:14: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   73 |         a1 = 1.0f - cosw;
      |              ^  ~
      |                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:81:69: warning: parameter name 'Q' is too short, expected at least 3 characters [readability-identifier-length]
   81 | void BiquadFilter::setLowPass(float cutoff, float sampleRate, float Q) {
      |                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:82:11: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
   82 |     float w = 2.0f * M_PI * cutoff / sampleRate;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:82:15: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   82 |     float w = 2.0f * M_PI * cutoff / sampleRate;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:82:15: warning: narrowing conversion from 'double' to 'float' [cppcoreguidelines-narrowing-conversions]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:82:15: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   82 |     float w = 2.0f * M_PI * cutoff / sampleRate;
      |               ^  ~
      |                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:85:27: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   85 |     float alpha = sinw / (2.0f * Q);
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:85:27: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   85 |     float alpha = sinw / (2.0f * Q);
      |                           ^  ~
      |                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:87:11: warning: variable name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
   87 |     float b0 = (1.0f - cosw) / 2.0f;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:87:17: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   87 |     float b0 = (1.0f - cosw) / 2.0f;
      |                 ^  ~
      |                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:87:32: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   87 |     float b0 = (1.0f - cosw) / 2.0f;
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:87:32: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   87 |     float b0 = (1.0f - cosw) / 2.0f;
      |                                ^  ~
      |                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:88:11: warning: variable name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
   88 |     float b1 = 1.0f - cosw;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:88:16: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   88 |     float b1 = 1.0f - cosw;
      |                ^  ~
      |                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:89:11: warning: variable name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
   89 |     float b2 = (1.0f - cosw) / 2.0f;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:89:17: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   89 |     float b2 = (1.0f - cosw) / 2.0f;
      |                 ^  ~
      |                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:89:32: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   89 |     float b2 = (1.0f - cosw) / 2.0f;
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:89:32: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   89 |     float b2 = (1.0f - cosw) / 2.0f;
      |                                ^  ~
      |                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:90:20: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   90 |     float a0_val = 1.0f + alpha;
      |                    ^  ~
      |                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:91:21: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   91 |     float a1_val = -2.0f * cosw;
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:91:21: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   91 |     float a1_val = -2.0f * cosw;
      |                     ^  ~
      |                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:92:20: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   92 |     float a2_val = 1.0f - alpha;
      |                    ^  ~
      |                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:97:70: warning: parameter name 'Q' is too short, expected at least 3 characters [readability-identifier-length]
   97 | void BiquadFilter::setHighPass(float cutoff, float sampleRate, float Q) {
      |                                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:98:11: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
   98 |     float w = 2.0f * M_PI * cutoff / sampleRate;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:98:15: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   98 |     float w = 2.0f * M_PI * cutoff / sampleRate;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:98:15: warning: narrowing conversion from 'double' to 'float' [cppcoreguidelines-narrowing-conversions]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:98:15: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   98 |     float w = 2.0f * M_PI * cutoff / sampleRate;
      |               ^  ~
      |                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:101:27: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  101 |     float alpha = sinw / (2.0f * Q);
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:101:27: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  101 |     float alpha = sinw / (2.0f * Q);
      |                           ^  ~
      |                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:103:11: warning: variable name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
  103 |     float b0 = (1.0f + cosw) / 2.0f;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:103:17: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  103 |     float b0 = (1.0f + cosw) / 2.0f;
      |                 ^  ~
      |                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:103:32: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  103 |     float b0 = (1.0f + cosw) / 2.0f;
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:103:32: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  103 |     float b0 = (1.0f + cosw) / 2.0f;
      |                                ^  ~
      |                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:104:11: warning: variable name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
  104 |     float b1 = -(1.0f + cosw);
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:104:18: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  104 |     float b1 = -(1.0f + cosw);
      |                  ^  ~
      |                     F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:105:11: warning: variable name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
  105 |     float b2 = (1.0f + cosw) / 2.0f;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:105:17: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  105 |     float b2 = (1.0f + cosw) / 2.0f;
      |                 ^  ~
      |                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:105:32: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  105 |     float b2 = (1.0f + cosw) / 2.0f;
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:105:32: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  105 |     float b2 = (1.0f + cosw) / 2.0f;
      |                                ^  ~
      |                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:106:20: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  106 |     float a0_val = 1.0f + alpha;
      |                    ^  ~
      |                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:107:21: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  107 |     float a1_val = -2.0f * cosw;
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:107:21: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  107 |     float a1_val = -2.0f * cosw;
      |                     ^  ~
      |                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:108:20: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  108 |     float a2_val = 1.0f - alpha;
      |                    ^  ~
      |                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:113:91: warning: parameter name 'Q' is too short, expected at least 3 characters [readability-identifier-length]
  113 | void BiquadFilter::setBandPass(float lowCutoff, float highCutoff, float sampleRate, float Q) {
      |                                                                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:116:11: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  116 |     float w = 2.0f * M_PI * centerFreq / sampleRate;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:116:15: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  116 |     float w = 2.0f * M_PI * centerFreq / sampleRate;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:116:15: warning: narrowing conversion from 'double' to 'float' [cppcoreguidelines-narrowing-conversions]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:116:15: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  116 |     float w = 2.0f * M_PI * centerFreq / sampleRate;
      |               ^  ~
      |                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:119:37: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  119 |     float alpha = sinw * sinhf(logf(2.0f) / 2.0f * bandwidth * w / sinw);
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:119:37: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  119 |     float alpha = sinw * sinhf(logf(2.0f) / 2.0f * bandwidth * w / sinw);
      |                                     ^  ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:119:45: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  119 |     float alpha = sinw * sinhf(logf(2.0f) / 2.0f * bandwidth * w / sinw);
      |                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:119:45: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  119 |     float alpha = sinw * sinhf(logf(2.0f) / 2.0f * bandwidth * w / sinw);
      |                                             ^  ~
      |                                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:121:11: warning: variable name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
  121 |     float b0 = sinw / 2.0f;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:121:23: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  121 |     float b0 = sinw / 2.0f;
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:121:23: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  121 |     float b0 = sinw / 2.0f;
      |                       ^  ~
      |                          F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:122:11: warning: variable name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
  122 |     float b1 = 0.0f;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:122:16: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  122 |     float b1 = 0.0f;
      |                ^  ~
      |                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:123:11: warning: variable name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
  123 |     float b2 = -sinw / 2.0f;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:123:24: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  123 |     float b2 = -sinw / 2.0f;
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:123:24: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  123 |     float b2 = -sinw / 2.0f;
      |                        ^  ~
      |                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:124:20: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  124 |     float a0_val = 1.0f + alpha;
      |                    ^  ~
      |                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:125:21: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  125 |     float a1_val = -2.0f * cosw;
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:125:21: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  125 |     float a1_val = -2.0f * cosw;
      |                     ^  ~
      |                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:126:20: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  126 |     float a2_val = 1.0f - alpha;
      |                    ^  ~
      |                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:131:70: warning: parameter name 'Q' is too short, expected at least 3 characters [readability-identifier-length]
  131 | void BiquadFilter::setNotch(float frequency, float sampleRate, float Q) {
      |                                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:132:11: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  132 |     float w = 2.0f * M_PI * frequency / sampleRate;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:132:15: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  132 |     float w = 2.0f * M_PI * frequency / sampleRate;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:132:15: warning: narrowing conversion from 'double' to 'float' [cppcoreguidelines-narrowing-conversions]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:132:15: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  132 |     float w = 2.0f * M_PI * frequency / sampleRate;
      |               ^  ~
      |                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:135:27: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  135 |     float alpha = sinw / (2.0f * Q);
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:135:27: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  135 |     float alpha = sinw / (2.0f * Q);
      |                           ^  ~
      |                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:137:11: warning: variable name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
  137 |     float b0 = 1.0f;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:137:16: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  137 |     float b0 = 1.0f;
      |                ^  ~
      |                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:138:11: warning: variable name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
  138 |     float b1 = -2.0f * cosw;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:138:17: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  138 |     float b1 = -2.0f * cosw;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:138:17: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  138 |     float b1 = -2.0f * cosw;
      |                 ^  ~
      |                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:139:11: warning: variable name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
  139 |     float b2 = 1.0f;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:139:16: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  139 |     float b2 = 1.0f;
      |                ^  ~
      |                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:140:20: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  140 |     float a0_val = 1.0f + alpha;
      |                    ^  ~
      |                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:141:21: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  141 |     float a1_val = -2.0f * cosw;
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:141:21: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  141 |     float a1_val = -2.0f * cosw;
      |                     ^  ~
      |                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:142:20: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  142 |     float a2_val = 1.0f - alpha;
      |                    ^  ~
      |                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:147:72: warning: parameter name 'Q' is too short, expected at least 3 characters [readability-identifier-length]
  147 | void BiquadFilter::setAllPass(float frequency, float sampleRate, float Q) {
      |                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:148:11: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  148 |     float w = 2.0f * M_PI * frequency / sampleRate;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:148:15: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  148 |     float w = 2.0f * M_PI * frequency / sampleRate;
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:148:15: warning: narrowing conversion from 'double' to 'float' [cppcoreguidelines-narrowing-conversions]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:148:15: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  148 |     float w = 2.0f * M_PI * frequency / sampleRate;
      |               ^  ~
      |                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:151:27: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  151 |     float alpha = sinw / (2.0f * Q);
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:151:27: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  151 |     float alpha = sinw / (2.0f * Q);
      |                           ^  ~
      |                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:153:11: warning: variable name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
  153 |     float b0 = 1.0f - alpha;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:153:16: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  153 |     float b0 = 1.0f - alpha;
      |                ^  ~
      |                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:154:11: warning: variable name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
  154 |     float b1 = -2.0f * cosw;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:154:17: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  154 |     float b1 = -2.0f * cosw;
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:154:17: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  154 |     float b1 = -2.0f * cosw;
      |                 ^  ~
      |                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:155:11: warning: variable name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
  155 |     float b2 = 1.0f + alpha;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:155:16: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  155 |     float b2 = 1.0f + alpha;
      |                ^  ~
      |                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:156:20: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  156 |     float a0_val = 1.0f + alpha;
      |                    ^  ~
      |                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:157:21: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  157 |     float a1_val = -2.0f * cosw;
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:157:21: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  157 |     float a1_val = -2.0f * cosw;
      |                     ^  ~
      |                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:158:20: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  158 |     float a2_val = 1.0f - alpha;
      |                    ^  ~
      |                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:163:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  163 | float BiquadFilter::process(float input) {
      | ~~~~~               ^
      | auto                                     -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:175:25: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  175 |     x1 = x2 = y1 = y2 = 0.0f;
      |                         ^  ~
      |                            F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:178:48: warning: parameter name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
  178 | void BiquadFilter::calculateCoefficients(float b0, float b1, float b2, float a0, float a1, float a2) {
      |                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:178:58: warning: parameter name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
  178 | void BiquadFilter::calculateCoefficients(float b0, float b1, float b2, float a0, float a1, float a2) {
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:178:68: warning: parameter name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
  178 | void BiquadFilter::calculateCoefficients(float b0, float b1, float b2, float a0, float a1, float a2) {
      |                                                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:178:78: warning: parameter name 'a0' is too short, expected at least 3 characters [readability-identifier-length]
  178 | void BiquadFilter::calculateCoefficients(float b0, float b1, float b2, float a0, float a1, float a2) {
      |                                                                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:178:88: warning: parameter name 'a1' is too short, expected at least 3 characters [readability-identifier-length]
  178 | void BiquadFilter::calculateCoefficients(float b0, float b1, float b2, float a0, float a1, float a2) {
      |                                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:178:98: warning: parameter name 'a2' is too short, expected at least 3 characters [readability-identifier-length]
  178 | void BiquadFilter::calculateCoefficients(float b0, float b1, float b2, float a0, float a1, float a2) {
      |                                                                                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:187:102: warning: 0.3f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  187 | FGComAudio::ProfessionalAudioEngine::ReverbProcessor::ReverbProcessor() : currentSample(0), roomSize(0.3f), dampingAmount(0.5f), 
      |                                                                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:187:102: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:187:123: warning: 0.5f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  187 | FGComAudio::ProfessionalAudioEngine::ReverbProcessor::ReverbProcessor() : currentSample(0), roomSize(0.3f), dampingAmount(0.5f), 
      |                                                                                                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:187:123: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:188:45: warning: 0.3f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  188 |                                    wetLevel(0.3f), dryLevel(0.7f) {
      |                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:188:45: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:188:61: warning: 0.7f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  188 |                                    wetLevel(0.3f), dryLevel(0.7f) {
      |                                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:188:61: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:189:19: warning: 347 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  189 |     delayTimes = {347, 113, 37, 59, 73, 89, 97, 101};
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:189:24: warning: 113 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  189 |     delayTimes = {347, 113, 37, 59, 73, 89, 97, 101};
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:189:29: warning: 37 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  189 |     delayTimes = {347, 113, 37, 59, 73, 89, 97, 101};
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:189:33: warning: 59 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  189 |     delayTimes = {347, 113, 37, 59, 73, 89, 97, 101};
      |                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:189:37: warning: 73 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  189 |     delayTimes = {347, 113, 37, 59, 73, 89, 97, 101};
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:189:41: warning: 89 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  189 |     delayTimes = {347, 113, 37, 59, 73, 89, 97, 101};
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:189:45: warning: 97 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  189 |     delayTimes = {347, 113, 37, 59, 73, 89, 97, 101};
      |                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:189:49: warning: 101 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  189 |     delayTimes = {347, 113, 37, 59, 73, 89, 97, 101};
      |                                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:190:26: warning: 347 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  190 |     delayLines[0].resize(347);
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:191:26: warning: 113 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  191 |     delayLines[1].resize(113);
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:192:26: warning: 37 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  192 |     delayLines[2].resize(37);
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:193:26: warning: 59 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  193 |     delayLines[3].resize(59);
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:194:26: warning: 73 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  194 |     delayLines[4].resize(73);
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:195:16: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  195 |     delayLines[5].resize(89);
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:195:26: warning: 89 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  195 |     delayLines[5].resize(89);
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:196:16: warning: 6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  196 |     delayLines[6].resize(97);
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:196:26: warning: 97 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  196 |     delayLines[6].resize(97);
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:197:16: warning: 7 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  197 |     delayLines[7].resize(101);
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:197:26: warning: 101 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  197 |     delayLines[7].resize(101);
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:199:21: warning: 8 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  199 |     feedback.resize(8);
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:200:20: warning: 8 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  200 |     damping.resize(8);
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:201:25: warning: 8 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  201 |     for (int i = 0; i < 8; ++i) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:202:23: warning: 0.4f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  202 |         feedback[i] = 0.4f + (i * 0.1f);
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:202:23: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  202 |         feedback[i] = 0.4f + (i * 0.1f);
      |                       ^  ~
      |                          F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:202:31: warning: narrowing conversion from 'int' to 'float' [cppcoreguidelines-narrowing-conversions]
  202 |         feedback[i] = 0.4f + (i * 0.1f);
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:202:35: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  202 |         feedback[i] = 0.4f + (i * 0.1f);
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:202:35: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  202 |         feedback[i] = 0.4f + (i * 0.1f);
      |                                   ^  ~
      |                                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:203:22: warning: 0.5f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  203 |         damping[i] = 0.5f;
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:203:22: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  203 |         damping[i] = 0.5f;
      |                      ^  ~
      |                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:216:23: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  216 |         float input = samples[i];
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:217:24: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  217 |         float output = 0.0f;
      |                        ^  ~
      |                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:220:29: warning: 8 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  220 |         for (int j = 0; j < 8; ++j) {
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:222:29: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  222 |             float delayed = delayLines[j][delayIndex];
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:223:13: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  223 |             delayLines[j][delayIndex] = input + delayed * feedback[j] * (1.0f - damping[j]);
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:223:74: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  223 |             delayLines[j][delayIndex] = input + delayed * feedback[j] * (1.0f - damping[j]);
      |                                                                          ^  ~
      |                                                                             F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:224:34: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  224 |             output += delayed * (1.0f - damping[j]);
      |                                  ^  ~
      |                                     F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:229:29: warning: 8 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  229 |         for (int j = 0; j < 8; ++j) {
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:234:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  234 |         samples[i] = input * dryLevel + output * wetLevel;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:241:5: warning: use range-based for loop instead [modernize-loop-convert]
  241 |     for (int i = 0; i < 8; ++i) {
      |     ^   ~~~~~~~~~~~~~~~~~~~~~~~
      |         (auto & delayLine : delayLines)
  242 |         std::fill(delayLines[i].begin(), delayLines[i].end(), 0.0f);
      |                   ~~~~~~~~~~~~~          ~~~~~~~~~~~~~
      |                   delayLine              delayLine
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:241:25: warning: 8 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  241 |     for (int i = 0; i < 8; ++i) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:242:19: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  242 |         std::fill(delayLines[i].begin(), delayLines[i].end(), 0.0f);
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:242:42: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  242 |         std::fill(delayLines[i].begin(), delayLines[i].end(), 0.0f);
      |                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:242:63: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  242 |         std::fill(delayLines[i].begin(), delayLines[i].end(), 0.0f);
      |                                                               ^  ~
      |                                                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:247:84: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  247 | FGComAudio::ProfessionalAudioEngine::ChorusProcessor::ChorusProcessor() : lfoPhase(0.0f), rate(0.5f), depth(0.1f), 
      |                                                                                    ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:247:96: warning: 0.5f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  247 | FGComAudio::ProfessionalAudioEngine::ChorusProcessor::ChorusProcessor() : lfoPhase(0.0f), rate(0.5f), depth(0.1f), 
      |                                                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:247:96: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:247:109: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  247 | FGComAudio::ProfessionalAudioEngine::ChorusProcessor::ChorusProcessor() : lfoPhase(0.0f), rate(0.5f), depth(0.1f), 
      |                                                                                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:247:109: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:248:45: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  248 |                                    feedback(0.0f), mix(0.5f), delayLineSize(1024), currentSample(0) {
      |                                             ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:248:56: warning: 0.5f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  248 |                                    feedback(0.0f), mix(0.5f), delayLineSize(1024), currentSample(0) {
      |                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:248:56: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:248:77: warning: 1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  248 |                                    feedback(0.0f), mix(0.5f), delayLineSize(1024), currentSample(0) {
      |                                                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:261:23: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  261 |         float input = samples[i];
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:264:26: warning: narrowing conversion from 'double' to 'float' [cppcoreguidelines-narrowing-conversions]
  264 |         float lfo = sinf(lfoPhase * 2.0f * M_PI);
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:264:37: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  264 |         float lfo = sinf(lfoPhase * 2.0f * M_PI);
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:264:37: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  264 |         float lfo = sinf(lfoPhase * 2.0f * M_PI);
      |                                     ^  ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:265:28: warning: 44100.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  265 |         lfoPhase += rate / 44100.0f; // Assuming 44.1kHz
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:265:28: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  265 |         lfoPhase += rate / 44100.0f; // Assuming 44.1kHz
      |                            ^      ~
      |                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:266:25: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  266 |         if (lfoPhase >= 1.0f) lfoPhase -= 1.0f;
      |                         ^  ~
      |                            F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:266:30: warning: statement should be inside braces [readability-braces-around-statements]
  266 |         if (lfoPhase >= 1.0f) lfoPhase -= 1.0f;
      |                              ^                 
      |                               {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:266:43: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  266 |         if (lfoPhase >= 1.0f) lfoPhase -= 1.0f;
      |                                           ^  ~
      |                                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:269:27: warning: 0.005f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  269 |         float delayTime = 0.005f + depth * (lfo + 1.0f) * 0.5f; // 5-15ms delay
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:269:27: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  269 |         float delayTime = 0.005f + depth * (lfo + 1.0f) * 0.5f; // 5-15ms delay
      |                           ^    ~
      |                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:269:51: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  269 |         float delayTime = 0.005f + depth * (lfo + 1.0f) * 0.5f; // 5-15ms delay
      |                                                   ^  ~
      |                                                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:269:59: warning: 0.5f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  269 |         float delayTime = 0.005f + depth * (lfo + 1.0f) * 0.5f; // 5-15ms delay
      |                                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:269:59: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  269 |         float delayTime = 0.005f + depth * (lfo + 1.0f) * 0.5f; // 5-15ms delay
      |                                                           ^  ~
      |                                                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:270:57: warning: 44100.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  270 |         int delaySamples = static_cast<int>(delayTime * 44100.0f);
      |                                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:270:57: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  270 |         int delaySamples = static_cast<int>(delayTime * 44100.0f);
      |                                                         ^      ~
      |                                                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:281:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  281 |         samples[i] = input * (1.0f - mix) + delayed * mix;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:281:31: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  281 |         samples[i] = input * (1.0f - mix) + delayed * mix;
      |                               ^  ~
      |                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:287:16: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  287 |     lfoPhase = 0.0f;
      |                ^  ~
      |                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:289:51: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  289 |     std::fill(delayLine.begin(), delayLine.end(), 0.0f);
      |                                                   ^  ~
      |                                                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:293:94: warning: 20.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  293 | FGComAudio::ProfessionalAudioEngine::CompressorProcessor::CompressorProcessor() : threshold(-20.0f), ratio(3.0f), 
      |                                                                                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:293:94: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:293:108: warning: 3.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  293 | FGComAudio::ProfessionalAudioEngine::CompressorProcessor::CompressorProcessor() : threshold(-20.0f), ratio(3.0f), 
      |                                                                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:293:108: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:294:51: warning: 0.003f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  294 |                                            attack(0.003f), release(0.1f), envelope(0.0f), gain(1.0f) {}
      |                                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:294:51: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:294:68: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  294 |                                            attack(0.003f), release(0.1f), envelope(0.0f), gain(1.0f) {}
      |                                                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:294:68: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:294:84: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  294 |                                            attack(0.003f), release(0.1f), envelope(0.0f), gain(1.0f) {}
      |                                                                                    ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:294:96: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  294 |                                            attack(0.003f), release(0.1f), envelope(0.0f), gain(1.0f) {}
      |                                                                                                ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:305:23: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  305 |         float input = samples[i];
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:306:25: warning: 20.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  306 |         float inputDb = 20.0f * log10f(fabsf(input) + 1e-10f);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:306:25: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  306 |         float inputDb = 20.0f * log10f(fabsf(input) + 1e-10f);
      |                         ^   ~
      |                             F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:306:55: warning: 1e-10f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  306 |         float inputDb = 20.0f * log10f(fabsf(input) + 1e-10f);
      |                                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:306:55: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  306 |         float inputDb = 20.0f * log10f(fabsf(input) + 1e-10f);
      |                                                       ^    ~
      |                                                            F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:311:37: warning: 10.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  311 |             float targetGain = powf(10.0f, (compressedDb - inputDb) / 20.0f);
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:311:37: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  311 |             float targetGain = powf(10.0f, (compressedDb - inputDb) / 20.0f);
      |                                     ^   ~
      |                                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:311:71: warning: 20.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  311 |             float targetGain = powf(10.0f, (compressedDb - inputDb) / 20.0f);
      |                                                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:311:71: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  311 |             float targetGain = powf(10.0f, (compressedDb - inputDb) / 20.0f);
      |                                                                       ^   ~
      |                                                                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:319:22: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  319 |             gain += (1.0f - gain) * release;
      |                      ^  ~
      |                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:322:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  322 |         samples[i] *= gain;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:327:16: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  327 |     envelope = 0.0f;
      |                ^  ~
      |                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:328:12: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  328 |     gain = 1.0f;
      |            ^  ~
      |               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:332:92: warning: 40.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  332 | FGComAudio::ProfessionalAudioEngine::NoiseGateProcessor::NoiseGateProcessor() : threshold(-40.0f), attack(0.001f), 
      |                                                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:332:92: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:332:107: warning: 0.001f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  332 | FGComAudio::ProfessionalAudioEngine::NoiseGateProcessor::NoiseGateProcessor() : threshold(-40.0f), attack(0.001f), 
      |                                                                                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:332:107: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:333:50: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  333 |                                          release(0.1f), envelope(0.0f), gain(1.0f) {}
      |                                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:333:50: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:333:66: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  333 |                                          release(0.1f), envelope(0.0f), gain(1.0f) {}
      |                                                                  ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:333:78: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  333 |                                          release(0.1f), envelope(0.0f), gain(1.0f) {}
      |                                                                              ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:343:23: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  343 |         float input = samples[i];
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:344:25: warning: 20.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  344 |         float inputDb = 20.0f * log10f(fabsf(input) + 1e-10f);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:344:25: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  344 |         float inputDb = 20.0f * log10f(fabsf(input) + 1e-10f);
      |                         ^   ~
      |                             F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:344:55: warning: 1e-10f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  344 |         float inputDb = 20.0f * log10f(fabsf(input) + 1e-10f);
      |                                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:344:55: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  344 |         float inputDb = 20.0f * log10f(fabsf(input) + 1e-10f);
      |                                                       ^    ~
      |                                                            F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:347:22: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  347 |             gain += (1.0f - gain) * attack;
      |                      ^  ~
      |                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:349:22: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  349 |             gain += (0.0f - gain) * release;
      |                      ^  ~
      |                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:352:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  352 |         samples[i] *= gain;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:357:16: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  357 |     envelope = 0.0f;
      |                ^  ~
      |                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:358:12: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  358 |     gain = 1.0f;
      |            ^  ~
      |               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:362:51: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
  362 | FGComAudio::ProfessionalAudioEngine::EQProcessor::EQProcessor() {}
      |                                                   ^             ~~
      |                                                                 = default;
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:370:24: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  370 |         if (gains[i] > 0.0f) {
      |                        ^  ~
      |                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:371:51: warning: 0.8f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  371 |             bands[i].setBandPass(frequencies[i] * 0.8f, frequencies[i] * 1.2f, 44100.0f, 1.0f);
      |                                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:371:51: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  371 |             bands[i].setBandPass(frequencies[i] * 0.8f, frequencies[i] * 1.2f, 44100.0f, 1.0f);
      |                                                   ^  ~
      |                                                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:371:74: warning: 1.2f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  371 |             bands[i].setBandPass(frequencies[i] * 0.8f, frequencies[i] * 1.2f, 44100.0f, 1.0f);
      |                                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:371:74: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  371 |             bands[i].setBandPass(frequencies[i] * 0.8f, frequencies[i] * 1.2f, 44100.0f, 1.0f);
      |                                                                          ^  ~
      |                                                                             F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:371:80: warning: 44100.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  371 |             bands[i].setBandPass(frequencies[i] * 0.8f, frequencies[i] * 1.2f, 44100.0f, 1.0f);
      |                                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:371:80: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  371 |             bands[i].setBandPass(frequencies[i] * 0.8f, frequencies[i] * 1.2f, 44100.0f, 1.0f);
      |                                                                                ^      ~
      |                                                                                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:371:90: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  371 |             bands[i].setBandPass(frequencies[i] * 0.8f, frequencies[i] * 1.2f, 44100.0f, 1.0f);
      |                                                                                          ^  ~
      |                                                                                             F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:373:47: warning: 44100.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  373 |             bands[i].setNotch(frequencies[i], 44100.0f, 10.0f);
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:373:47: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  373 |             bands[i].setNotch(frequencies[i], 44100.0f, 10.0f);
      |                                               ^      ~
      |                                                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:373:57: warning: 10.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  373 |             bands[i].setNotch(frequencies[i], 44100.0f, 10.0f);
      |                                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:373:57: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  373 |             bands[i].setNotch(frequencies[i], 44100.0f, 10.0f);
      |                                                         ^   ~
      |                                                             F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:380:23: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  380 |         float input = samples[i];
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:386:37: warning: 10.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  386 |             float gainLinear = powf(10.0f, gainDb / 20.0f);
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:386:37: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  386 |             float gainLinear = powf(10.0f, gainDb / 20.0f);
      |                                     ^   ~
      |                                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:386:53: warning: 20.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  386 |             float gainLinear = powf(10.0f, gainDb / 20.0f);
      |                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:386:53: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  386 |             float gainLinear = powf(10.0f, gainDb / 20.0f);
      |                                                     ^   ~
      |                                                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:387:48: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  387 |             output += filtered * (gainLinear - 1.0f);
      |                                                ^  ~
      |                                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:390:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  390 |         samples[i] = output;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:402:56: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  402 |     : radioEffectsEnabled(false), currentSignalQuality(1.0f), currentDistance(0.0f),
      |                                                        ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:402:79: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  402 |     : radioEffectsEnabled(false), currentSignalQuality(1.0f), currentDistance(0.0f),
      |                                                                               ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:403:21: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  403 |       currentVolume(1.0f), currentNoiseLevel(0.0f) {
      |                     ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:403:46: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  403 |       currentVolume(1.0f), currentNoiseLevel(0.0f) {
      |                                              ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:405:32: warning: 80.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  405 |     highPassFilter.setHighPass(80.0f, 44100.0f);
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:405:32: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  405 |     highPassFilter.setHighPass(80.0f, 44100.0f);
      |                                ^   ~
      |                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:405:39: warning: 44100.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  405 |     highPassFilter.setHighPass(80.0f, 44100.0f);
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:405:39: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  405 |     highPassFilter.setHighPass(80.0f, 44100.0f);
      |                                       ^      ~
      |                                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:406:30: warning: 8000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  406 |     lowPassFilter.setLowPass(8000.0f, 44100.0f);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:406:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  406 |     lowPassFilter.setLowPass(8000.0f, 44100.0f);
      |                              ^     ~
      |                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:406:39: warning: 44100.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  406 |     lowPassFilter.setLowPass(8000.0f, 44100.0f);
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:406:39: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  406 |     lowPassFilter.setLowPass(8000.0f, 44100.0f);
      |                                       ^      ~
      |                                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:407:32: warning: 300.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  407 |     bandPassFilter.setBandPass(300.0f, 3000.0f, 44100.0f);
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:407:32: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  407 |     bandPassFilter.setBandPass(300.0f, 3000.0f, 44100.0f);
      |                                ^    ~
      |                                     F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:407:40: warning: 3000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  407 |     bandPassFilter.setBandPass(300.0f, 3000.0f, 44100.0f);
      |                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:407:40: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  407 |     bandPassFilter.setBandPass(300.0f, 3000.0f, 44100.0f);
      |                                        ^     ~
      |                                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:407:49: warning: 44100.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  407 |     bandPassFilter.setBandPass(300.0f, 3000.0f, 44100.0f);
      |                                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:407:49: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  407 |     bandPassFilter.setBandPass(300.0f, 3000.0f, 44100.0f);
      |                                                 ^      ~
      |                                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:413:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  413 |         samples[i] = radioHighPassFilter.process(samples[i]);
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:413:50: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  413 |         samples[i] = radioHighPassFilter.process(samples[i]);
      |                                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:414:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  414 |         samples[i] = radioLowPassFilter.process(samples[i]);
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:414:49: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  414 |         samples[i] = radioLowPassFilter.process(samples[i]);
      |                                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:419:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  419 |         samples[i] = highPassFilter.process(samples[i]);
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:419:45: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  419 |         samples[i] = highPassFilter.process(samples[i]);
      |                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:420:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  420 |         samples[i] = lowPassFilter.process(samples[i]);
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:420:44: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  420 |         samples[i] = lowPassFilter.process(samples[i]);
      |                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:425:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  425 |         samples[i] *= currentVolume;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:464:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  464 |     currentVolume = std::max(0.0f, std::min(2.0f, volume));
      |                              ^  ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:464:45: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  464 |     currentVolume = std::max(0.0f, std::min(2.0f, volume));
      |                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:464:45: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  464 |     currentVolume = std::max(0.0f, std::min(2.0f, volume));
      |                                             ^  ~
      |                                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:468:34: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  468 |     currentNoiseLevel = std::max(0.0f, std::min(1.0f, noiseLevel));
      |                                  ^  ~
      |                                     F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:468:49: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  468 |     currentNoiseLevel = std::max(0.0f, std::min(1.0f, noiseLevel));
      |                                                 ^  ~
      |                                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:472:37: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  472 |     currentSignalQuality = std::max(0.0f, std::min(1.0f, quality));
      |                                     ^  ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:472:52: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  472 |     currentSignalQuality = std::max(0.0f, std::min(1.0f, quality));
      |                                                    ^  ~
      |                                                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:477:49: warning: 0.3f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  477 |         reverb.setParameters(roomSize, damping, 0.3f, 0.7f);
      |                                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:477:49: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  477 |         reverb.setParameters(roomSize, damping, 0.3f, 0.7f);
      |                                                 ^  ~
      |                                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:477:55: warning: 0.7f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  477 |         reverb.setParameters(roomSize, damping, 0.3f, 0.7f);
      |                                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:477:55: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  477 |         reverb.setParameters(roomSize, damping, 0.3f, 0.7f);
      |                                                       ^  ~
      |                                                          F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:483:43: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  483 |         chorus.setParameters(rate, depth, 0.0f, 0.3f);
      |                                           ^  ~
      |                                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:483:49: warning: 0.3f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  483 |         chorus.setParameters(rate, depth, 0.0f, 0.3f);
      |                                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:483:49: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  483 |         chorus.setParameters(rate, depth, 0.0f, 0.3f);
      |                                                 ^  ~
      |                                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:489:52: warning: 0.003f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  489 |         compressor.setParameters(threshold, ratio, 0.003f, 0.1f);
      |                                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:489:52: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  489 |         compressor.setParameters(threshold, ratio, 0.003f, 0.1f);
      |                                                    ^    ~
      |                                                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:489:60: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  489 |         compressor.setParameters(threshold, ratio, 0.003f, 0.1f);
      |                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:489:60: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  489 |         compressor.setParameters(threshold, ratio, 0.003f, 0.1f);
      |                                                            ^  ~
      |                                                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:495:44: warning: 0.001f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  495 |         noiseGate.setParameters(threshold, 0.001f, 0.1f);
      |                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:495:44: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  495 |         noiseGate.setParameters(threshold, 0.001f, 0.1f);
      |                                            ^    ~
      |                                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:495:52: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  495 |         noiseGate.setParameters(threshold, 0.001f, 0.1f);
      |                                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:495:52: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  495 |         noiseGate.setParameters(threshold, 0.001f, 0.1f);
      |                                                    ^  ~
      |                                                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:522:30: warning: 0.2f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  522 |         reverb.setParameters(0.2f, 0.6f, 0.2f, 0.8f);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:522:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  522 |         reverb.setParameters(0.2f, 0.6f, 0.2f, 0.8f);
      |                              ^  ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:522:36: warning: 0.6f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  522 |         reverb.setParameters(0.2f, 0.6f, 0.2f, 0.8f);
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:522:36: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  522 |         reverb.setParameters(0.2f, 0.6f, 0.2f, 0.8f);
      |                                    ^  ~
      |                                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:522:42: warning: 0.2f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  522 |         reverb.setParameters(0.2f, 0.6f, 0.2f, 0.8f);
      |                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:522:42: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  522 |         reverb.setParameters(0.2f, 0.6f, 0.2f, 0.8f);
      |                                          ^  ~
      |                                             F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:522:48: warning: 0.8f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  522 |         reverb.setParameters(0.2f, 0.6f, 0.2f, 0.8f);
      |                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:522:48: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  522 |         reverb.setParameters(0.2f, 0.6f, 0.2f, 0.8f);
      |                                                ^  ~
      |                                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:526:30: warning: 0.2f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  526 |         chorus.setParameters(0.2f, 0.3f, 0.1f, 0.4f);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:526:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  526 |         chorus.setParameters(0.2f, 0.3f, 0.1f, 0.4f);
      |                              ^  ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:526:36: warning: 0.3f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  526 |         chorus.setParameters(0.2f, 0.3f, 0.1f, 0.4f);
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:526:36: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  526 |         chorus.setParameters(0.2f, 0.3f, 0.1f, 0.4f);
      |                                    ^  ~
      |                                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:526:42: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  526 |         chorus.setParameters(0.2f, 0.3f, 0.1f, 0.4f);
      |                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:526:42: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  526 |         chorus.setParameters(0.2f, 0.3f, 0.1f, 0.4f);
      |                                          ^  ~
      |                                             F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:526:48: warning: 0.4f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  526 |         chorus.setParameters(0.2f, 0.3f, 0.1f, 0.4f);
      |                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:526:48: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  526 |         chorus.setParameters(0.2f, 0.3f, 0.1f, 0.4f);
      |                                                ^  ~
      |                                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:528:30: warning: 0.5f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  528 |         reverb.setParameters(0.5f, 0.4f, 0.3f, 0.7f);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:528:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  528 |         reverb.setParameters(0.5f, 0.4f, 0.3f, 0.7f);
      |                              ^  ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:528:36: warning: 0.4f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  528 |         reverb.setParameters(0.5f, 0.4f, 0.3f, 0.7f);
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:528:36: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  528 |         reverb.setParameters(0.5f, 0.4f, 0.3f, 0.7f);
      |                                    ^  ~
      |                                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:528:42: warning: 0.3f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  528 |         reverb.setParameters(0.5f, 0.4f, 0.3f, 0.7f);
      |                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:528:42: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  528 |         reverb.setParameters(0.5f, 0.4f, 0.3f, 0.7f);
      |                                          ^  ~
      |                                             F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:528:48: warning: 0.7f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  528 |         reverb.setParameters(0.5f, 0.4f, 0.3f, 0.7f);
      |                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:528:48: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  528 |         reverb.setParameters(0.5f, 0.4f, 0.3f, 0.7f);
      |                                                ^  ~
      |                                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:533:31: warning: method 'applyPropagationEffects' can be made const [readability-make-member-function-const]
  533 | void ProfessionalAudioEngine::applyPropagationEffects(float* samples, uint32_t sampleCount, uint16_t channelCount) {
      |                               ^
      |                                                                                                                    const
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:535:33: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  535 |     float distanceAttenuation = 1.0f / (1.0f + currentDistance * 0.1f);
      |                                 ^  ~
      |                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:535:41: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  535 |     float distanceAttenuation = 1.0f / (1.0f + currentDistance * 0.1f);
      |                                         ^  ~
      |                                            F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:535:66: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  535 |     float distanceAttenuation = 1.0f / (1.0f + currentDistance * 0.1f);
      |                                                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:535:66: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  535 |     float distanceAttenuation = 1.0f / (1.0f + currentDistance * 0.1f);
      |                                                                  ^  ~
      |                                                                     F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:537:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  537 |         samples[i] *= distanceAttenuation;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:541:31: warning: method 'applySignalQualityDegradation' can be made const [readability-make-member-function-const]
  541 | void ProfessionalAudioEngine::applySignalQualityDegradation(float* samples, uint32_t sampleCount, uint16_t channelCount) {
      |                               ^
      |                                                                                                                          const
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:542:25: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  542 |     float degradation = 1.0f - currentSignalQuality;
      |                         ^  ~
      |                            F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:546:24: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  546 |         float sample = samples[i];
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:547:60: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  547 |         float distortion = sample * sample * degradation * 0.1f;
      |                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:547:60: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  547 |         float distortion = sample * sample * degradation * 0.1f;
      |                                                            ^  ~
      |                                                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:548:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  548 |         samples[i] = sample + distortion;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:552:29: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  552 |     if (currentNoiseLevel > 0.0f) {
      |                             ^  ~
      |                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:553:35: warning: variable name 'rd' is too short, expected at least 3 characters [readability-identifier-length]
  553 |         static std::random_device rd;
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:555:59: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  555 |         static std::uniform_real_distribution<float> dis(-1.0f, 1.0f);
      |                                                           ^  ~
      |                                                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:555:65: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  555 |         static std::uniform_real_distribution<float> dis(-1.0f, 1.0f);
      |                                                                 ^  ~
      |                                                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:558:13: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  558 |             samples[i] += dis(gen) * currentNoiseLevel * 0.1f;
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:558:58: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  558 |             samples[i] += dis(gen) * currentNoiseLevel * 0.1f;
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:558:58: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  558 |             samples[i] += dis(gen) * currentNoiseLevel * 0.1f;
      |                                                          ^  ~
      |                                                             F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:566:28: warning: 300.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  566 |     setRadioBandPassFilter(300.0f, 3000.0f, 44100.0f);
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:566:28: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  566 |     setRadioBandPassFilter(300.0f, 3000.0f, 44100.0f);
      |                            ^    ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:566:36: warning: 3000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  566 |     setRadioBandPassFilter(300.0f, 3000.0f, 44100.0f);
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:566:36: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  566 |     setRadioBandPassFilter(300.0f, 3000.0f, 44100.0f);
      |                                    ^     ~
      |                                          F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:566:45: warning: 44100.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  566 |     setRadioBandPassFilter(300.0f, 3000.0f, 44100.0f);
      |                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:566:45: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  566 |     setRadioBandPassFilter(300.0f, 3000.0f, 44100.0f);
      |                                             ^      ~
      |                                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:567:24: warning: 0.2f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  567 |     enableReverb(true, 0.2f, 0.6f);
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:567:24: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  567 |     enableReverb(true, 0.2f, 0.6f);
      |                        ^  ~
      |                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:567:30: warning: 0.6f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  567 |     enableReverb(true, 0.2f, 0.6f);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:567:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  567 |     enableReverb(true, 0.2f, 0.6f);
      |                              ^  ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:568:24: warning: 0.5f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  568 |     enableChorus(true, 0.5f, 0.1f);
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:568:24: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  568 |     enableChorus(true, 0.5f, 0.1f);
      |                        ^  ~
      |                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:568:30: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  568 |     enableChorus(true, 0.5f, 0.1f);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:568:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  568 |     enableChorus(true, 0.5f, 0.1f);
      |                              ^  ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:569:30: warning: 20.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  569 |     enableCompression(true, -20.0f, 3.0f);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:569:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  569 |     enableCompression(true, -20.0f, 3.0f);
      |                              ^   ~
      |                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:569:37: warning: 3.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  569 |     enableCompression(true, -20.0f, 3.0f);
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:569:37: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  569 |     enableCompression(true, -20.0f, 3.0f);
      |                                     ^  ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:570:28: warning: 35.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  570 |     enableNoiseGate(true, -35.0f);
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:570:28: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  570 |     enableNoiseGate(true, -35.0f);
      |                            ^   ~
      |                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:581:28: warning: 200.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  581 |     setRadioBandPassFilter(200.0f, 3000.0f, 44100.0f);
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:581:28: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  581 |     setRadioBandPassFilter(200.0f, 3000.0f, 44100.0f);
      |                            ^    ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:581:36: warning: 3000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  581 |     setRadioBandPassFilter(200.0f, 3000.0f, 44100.0f);
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:581:36: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  581 |     setRadioBandPassFilter(200.0f, 3000.0f, 44100.0f);
      |                                    ^     ~
      |                                          F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:581:45: warning: 44100.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  581 |     setRadioBandPassFilter(200.0f, 3000.0f, 44100.0f);
      |                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:581:45: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  581 |     setRadioBandPassFilter(200.0f, 3000.0f, 44100.0f);
      |                                             ^      ~
      |                                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:582:24: warning: 0.5f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  582 |     enableReverb(true, 0.5f, 0.4f);
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:582:24: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  582 |     enableReverb(true, 0.5f, 0.4f);
      |                        ^  ~
      |                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:582:30: warning: 0.4f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  582 |     enableReverb(true, 0.5f, 0.4f);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:582:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  582 |     enableReverb(true, 0.5f, 0.4f);
      |                              ^  ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:583:24: warning: 0.2f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  583 |     enableChorus(true, 0.2f, 0.3f);
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:583:24: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  583 |     enableChorus(true, 0.2f, 0.3f);
      |                        ^  ~
      |                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:583:30: warning: 0.3f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  583 |     enableChorus(true, 0.2f, 0.3f);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:583:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  583 |     enableChorus(true, 0.2f, 0.3f);
      |                              ^  ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:584:30: warning: 15.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  584 |     enableCompression(true, -15.0f, 4.0f);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:584:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  584 |     enableCompression(true, -15.0f, 4.0f);
      |                              ^   ~
      |                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:584:37: warning: 4.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  584 |     enableCompression(true, -15.0f, 4.0f);
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:584:37: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  584 |     enableCompression(true, -15.0f, 4.0f);
      |                                     ^  ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:585:28: warning: 30.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  585 |     enableNoiseGate(true, -30.0f);
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:585:28: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  585 |     enableNoiseGate(true, -30.0f);
      |                            ^   ~
      |                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:596:28: warning: 300.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  596 |     setRadioBandPassFilter(300.0f, 3000.0f, 44100.0f);
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:596:28: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  596 |     setRadioBandPassFilter(300.0f, 3000.0f, 44100.0f);
      |                            ^    ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:596:36: warning: 3000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  596 |     setRadioBandPassFilter(300.0f, 3000.0f, 44100.0f);
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:596:36: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  596 |     setRadioBandPassFilter(300.0f, 3000.0f, 44100.0f);
      |                                    ^     ~
      |                                          F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:596:45: warning: 44100.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  596 |     setRadioBandPassFilter(300.0f, 3000.0f, 44100.0f);
      |                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:596:45: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  596 |     setRadioBandPassFilter(300.0f, 3000.0f, 44100.0f);
      |                                             ^      ~
      |                                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:597:30: warning: 25.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  597 |     enableCompression(true, -25.0f, 2.5f);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:597:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  597 |     enableCompression(true, -25.0f, 2.5f);
      |                              ^   ~
      |                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:597:37: warning: 2.5f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  597 |     enableCompression(true, -25.0f, 2.5f);
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:597:37: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  597 |     enableCompression(true, -25.0f, 2.5f);
      |                                     ^  ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:598:28: warning: 40.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  598 |     enableNoiseGate(true, -40.0f);
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:598:28: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  598 |     enableNoiseGate(true, -40.0f);
      |                            ^   ~
      |                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:608:17: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  608 |     : inputGain(1.0f), outputGain(1.0f), noiseSuppressionEnabled(true), echoCancellationEnabled(true) {
      |                 ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:608:35: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  608 |     : inputGain(1.0f), outputGain(1.0f), noiseSuppressionEnabled(true), echoCancellationEnabled(true) {
      |                                   ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:609:23: warning: 80.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  609 |     setHighPassFilter(80.0f, 44100.0f);
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:609:23: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  609 |     setHighPassFilter(80.0f, 44100.0f);
      |                       ^   ~
      |                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:609:30: warning: 44100.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  609 |     setHighPassFilter(80.0f, 44100.0f);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:609:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  609 |     setHighPassFilter(80.0f, 44100.0f);
      |                              ^      ~
      |                                     F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:610:22: warning: 8000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  610 |     setLowPassFilter(8000.0f, 44100.0f);
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:610:22: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  610 |     setLowPassFilter(8000.0f, 44100.0f);
      |                      ^     ~
      |                            F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:610:31: warning: 44100.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  610 |     setLowPassFilter(8000.0f, 44100.0f);
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:610:31: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  610 |     setLowPassFilter(8000.0f, 44100.0f);
      |                               ^      ~
      |                                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:611:30: warning: 20.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  611 |     enableCompression(true, -20.0f, 3.0f);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:611:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  611 |     enableCompression(true, -20.0f, 3.0f);
      |                              ^   ~
      |                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:611:37: warning: 3.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  611 |     enableCompression(true, -20.0f, 3.0f);
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:611:37: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  611 |     enableCompression(true, -20.0f, 3.0f);
      |                                     ^  ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:612:28: warning: 30.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  612 |     enableNoiseGate(true, -30.0f);
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:612:28: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  612 |     enableNoiseGate(true, -30.0f);
      |                            ^   ~
      |                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:619:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  619 |         samples[i] *= inputGain;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:626:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  626 |         samples[i] *= outputGain;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:646:40: warning: pass by value and use std::move [modernize-pass-by-value]
   17 | SovietVHFProcessor::SovietVHFProcessor(const std::string& radioType)
      |                                        ^~~~~~~~~~~~~~~~~~
      |                                        std::string 
   18 |     : radioType(radioType), fmMode(true), cwMode(false), currentPower(1.5), isOperational(true) {
      |                          
      |                 std::move( )
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:647:71: warning: 1.5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  647 |     : radioType(radioType), fmMode(true), cwMode(false), currentPower(1.5), isOperational(true) {
      |                                                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:649:28: warning: 300.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  649 |     setRadioBandPassFilter(300.0f, 3000.0f, 44100.0f);
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:649:28: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  649 |     setRadioBandPassFilter(300.0f, 3000.0f, 44100.0f);
      |                            ^    ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:649:36: warning: 3000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  649 |     setRadioBandPassFilter(300.0f, 3000.0f, 44100.0f);
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:649:36: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  649 |     setRadioBandPassFilter(300.0f, 3000.0f, 44100.0f);
      |                                    ^     ~
      |                                          F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:649:45: warning: 44100.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  649 |     setRadioBandPassFilter(300.0f, 3000.0f, 44100.0f);
      |                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:649:45: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  649 |     setRadioBandPassFilter(300.0f, 3000.0f, 44100.0f);
      |                                             ^      ~
      |                                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:650:24: warning: 0.4f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  650 |     enableReverb(true, 0.4f, 0.6f);
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:650:24: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  650 |     enableReverb(true, 0.4f, 0.6f);
      |                        ^  ~
      |                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:650:30: warning: 0.6f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  650 |     enableReverb(true, 0.4f, 0.6f);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:650:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  650 |     enableReverb(true, 0.4f, 0.6f);
      |                              ^  ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:651:24: warning: 0.5f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  651 |     enableChorus(true, 0.5f, 0.2f);
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:651:24: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  651 |     enableChorus(true, 0.5f, 0.2f);
      |                        ^  ~
      |                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:651:30: warning: 0.2f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  651 |     enableChorus(true, 0.5f, 0.2f);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:651:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  651 |     enableChorus(true, 0.5f, 0.2f);
      |                              ^  ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:652:30: warning: 18.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  652 |     enableCompression(true, -18.0f, 2.8f);
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:652:30: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  652 |     enableCompression(true, -18.0f, 2.8f);
      |                              ^   ~
      |                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:652:37: warning: 2.8f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  652 |     enableCompression(true, -18.0f, 2.8f);
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:652:37: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  652 |     enableCompression(true, -18.0f, 2.8f);
      |                                     ^  ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:653:28: warning: 32.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  653 |     enableNoiseGate(true, -32.0f);
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:653:28: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  653 |     enableNoiseGate(true, -32.0f);
      |                            ^   ~
      |                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:661:13: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  661 |             samples[i] = 0.0f;
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:661:26: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  661 |             samples[i] = 0.0f;
      |                          ^  ~
      |                             F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:667:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  667 |     float powerScale = static_cast<float>(power / 1.5);
      |     ^~~~~
      |     auto
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:667:51: warning: 1.5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  667 |     float powerScale = static_cast<float>(power / 1.5);
      |                                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:669:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  669 |         samples[i] *= powerScale;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:694:39: warning: statement should be inside braces [readability-braces-around-statements]
  694 |     if (!FGComAudio::g_audioProcessor) return;
      |                                       ^       
      |                                        {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:697:94: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to 'float' [cppcoreguidelines-narrowing-conversions]
  697 |         FGComAudio::g_audioProcessor->setHighPassFilter(static_cast<float>(highpass_cutoff), sampleRateHz);
      |                                                                                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:701:92: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to 'float' [cppcoreguidelines-narrowing-conversions]
  701 |         FGComAudio::g_audioProcessor->setLowPassFilter(static_cast<float>(lowpass_cutoff), sampleRateHz);
      |                                                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:709:39: warning: statement should be inside braces [readability-braces-around-statements]
  709 |     if (!FGComAudio::g_audioProcessor) return;
      |                                       ^       
      |                                        {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:712:86: warning: 44100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  712 |     FGComAudio::g_audioProcessor->processAudio(outputPCM, sampleCount, channelCount, 44100);
      |                                                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:717:39: warning: statement should be inside braces [readability-braces-around-statements]
  717 |     if (!FGComAudio::g_audioProcessor) return;
      |                                       ^       
      |                                        {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:720:86: warning: 44100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  720 |     FGComAudio::g_audioProcessor->processAudio(outputPCM, sampleCount, channelCount, 44100);
      |                                                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:727:39: warning: statement should be inside braces [readability-braces-around-statements]
  727 |     if (!FGComAudio::g_audioProcessor) return;
      |                                       ^       
      |                                        {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:729:52: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  729 |     FGComAudio::g_audioProcessor->setSignalQuality(1.0f - dropoutProbability);
      |                                                    ^  ~
      |                                                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:730:86: warning: 44100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  730 |     FGComAudio::g_audioProcessor->processAudio(outputPCM, sampleCount, channelCount, 44100);
      |                                                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:735:27: warning: statement should be inside braces [readability-braces-around-statements]
  735 |     if (channelCount <= 1) return;
      |                           ^       
      |                            {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:739:21: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  739 |         float sum = 0.0f;
      |                     ^  ~
      |                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:741:20: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  741 |             sum += outputPCM[i * channelCount + ch];
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:743:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  743 |         outputPCM[i] = sum / channelCount;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:743:30: warning: narrowing conversion from 'int' to 'float' [cppcoreguidelines-narrowing-conversions]
  743 |         outputPCM[i] = sum / channelCount;
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:750:37: warning: statement should be inside braces [readability-braces-around-statements]
  750 |     if (!FGComAudio::g_vhfProcessor) return;
      |                                     ^       
      |                                      {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:758:36: warning: statement should be inside braces [readability-braces-around-statements]
  758 |     if (!FGComAudio::g_hfProcessor) return;
      |                                    ^       
      |                                     {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:766:41: warning: statement should be inside braces [readability-braces-around-statements]
  766 |     if (!FGComAudio::g_amateurProcessor) return;
      |                                         ^       
      |                                          {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:773:40: warning: statement should be inside braces [readability-braces-around-statements]
  773 |     if (!FGComAudio::g_webrtcProcessor) return;
      |                                        ^       
      |                                         {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.cpp:782:40: warning: statement should be inside braces [readability-braces-around-statements]
  782 |     if (!FGComAudio::g_sovietProcessor) return;
      |                                        ^       
      |                                         {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:30:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   30 |     float process(float input);
      |     ~~~~~ ^                   
      |     auto                       -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:35:11: warning: use default member initializer for 'a0' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   35 |     float a0, a1, b1;  // IIR1 coefficients: y[n] = a0*x[n] + a1*x[n-1] - b1*y[n-1]
      |           ^ 
      |             {1}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:35:15: warning: use default member initializer for 'a1' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   35 |     float a0, a1, b1;  // IIR1 coefficients: y[n] = a0*x[n] + a1*x[n-1] - b1*y[n-1]
      |               ^ 
      |                 {0}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:35:19: warning: use default member initializer for 'b1' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   35 |     float a0, a1, b1;  // IIR1 coefficients: y[n] = a0*x[n] + a1*x[n-1] - b1*y[n-1]
      |                   ^ 
      |                     {0}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:36:11: warning: use default member initializer for 'x1' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   36 |     float x1, y1;      // Previous input and output samples
      |           ^ 
      |             {0}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:36:15: warning: use default member initializer for 'y1' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   36 |     float x1, y1;      // Previous input and output samples
      |               ^ 
      |                 {0}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:37:10: warning: use default member initializer for 'isHighPass' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   37 |     bool isHighPass;
      |          ^         
      |                    {false}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:44:59: warning: parameter name 'Q' is too short, expected at least 3 characters [readability-identifier-length]
   44 |     void setLowPass(float cutoff, float sampleRate, float Q = 0.707f);
      |                                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:44:63: warning: 0.707f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   44 |     void setLowPass(float cutoff, float sampleRate, float Q = 0.707f);
      |                                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:44:63: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   44 |     void setLowPass(float cutoff, float sampleRate, float Q = 0.707f);
      |                                                               ^    ~
      |                                                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:45:60: warning: parameter name 'Q' is too short, expected at least 3 characters [readability-identifier-length]
   45 |     void setHighPass(float cutoff, float sampleRate, float Q = 0.707f);
      |                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:45:64: warning: 0.707f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   45 |     void setHighPass(float cutoff, float sampleRate, float Q = 0.707f);
      |                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:45:64: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   45 |     void setHighPass(float cutoff, float sampleRate, float Q = 0.707f);
      |                                                                ^    ~
      |                                                                     F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:46:81: warning: parameter name 'Q' is too short, expected at least 3 characters [readability-identifier-length]
   46 |     void setBandPass(float lowCutoff, float highCutoff, float sampleRate, float Q = 0.707f);
      |                                                                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:46:85: warning: 0.707f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   46 |     void setBandPass(float lowCutoff, float highCutoff, float sampleRate, float Q = 0.707f);
      |                                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:46:85: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   46 |     void setBandPass(float lowCutoff, float highCutoff, float sampleRate, float Q = 0.707f);
      |                                                                                     ^    ~
      |                                                                                          F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:47:60: warning: parameter name 'Q' is too short, expected at least 3 characters [readability-identifier-length]
   47 |     void setNotch(float frequency, float sampleRate, float Q = 10.0f);
      |                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:47:64: warning: 10.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   47 |     void setNotch(float frequency, float sampleRate, float Q = 10.0f);
      |                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:47:64: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   47 |     void setNotch(float frequency, float sampleRate, float Q = 10.0f);
      |                                                                ^   ~
      |                                                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:48:62: warning: parameter name 'Q' is too short, expected at least 3 characters [readability-identifier-length]
   48 |     void setAllPass(float frequency, float sampleRate, float Q = 0.707f);
      |                                                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:48:66: warning: 0.707f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   48 |     void setAllPass(float frequency, float sampleRate, float Q = 0.707f);
      |                                                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:48:66: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   48 |     void setAllPass(float frequency, float sampleRate, float Q = 0.707f);
      |                                                                  ^    ~
      |                                                                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:49:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   49 |     float process(float input);
      |     ~~~~~ ^                   
      |     auto                       -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:53:11: warning: use default member initializer for 'a0' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   53 |     float a0, a1, a2, b1, b2;
      |           ^ 
      |             {1}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:53:15: warning: use default member initializer for 'a1' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   53 |     float a0, a1, a2, b1, b2;
      |               ^ 
      |                 {0}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:53:19: warning: use default member initializer for 'a2' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   53 |     float a0, a1, a2, b1, b2;
      |                   ^ 
      |                     {0}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:53:23: warning: use default member initializer for 'b1' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   53 |     float a0, a1, a2, b1, b2;
      |                       ^ 
      |                         {0}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:53:27: warning: use default member initializer for 'b2' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   53 |     float a0, a1, a2, b1, b2;
      |                           ^ 
      |                             {0}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:54:11: warning: use default member initializer for 'x1' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   54 |     float x1, x2, y1, y2;
      |           ^ 
      |             {0}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:54:15: warning: use default member initializer for 'x2' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   54 |     float x1, x2, y1, y2;
      |               ^ 
      |                 {0}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:54:19: warning: use default member initializer for 'y1' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   54 |     float x1, x2, y1, y2;
      |                   ^ 
      |                     {0}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:54:23: warning: use default member initializer for 'y2' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   54 |     float x1, x2, y1, y2;
      |                       ^ 
      |                         {0}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:55:38: warning: parameter name 'b0' is too short, expected at least 3 characters [readability-identifier-length]
   55 |     void calculateCoefficients(float b0, float b1, float b2, float a0, float a1, float a2);
      |                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:55:48: warning: parameter name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
   55 |     void calculateCoefficients(float b0, float b1, float b2, float a0, float a1, float a2);
      |                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:55:58: warning: parameter name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
   55 |     void calculateCoefficients(float b0, float b1, float b2, float a0, float a1, float a2);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:55:68: warning: parameter name 'a0' is too short, expected at least 3 characters [readability-identifier-length]
   55 |     void calculateCoefficients(float b0, float b1, float b2, float a0, float a1, float a2);
      |                                                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:55:78: warning: parameter name 'a1' is too short, expected at least 3 characters [readability-identifier-length]
   55 |     void calculateCoefficients(float b0, float b1, float b2, float a0, float a1, float a2);
      |                                                                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:55:88: warning: parameter name 'a2' is too short, expected at least 3 characters [readability-identifier-length]
   55 |     void calculateCoefficients(float b0, float b1, float b2, float a0, float a1, float a2);
      |                                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:65:7: warning: class 'ProfessionalAudioEngine' defines a default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   65 | class ProfessionalAudioEngine {
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:85:53: warning: 0.3f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   85 |     void enableReverb(bool enable, float roomSize = 0.3f, float damping = 0.5f);
      |                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:85:53: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   85 |     void enableReverb(bool enable, float roomSize = 0.3f, float damping = 0.5f);
      |                                                     ^  ~
      |                                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:85:75: warning: 0.5f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   85 |     void enableReverb(bool enable, float roomSize = 0.3f, float damping = 0.5f);
      |                                                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:85:75: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   85 |     void enableReverb(bool enable, float roomSize = 0.3f, float damping = 0.5f);
      |                                                                           ^  ~
      |                                                                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:86:49: warning: 0.5f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   86 |     void enableChorus(bool enable, float rate = 0.5f, float depth = 0.1f);
      |                                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:86:49: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   86 |     void enableChorus(bool enable, float rate = 0.5f, float depth = 0.1f);
      |                                                 ^  ~
      |                                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:86:69: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   86 |     void enableChorus(bool enable, float rate = 0.5f, float depth = 0.1f);
      |                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:86:69: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   86 |     void enableChorus(bool enable, float rate = 0.5f, float depth = 0.1f);
      |                                                                     ^  ~
      |                                                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:87:60: warning: 20.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   87 |     void enableCompression(bool enable, float threshold = -20.0f, float ratio = 3.0f);
      |                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:87:60: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   87 |     void enableCompression(bool enable, float threshold = -20.0f, float ratio = 3.0f);
      |                                                            ^   ~
      |                                                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:87:81: warning: 3.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   87 |     void enableCompression(bool enable, float threshold = -20.0f, float ratio = 3.0f);
      |                                                                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:87:81: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   87 |     void enableCompression(bool enable, float threshold = -20.0f, float ratio = 3.0f);
      |                                                                                 ^  ~
      |                                                                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:88:58: warning: 40.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   88 |     void enableNoiseGate(bool enable, float threshold = -40.0f);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:88:58: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   88 |     void enableNoiseGate(bool enable, float threshold = -40.0f);
      |                                                          ^   ~
      |                                                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:107:9: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,modernize-avoid-c-arrays]
  107 |         std::vector<float> delayLines[8];
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:107:39: warning: 8 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  107 |         std::vector<float> delayLines[8];
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:111:13: warning: use default member initializer for 'currentSample' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  111 |         int currentSample;
      |             ^            
      |                          {0}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:112:15: warning: use default member initializer for 'roomSize' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  112 |         float roomSize, dampingAmount, wetLevel, dryLevel;
      |               ^       
      |                       {0.3f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:112:25: warning: use default member initializer for 'dampingAmount' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  112 |         float roomSize, dampingAmount, wetLevel, dryLevel;
      |                         ^            
      |                                      {0.5f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:112:40: warning: use default member initializer for 'wetLevel' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  112 |         float roomSize, dampingAmount, wetLevel, dryLevel;
      |                                        ^       
      |                                                {0.3f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:112:50: warning: use default member initializer for 'dryLevel' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  112 |         float roomSize, dampingAmount, wetLevel, dryLevel;
      |                                                  ^       
      |                                                          {0.7f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:124:15: warning: use default member initializer for 'lfoPhase' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  124 |         float lfoPhase;
      |               ^       
      |                       {0.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:125:15: warning: use default member initializer for 'rate' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  125 |         float rate, depth, feedback, mix;
      |               ^   
      |                   {0.5f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:125:21: warning: use default member initializer for 'depth' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  125 |         float rate, depth, feedback, mix;
      |                     ^    
      |                          {0.1f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:125:28: warning: use default member initializer for 'feedback' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  125 |         float rate, depth, feedback, mix;
      |                            ^       
      |                                    {0.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:125:38: warning: use default member initializer for 'mix' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  125 |         float rate, depth, feedback, mix;
      |                                      ^  
      |                                         {0.5f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:126:13: warning: use default member initializer for 'delayLineSize' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  126 |         int delayLineSize;
      |             ^            
      |                          {1024}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:127:13: warning: use default member initializer for 'currentSample' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  127 |         int currentSample;
      |             ^            
      |                          {0}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:138:15: warning: use default member initializer for 'threshold' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  138 |         float threshold, ratio, attack, release;
      |               ^        
      |                        {-20.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:138:26: warning: use default member initializer for 'ratio' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  138 |         float threshold, ratio, attack, release;
      |                          ^    
      |                               {3.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:138:33: warning: use default member initializer for 'attack' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  138 |         float threshold, ratio, attack, release;
      |                                 ^     
      |                                       {0.003f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:138:41: warning: use default member initializer for 'release' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  138 |         float threshold, ratio, attack, release;
      |                                         ^      
      |                                                {0.1f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:139:15: warning: use default member initializer for 'envelope' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  139 |         float envelope;
      |               ^       
      |                       {0.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:140:15: warning: use default member initializer for 'gain' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  140 |         float gain;
      |               ^   
      |                   {1.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:151:15: warning: use default member initializer for 'threshold' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  151 |         float threshold, attack, release;
      |               ^        
      |                        {-40.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:151:26: warning: use default member initializer for 'attack' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  151 |         float threshold, attack, release;
      |                          ^     
      |                                {0.001f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:151:34: warning: use default member initializer for 'release' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  151 |         float threshold, attack, release;
      |                                  ^      
      |                                         {0.1f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:152:15: warning: use default member initializer for 'envelope' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  152 |         float envelope;
      |               ^       
      |                       {0.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:153:15: warning: use default member initializer for 'gain' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  153 |         float gain;
      |               ^   
      |                   {1.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:182:10: warning: use default member initializer for 'radioEffectsEnabled' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  182 |     bool radioEffectsEnabled;
      |          ^                  
      |                             {false}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:184:11: warning: use default member initializer for 'currentSignalQuality' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  184 |     float currentSignalQuality;
      |           ^                   
      |                               {1.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:185:11: warning: use default member initializer for 'currentDistance' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  185 |     float currentDistance;
      |           ^              
      |                          {0.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:186:11: warning: use default member initializer for 'currentVolume' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  186 |     float currentVolume;
      |           ^            
      |                        {1.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:187:11: warning: use default member initializer for 'currentNoiseLevel' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  187 |     float currentNoiseLevel;
      |           ^                
      |                            {0.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:230:11: warning: use default member initializer for 'inputGain' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  230 |     float inputGain, outputGain;
      |           ^        
      |                    {1.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:230:22: warning: use default member initializer for 'outputGain' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  230 |     float inputGain, outputGain;
      |                      ^         
      |                                {1.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:231:10: warning: use default member initializer for 'noiseSuppressionEnabled' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  231 |     bool noiseSuppressionEnabled, echoCancellationEnabled;
      |          ^                      
      |                                 {true}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:231:35: warning: use default member initializer for 'echoCancellationEnabled' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  231 |     bool noiseSuppressionEnabled, echoCancellationEnabled;
      |                                   ^                      
      |                                                          {true}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:242:10: warning: use default member initializer for 'fmMode' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  242 |     bool fmMode, cwMode;
      |          ^     
      |                {true}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:242:18: warning: use default member initializer for 'cwMode' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  242 |     bool fmMode, cwMode;
      |                  ^     
      |                        {false}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:243:12: warning: use default member initializer for 'currentPower' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  243 |     double currentPower;
      |            ^           
      |                        {1.5}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/audio_professional.h:244:10: warning: use default member initializer for 'isOperational' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  244 |     bool isOperational;
      |          ^            
      |                       {true}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:19:27: warning: 1000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   19 |     float max_offset_hz = 1000.0f;        // Maximum frequency offset in Hz
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:19:27: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   19 |     float max_offset_hz = 1000.0f;        // Maximum frequency offset in Hz
      |                           ^     ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:20:28: warning: 1000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   20 |     float min_offset_hz = -1000.0f;       // Minimum frequency offset in Hz
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:20:28: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   20 |     float min_offset_hz = -1000.0f;       // Minimum frequency offset in Hz
      |                            ^     ~
      |                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:21:37: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   21 |     float offset_smoothing_factor = 0.1f; // Smoothing factor for offset changes
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:21:37: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   21 |     float offset_smoothing_factor = 0.1f; // Smoothing factor for offset changes
      |                                     ^  ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:24:25: warning: 48000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   24 |     float sample_rate = 48000.0f;         // Audio sample rate
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:24:25: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   24 |     float sample_rate = 48000.0f;         // Audio sample rate
      |                         ^      ~
      |                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:25:20: warning: 1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   25 |     int fft_size = 1024;                  // FFT size for processing
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:28:35: warning: 10.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   28 |     float processing_latency_ms = 10.0f;  // Maximum processing latency
      |                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:28:35: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   28 |     float processing_latency_ms = 10.0f;  // Maximum processing latency
      |                                   ^   ~
      |                                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:51:32: warning: 299792458.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   51 |     float speed_of_light_mps = 299792458.0f; // Speed of light in m/s
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:51:32: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   51 |     float speed_of_light_mps = 299792458.0f; // Speed of light in m/s
      |                                ^          ~
      |                                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:53:43: warning: 1.0003f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   53 |     float atmospheric_refraction_factor = 1.0003f;
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:53:43: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   53 |     float atmospheric_refraction_factor = 1.0003f;
      |                                           ^     ~
      |                                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:61:32: warning: 40.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   61 |     float image_rejection_db = 40.0f;     // Image rejection in dB
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:61:32: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   61 |     float image_rejection_db = 40.0f;     // Image rejection in dB
      |                                ^   ~
      |                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:63:32: warning: 80.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   63 |     float phase_noise_db_hz = -80.0f;     // Phase noise in dB/Hz
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:63:32: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   63 |     float phase_noise_db_hz = -80.0f;     // Phase noise in dB/Hz
      |                                ^   ~
      |                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:101:44: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  101 |     static FGCom_FrequencyOffsetProcessor& getInstance();
      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^            
      |            auto                                          -> FGCom_FrequencyOffsetProcessor&
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:105:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  105 |     bool applyFrequencyOffset(float* audio_buffer, size_t samples, float offset_hz);
      |     ~~~~ ^                                                                         
      |     auto                                                                            -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:106:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  106 |     bool applyDonaldDuckEffect(float* audio_buffer, size_t samples, float offset_hz);
      |     ~~~~ ^                                                                          
      |     auto                                                                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:107:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  107 |     bool applyDopplerShift(float* audio_buffer, size_t samples, const DopplerShiftParams& params);
      |     ~~~~ ^                                                                                       
      |     auto                                                                                          -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:108:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  108 |     bool applyHeterodyneMixing(float* audio_buffer, size_t samples, const HeterodyneMixingParams& params);
      |     ~~~~ ^                                                                                               
      |     auto                                                                                                  -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:111:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  111 |     bool applyComplexExponentialOffset(float* audio_buffer, size_t samples, float offset_hz);
      |     ~~~~ ^                                                                                  
      |     auto                                                                                     -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:112:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  112 |     bool applyAnalyticSignalOffset(float* audio_buffer, size_t samples, float offset_hz);
      |     ~~~~ ^                                                                              
      |     auto                                                                                 -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:113:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  113 |     bool applyFFTBasedOffset(float* audio_buffer, size_t samples, float offset_hz);
      |     ~~~~ ^                                                                        
      |     auto                                                                           -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:114:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  114 |     bool applyRealTimeOffset(float* audio_buffer, size_t samples, float offset_hz);
      |     ~~~~ ^                                                                        
      |     auto                                                                           -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:117:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  117 |     std::complex<float>* createAnalyticSignal(const float* audio_buffer, size_t samples);
      |     ~~~~~~~~~~~~~~~~~~~~ ^                                                              
      |     auto                                                                                 -> std::complex<float>*
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:123:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  123 |     bool initializeFFT(int fft_size);
      |     ~~~~ ^                          
      |     auto                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:130:27: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  130 |     FrequencyOffsetConfig getConfig() const;
      |     ~~~~~~~~~~~~~~~~~~~~~ ^                
      |     auto                                    -> FrequencyOffsetConfig
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:131:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  131 |     bool loadConfigFromFile(const std::string& config_file);
      |     ~~~~ ^                                                 
      |     auto                                                    -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:132:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  132 |     bool saveConfigToFile(const std::string& config_file) const;
      |     ~~~~ ^                                                     
      |     auto                                                        -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:136:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  136 |     DopplerShiftParams getDopplerParams() const;
      |     ~~~~~~~~~~~~~~~~~~ ^                       
      |     auto                                        -> DopplerShiftParams
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:137:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  137 |     float calculateDopplerShift(const DopplerShiftParams& params);
      |     ~~~~~ ^                                                      
      |     auto                                                          -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:138:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  138 |     bool updateDopplerShift(float relative_velocity_mps, float carrier_frequency_hz);
      |     ~~~~ ^                                                                          
      |     auto                                                                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:142:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  142 |     HeterodyneMixingParams getHeterodyneParams() const;
      |     ~~~~~~~~~~~~~~~~~~~~~~ ^                          
      |     auto                                               -> HeterodyneMixingParams
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:143:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  143 |     bool applyImageRejection(std::complex<float>* signal, size_t samples, float rejection_db);
      |     ~~~~ ^                                                                                   
      |     auto                                                                                      -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:144:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  144 |     bool applyPhaseNoise(std::complex<float>* signal, size_t samples, float noise_db_hz);
      |     ~~~~ ^                                                                              
      |     auto                                                                                 -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:147:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  147 |     bool startRealTimeProcessing();
      |     ~~~~ ^                        
      |     auto                           -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:148:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  148 |     bool stopRealTimeProcessing();
      |     ~~~~ ^                       
      |     auto                          -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:149:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  149 |     bool isRealTimeProcessingActive() const;
      |     ~~~~ ^                                 
      |     auto                                    -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:151:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  151 |     float getCurrentOffset() const;
      |     ~~~~~ ^                       
      |     auto                           -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:152:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  152 |     bool updateOffsetSmoothly(float target_offset_hz);
      |     ~~~~ ^                                           
      |     auto                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:155:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  155 |     FrequencyOffsetStats getStats() const;
      |     ~~~~~~~~~~~~~~~~~~~~ ^               
      |     auto                                  -> FrequencyOffsetStats
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:158:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  158 |     bool isProcessingActive() const;
      |     ~~~~ ^                         
      |     auto                            -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:159:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  159 |     float getProcessingLatency() const;
      |     ~~~~~ ^                           
      |     auto                               -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:160:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  160 |     float getCPUUsage() const;
      |     ~~~~~ ^                  
      |     auto                      -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:163:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  163 |     bool setSampleRate(float sample_rate);
      |     ~~~~ ^                               
      |     auto                                  -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:164:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  164 |     float getSampleRate() const;
      |     ~~~~~ ^                    
      |     auto                        -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:165:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  165 |     bool setFFTSize(int fft_size);
      |     ~~~~ ^                       
      |     auto                          -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:166:9: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  166 |     int getFFTSize() const;
      |     ~~~ ^                 
      |     auto                   -> int
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:167:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  167 |     bool optimizeForLatency();
      |     ~~~~ ^                   
      |     auto                      -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:168:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  168 |     bool optimizeForQuality();
      |     ~~~~ ^                   
      |     auto                      -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:171:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  171 |     bool validateOffset(float offset_hz) const;
      |     ~~~~ ^                                    
      |     auto                                       -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:172:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  172 |     bool validateSampleRate(float sample_rate) const;
      |     ~~~~ ^                                          
      |     auto                                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:173:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  173 |     bool validateFFTSize(int fft_size) const;
      |     ~~~~ ^                                  
      |     auto                                     -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:174:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  174 |     std::string getLastError() const;
      |     ~~~~~~~~~~~ ^                   
      |     auto                             -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:197:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  197 |     float calculateHannWindow(int n, int N);
      |     ~~~~~ ^                                
      |     auto                                    -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:197:42: warning: parameter name 'N' is too short, expected at least 3 characters [readability-identifier-length]
  197 |     float calculateHannWindow(int n, int N);
      |                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:198:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  198 |     float calculateHammingWindow(int n, int N);
      |     ~~~~~ ^                                   
      |     auto                                       -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:198:45: warning: parameter name 'N' is too short, expected at least 3 characters [readability-identifier-length]
  198 |     float calculateHammingWindow(int n, int N);
      |                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:199:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  199 |     float calculateBlackmanWindow(int n, int N);
      |     ~~~~~ ^                                    
      |     auto                                        -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:199:46: warning: parameter name 'N' is too short, expected at least 3 characters [readability-identifier-length]
  199 |     float calculateBlackmanWindow(int n, int N);
      |                                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:213:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  213 |     float hzToRadians(float frequency_hz, float sample_rate);
      |     ~~~~~ ^                                                 
      |     auto                                                     -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:214:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  214 |     float radiansToHz(float radians, float sample_rate);
      |     ~~~~~ ^                                            
      |     auto                                                -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:215:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  215 |     float normalizeFrequency(float frequency_hz, float sample_rate);
      |     ~~~~~ ^                                                        
      |     auto                                                            -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:216:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  216 |     float denormalizeFrequency(float normalized_freq, float sample_rate);
      |     ~~~~~ ^                                                             
      |     auto                                                                 -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:219:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  219 |     std::complex<float> createComplexExponential(float frequency_hz, float time, float sample_rate);
      |     ~~~~~~~~~~~~~~~~~~~ ^                                                                          
      |     auto                                                                                            -> std::complex<float>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:220:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  220 |     std::complex<float> createComplexExponential(float frequency_hz, float time);
      |     ~~~~~~~~~~~~~~~~~~~ ^                                                       
      |     auto                                                                         -> std::complex<float>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:221:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  221 |     float getMagnitude(const std::complex<float>& complex_num);
      |     ~~~~~ ^                                                   
      |     auto                                                       -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:222:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  222 |     float getPhase(const std::complex<float>& complex_num);
      |     ~~~~~ ^                                               
      |     auto                                                   -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:223:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  223 |     std::complex<float> fromMagnitudePhase(float magnitude, float phase);
      |     ~~~~~~~~~~~~~~~~~~~ ^                                               
      |     auto                                                                 -> std::complex<float>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:226:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  226 |     float calculateSNR(const float* signal, size_t samples);
      |     ~~~~~ ^                                                
      |     auto                                                    -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:227:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  227 |     float calculateTHD(const float* signal, size_t samples, float fundamental_freq, float sample_rate);
      |     ~~~~~ ^                                                                                           
      |     auto                                                                                               -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:228:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  228 |     float calculateDynamicRange(const float* signal, size_t samples);
      |     ~~~~~ ^                                                         
      |     auto                                                             -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:229:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  229 |     bool detectClipping(const float* signal, size_t samples, float threshold = 0.95f);
      |     ~~~~ ^                                                                           
      |     auto                                                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:229:80: warning: 0.95f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  229 |     bool detectClipping(const float* signal, size_t samples, float threshold = 0.95f);
      |                                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:229:80: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  229 |     bool detectClipping(const float* signal, size_t samples, float threshold = 0.95f);
      |                                                                                ^   ~
      |                                                                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:232:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  232 |     float calculateDopplerShift(float relative_velocity_mps, float carrier_frequency_hz, float speed_of_light_mps = 299792458.0f);
      |     ~~~~~ ^                                                                                                                      
      |     auto                                                                                                                          -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:232:117: warning: 299792458.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  232 |     float calculateDopplerShift(float relative_velocity_mps, float carrier_frequency_hz, float speed_of_light_mps = 299792458.0f);
      |                                                                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:232:117: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  232 |     float calculateDopplerShift(float relative_velocity_mps, float carrier_frequency_hz, float speed_of_light_mps = 299792458.0f);
      |                                                                                                                     ^          ~
      |                                                                                                                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:233:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  233 |     float calculateRelativisticDopplerShift(float relative_velocity_mps, float carrier_frequency_hz);
      |     ~~~~~ ^                                                                                         
      |     auto                                                                                             -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:234:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  234 |     float calculateAtmosphericRefractionCorrection(float elevation_angle_deg, float frequency_hz);
      |     ~~~~~ ^                                                                                      
      |     auto                                                                                          -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:237:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  237 |     std::complex<float> createLocalOscillator(float frequency_hz, float time, float sample_rate);
      |     ~~~~~~~~~~~~~~~~~~~ ^                                                                       
      |     auto                                                                                         -> std::complex<float>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:239:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  239 |     float calculateImageRejection(float if_freq, float rf_freq, float lo_freq);
      |     ~~~~~ ^                                                                   
      |     auto                                                                       -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:240:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  240 |     float calculatePhaseNoiseVariance(float phase_noise_db_hz, float bandwidth_hz);
      |     ~~~~~ ^                                                                       
      |     auto                                                                           -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:243:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  243 |     float calculateSpectralCentroid(const float* signal, size_t samples, float sample_rate);
      |     ~~~~~ ^                                                                                
      |     auto                                                                                    -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:244:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  244 |     float calculateSpectralRolloff(const float* signal, size_t samples, float sample_rate, float rolloff_percent = 0.85f);
      |     ~~~~~ ^                                                                                                              
      |     auto                                                                                                                  -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:244:116: warning: 0.85f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  244 |     float calculateSpectralRolloff(const float* signal, size_t samples, float sample_rate, float rolloff_percent = 0.85f);
      |                                                                                                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:244:116: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  244 |     float calculateSpectralRolloff(const float* signal, size_t samples, float sample_rate, float rolloff_percent = 0.85f);
      |                                                                                                                    ^   ~
      |                                                                                                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:245:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  245 |     float calculateSpectralFlux(const float* signal, size_t samples, float sample_rate);
      |     ~~~~~ ^                                                                            
      |     auto                                                                                -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:246:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  246 |     float calculateZeroCrossingRate(const float* signal, size_t samples);
      |     ~~~~~ ^                                                             
      |     auto                                                                 -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:250:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  250 |     float calculateWindowGain(const float* window, int size);
      |     ~~~~~ ^                                                 
      |     auto                                                     -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/frequency_offset.h:252:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  252 |     std::string getAvailableWindowTypes();
      |     ~~~~~~~~~~~ ^                        
      |     auto                                  -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:50:9: warning: 'allowHearingNonPluginUsers' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   37 |     bool        allowHearingNonPluginUsers;
      |                                           
      |                                           {false}
   38 |     bool        radioAudioEffects;
   39 |     std::string specialChannel;
   40 |     std::string udpServerHost;
   41 |     int         udpServerPort;
   42 |     std::string logfile;
   43 |     std::map<int, bool> mapMumblePTT;  // which radios to activate when mumble-internal talk activation is used
   44 |     bool        alwaysMumblePTT;       // if true, always enable mumble PTT on COM/PTT, even if plugin not active
   45 |     std::string updaterURL;
   46 |     bool        autoJoinChannel;
   47 |     std::string autoJoinChannelPW;
   48 |     
   49 |     fgcom_config() noexcept {
   50 |         allowHearingNonPluginUsers = false;
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:51:9: warning: 'radioAudioEffects' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   38 |     bool        radioAudioEffects;
      |                                  
      |                                  {true}
   39 |     std::string specialChannel;
   40 |     std::string udpServerHost;
   41 |     int         udpServerPort;
   42 |     std::string logfile;
   43 |     std::map<int, bool> mapMumblePTT;  // which radios to activate when mumble-internal talk activation is used
   44 |     bool        alwaysMumblePTT;       // if true, always enable mumble PTT on COM/PTT, even if plugin not active
   45 |     std::string updaterURL;
   46 |     bool        autoJoinChannel;
   47 |     std::string autoJoinChannelPW;
   48 |     
   49 |     fgcom_config() noexcept {
   50 |         allowHearingNonPluginUsers = false;
   51 |         radioAudioEffects = true;
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:52:9: warning: 'specialChannel' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   39 |     std::string specialChannel;
      |                               
      |                               {"^fgcom-mumble.*"}
   40 |     std::string udpServerHost;
   41 |     int         udpServerPort;
   42 |     std::string logfile;
   43 |     std::map<int, bool> mapMumblePTT;  // which radios to activate when mumble-internal talk activation is used
   44 |     bool        alwaysMumblePTT;       // if true, always enable mumble PTT on COM/PTT, even if plugin not active
   45 |     std::string updaterURL;
   46 |     bool        autoJoinChannel;
   47 |     std::string autoJoinChannelPW;
   48 |     
   49 |     fgcom_config() noexcept {
   50 |         allowHearingNonPluginUsers = false;
   51 |         radioAudioEffects = true;
   52 |         specialChannel    = "^fgcom-mumble.*";
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:53:9: warning: 'udpServerHost' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   40 |     std::string udpServerHost;
      |                              
      |                              {"127.0.0.1"}
   41 |     int         udpServerPort;
   42 |     std::string logfile;
   43 |     std::map<int, bool> mapMumblePTT;  // which radios to activate when mumble-internal talk activation is used
   44 |     bool        alwaysMumblePTT;       // if true, always enable mumble PTT on COM/PTT, even if plugin not active
   45 |     std::string updaterURL;
   46 |     bool        autoJoinChannel;
   47 |     std::string autoJoinChannelPW;
   48 |     
   49 |     fgcom_config() noexcept {
   50 |         allowHearingNonPluginUsers = false;
   51 |         radioAudioEffects = true;
   52 |         specialChannel    = "^fgcom-mumble.*";
   53 |         udpServerHost     = "127.0.0.1";
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:54:9: warning: 'udpServerPort' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   41 |     int         udpServerPort;
      |                              
      |                              {16661}
   42 |     std::string logfile;
   43 |     std::map<int, bool> mapMumblePTT;  // which radios to activate when mumble-internal talk activation is used
   44 |     bool        alwaysMumblePTT;       // if true, always enable mumble PTT on COM/PTT, even if plugin not active
   45 |     std::string updaterURL;
   46 |     bool        autoJoinChannel;
   47 |     std::string autoJoinChannelPW;
   48 |     
   49 |     fgcom_config() noexcept {
   50 |         allowHearingNonPluginUsers = false;
   51 |         radioAudioEffects = true;
   52 |         specialChannel    = "^fgcom-mumble.*";
   53 |         udpServerHost     = "127.0.0.1";
   54 |         udpServerPort     = 16661;
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:54:29: warning: 16661 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   54 |         udpServerPort     = 16661;
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:55:9: warning: 'logfile' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   42 |     std::string logfile;
      |                        
      |                        {""}
   43 |     std::map<int, bool> mapMumblePTT;  // which radios to activate when mumble-internal talk activation is used
   44 |     bool        alwaysMumblePTT;       // if true, always enable mumble PTT on COM/PTT, even if plugin not active
   45 |     std::string updaterURL;
   46 |     bool        autoJoinChannel;
   47 |     std::string autoJoinChannelPW;
   48 |     
   49 |     fgcom_config() noexcept {
   50 |         allowHearingNonPluginUsers = false;
   51 |         radioAudioEffects = true;
   52 |         specialChannel    = "^fgcom-mumble.*";
   53 |         udpServerHost     = "127.0.0.1";
   54 |         udpServerPort     = 16661;
   55 |         logfile           = "";
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:57:9: warning: 'alwaysMumblePTT' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   44 |     bool        alwaysMumblePTT;       // if true, always enable mumble PTT on COM/PTT, even if plugin not active
      |                                
      |                                {false}
   45 |     std::string updaterURL;
   46 |     bool        autoJoinChannel;
   47 |     std::string autoJoinChannelPW;
   48 |     
   49 |     fgcom_config() noexcept {
   50 |         allowHearingNonPluginUsers = false;
   51 |         radioAudioEffects = true;
   52 |         specialChannel    = "^fgcom-mumble.*";
   53 |         udpServerHost     = "127.0.0.1";
   54 |         udpServerPort     = 16661;
   55 |         logfile           = "";
   56 |         mapMumblePTT      = {{0,true}};
   57 |         alwaysMumblePTT   = false;
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:58:9: warning: 'updaterURL' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   45 |     std::string updaterURL;
      |                           
      |                           {""}
   46 |     bool        autoJoinChannel;
   47 |     std::string autoJoinChannelPW;
   48 |     
   49 |     fgcom_config() noexcept {
   50 |         allowHearingNonPluginUsers = false;
   51 |         radioAudioEffects = true;
   52 |         specialChannel    = "^fgcom-mumble.*";
   53 |         udpServerHost     = "127.0.0.1";
   54 |         udpServerPort     = 16661;
   55 |         logfile           = "";
   56 |         mapMumblePTT      = {{0,true}};
   57 |         alwaysMumblePTT   = false;
   58 |         updaterURL        = "";
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:59:9: warning: 'autoJoinChannel' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   46 |     bool        autoJoinChannel;
      |                                
      |                                {false}
   47 |     std::string autoJoinChannelPW;
   48 |     
   49 |     fgcom_config() noexcept {
   50 |         allowHearingNonPluginUsers = false;
   51 |         radioAudioEffects = true;
   52 |         specialChannel    = "^fgcom-mumble.*";
   53 |         udpServerHost     = "127.0.0.1";
   54 |         udpServerPort     = 16661;
   55 |         logfile           = "";
   56 |         mapMumblePTT      = {{0,true}};
   57 |         alwaysMumblePTT   = false;
   58 |         updaterURL        = "";
   59 |         autoJoinChannel   = false;
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:60:9: warning: 'autoJoinChannelPW' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   47 |     std::string autoJoinChannelPW;
      |                                  
      |                                  {""}
   48 |     
   49 |     fgcom_config() noexcept {
   50 |         allowHearingNonPluginUsers = false;
   51 |         radioAudioEffects = true;
   52 |         specialChannel    = "^fgcom-mumble.*";
   53 |         udpServerHost     = "127.0.0.1";
   54 |         udpServerPort     = 16661;
   55 |         logfile           = "";
   56 |         mapMumblePTT      = {{0,true}};
   57 |         alwaysMumblePTT   = false;
   58 |         updaterURL        = "";
   59 |         autoJoinChannel   = false;
   60 |         autoJoinChannelPW = "";
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:63:28: warning: variable 'fgcom_cfg' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   63 | extern struct fgcom_config fgcom_cfg;
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:80:5: warning: constructor does not initialize these fields: mumid, clientPort, clientTgtPort [cppcoreguidelines-pro-type-member-init]
   68 |     mumble_userid_t mumid;  // mumble client ID
      |                          
      |                          {}
   69 |     uint16_t clientPort;    // client port of the identity, for identification
      |                        
      |                        {}
   70 |     uint16_t clientTgtPort; // client port of the identity, we may send packets to this port
      |                           
      |                           {}
   71 |     std::string clientHost; // client host of the identity
   72 |     std::chrono::system_clock::time_point lastUpdate;       // when we received the last data
   73 |     std::chrono::system_clock::time_point lastNotification; // when we sent the last answer for incoming NTF_ASK packets
   74 |     float lon;
   75 |     float lat;
   76 |     float alt;  // in meters
   77 |     std::string  callsign;
   78 |     std::vector<fgcom_radio> radios;
   79 |     float lastSeenSignal;
   80 |     fgcom_client()  {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:81:9: warning: 'lon' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   74 |     float lon;
      |              
      |              {-130.000}
   75 |     float lat;
   76 |     float alt;  // in meters
   77 |     std::string  callsign;
   78 |     std::vector<fgcom_radio> radios;
   79 |     float lastSeenSignal;
   80 |     fgcom_client()  {
   81 |         lon = -130.000;   // 60°S / 130°W is somewhere in the middle of the pacific ocean... 
      |         ^~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:81:16: warning: 130.000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   81 |         lon = -130.000;   // 60°S / 130°W is somewhere in the middle of the pacific ocean... 
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:82:9: warning: 'lat' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   75 |     float lat;
      |              
      |              {-60.000}
   76 |     float alt;  // in meters
   77 |     std::string  callsign;
   78 |     std::vector<fgcom_radio> radios;
   79 |     float lastSeenSignal;
   80 |     fgcom_client()  {
   81 |         lon = -130.000;   // 60°S / 130°W is somewhere in the middle of the pacific ocean... 
   82 |         lat = -60.000;
      |         ^~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:82:16: warning: 60.000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   82 |         lat = -60.000;
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:83:9: warning: 'alt' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   76 |     float alt;  // in meters
      |              
      |              {-1}
   77 |     std::string  callsign;
   78 |     std::vector<fgcom_radio> radios;
   79 |     float lastSeenSignal;
   80 |     fgcom_client()  {
   81 |         lon = -130.000;   // 60°S / 130°W is somewhere in the middle of the pacific ocean... 
   82 |         lat = -60.000;
   83 |         alt = -1;
      |         ^~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:84:9: warning: 'callsign' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   77 |     std::string  callsign;
      |                          
      |                          {"ZZZZ"}
   78 |     std::vector<fgcom_radio> radios;
   79 |     float lastSeenSignal;
   80 |     fgcom_client()  {
   81 |         lon = -130.000;   // 60°S / 130°W is somewhere in the middle of the pacific ocean... 
   82 |         lat = -60.000;
   83 |         alt = -1;
   84 |         callsign = "ZZZZ";
      |         ^~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:87:9: warning: 'lastSeenSignal' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   79 |     float lastSeenSignal;
      |                         
      |                         {-1}
   80 |     fgcom_client()  {
   81 |         lon = -130.000;   // 60°S / 130°W is somewhere in the middle of the pacific ocean... 
   82 |         lat = -60.000;
   83 |         alt = -1;
   84 |         callsign = "ZZZZ";
   85 |         lastUpdate = std::chrono::system_clock::now();
   86 |         lastNotification = std::chrono::system_clock::from_time_t((std::time_t)0);
   87 |         lastSeenSignal = -1;
      |         ^~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:96:19: warning: variable 'fgcom_localcfg_mtx' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   96 | extern std::mutex fgcom_localcfg_mtx;
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:101:43: warning: variable 'fgcom_local_client' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  101 | extern std::map<int, struct fgcom_client> fgcom_local_client;   // local client data
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:105:19: warning: variable 'fgcom_remotecfg_mtx' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  105 | extern std::mutex fgcom_remotecfg_mtx;  // mutex lock for remote data
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:106:64: warning: variable 'fgcom_remote_clients' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  106 | extern std::map<mumble_userid_t, std::map<int, fgcom_client> > fgcom_remote_clients; // remote radio config
      |                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/globalVars.h:109:41: warning: variable 'fgcom_specialChannelID' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  109 | extern std::vector<mumble_channelid_t>  fgcom_specialChannelID;  // filled from plugin init in fgcom-mumble.cpp
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_UDPClient.h:14:13: warning: variable 'udpClientRunning' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   14 | extern bool udpClientRunning; // will be managed by client thread
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_UDPClient.h:19:8: warning: constructor does not initialize these fields: rxRadioId [cppcoreguidelines-pro-type-member-init]
   19 | struct fgcom_rdfInfo {
      |        ^
   20 |     // Transmitter info
   21 |     fgcom_radio txRadio;     // transmitting radio instance
   22 |     fgcom_client txIdentity; // transmitting identity
   23 |     
   24 |     // Receiver info
   25 |     fgcom_radio rxRadio;     // receiving radio instance
   26 |     int rxRadioId;           // receiving radio id (e.g. 1 for COM1)
      |                  
      |                  {}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_UDPClient.h:35:19: warning: variable 'fgcom_rdfInfo_mtx' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   35 | extern std::mutex fgcom_rdfInfo_mtx;
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:31:10: warning: inclusion of deprecated C++ header 'stdio.h'; consider using 'cstdio' instead [modernize-deprecated-headers]
   31 | #include <stdio.h>
      |          ^~~~~~~~~
      |          <cstdio>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:32:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
   32 | #include <stdlib.h> 
      |          ^~~~~~~~~~
      |          <cstdlib>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:34:10: warning: inclusion of deprecated C++ header 'string.h'; consider using 'cstring' instead [modernize-deprecated-headers]
   34 | #include <string.h> 
      |          ^~~~~~~~~~
      |          <cstring>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:38:10: warning: inclusion of deprecated C++ header 'math.h'; consider using 'cmath' instead [modernize-deprecated-headers]
   38 | #include <math.h>
      |          ^~~~~~~~
      |          <cmath>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:70:12: warning: variable 'fgcom_plog_mtx' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   70 | std::mutex fgcom_plog_mtx; // thread safety for logging
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:71:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   71 | std::ostream& pLog(std::ostream& stream) {
      | ~~~~~~~~~~~~~ ^
      | auto                                     -> std::ostream&
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:87:15: warning: variable 'fgcom_logfile_outfh' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   87 | std::ofstream fgcom_logfile_outfh("", std::ios_base::out);
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:87:15: warning: initializing non-local variable with non-const expression depending on uninitialized non-local variable 'out' [cppcoreguidelines-interfaces-global-init]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:88:6: warning: variable 'fgcom_logfile_outfh_opentry' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   88 | bool fgcom_logfile_outfh_opentry = false;
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:92:9: warning: the 'empty' method should be used to check for emptiness instead of 'length' [readability-container-size-empty]
   92 |     if (fgcom_cfg.logfile.length() > 0 && ! fgcom_logfile_outfh.is_open() && !fgcom_logfile_outfh_opentry) {
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         !fgcom_cfg.logfile.empty()
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:1220:7: note: method 'basic_string<char>'::empty() defined here
 1220 |       empty() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:99:111: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   99 |         pLog(std::cout)           << "[LOG] Logfile opening: " << fgcom_cfg.logfile << "; result=" << ores << std::endl;
      |                                                                                                               ^~~~~~~~~
      |                                                                                                               '\n'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:100:155: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  100 |         pLog(fgcom_logfile_outfh) << "[LOG] FGCom-mumble plugin version: "<<FGCOM_VERSION_MAJOR<<"."<<FGCOM_VERSION_MINOR<<"."<<FGCOM_VERSION_PATCH<<"."<<std::endl;
      |                                                                                                                                                           ^~~~~~~~~
      |                                                                                                                                                           '\n'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:101:111: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  101 |         pLog(fgcom_logfile_outfh) << "[LOG] Logfile opening: " << fgcom_cfg.logfile << "; result=" << ores << std::endl;
      |                                                                                                               ^~~~~~~~~
      |                                                                                                               '\n'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:110:36: warning: statement should be inside braces [readability-braces-around-statements]
  110 |     if (fgcom_logfile_outfh.good())  pLog(fgcom_logfile_outfh) << log << std::endl;
      |                                    ^                                               
      |                                     {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:113:28: warning: the parameter 'log' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
  113 | void pluginDbg(std::string log) {
      |                            ^
      |                const      &
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:129:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | bool fgcom_isConnectedToServer() {
      | ~~~~ ^
      | auto                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:131:10: warning: variable 'synchronized' is not initialized [cppcoreguidelines-init-variables]
  131 |     bool synchronized;
      |          ^           
      |                       = false
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:136:7: warning: do not use 'else' after 'return' [readability-else-after-return]
  136 |     } else {
      |       ^~~~~~
  137 |     //    pluginDbg("fgcom_isConnectedToServer(): synchstate="+std::to_string(synchronized));
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |     }
      |     ~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:142:6: warning: function 'notifyRemotes' has cognitive complexity of 65 (threshold 25) [readability-function-cognitive-complexity]
  142 | void notifyRemotes(int iid, FGCOM_NOTIFY_T what, int selector, mumble_userid_t tgtUser) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:149:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  149 |     if (!fgcom_isConnectedToServer()) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:152:7: note: +1, nesting level increased to 1
  152 |     } else {
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:157:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  157 |     if (iid == NTFY_ALL) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:159:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  159 |         for (const auto &idty : fgcom_local_client) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:168:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  168 |     if (what != NTFY_ASK) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:170:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  170 |         if (fgcom_local_client.empty()) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:177:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  177 |         if (fgcom_local_client.count(iid) > 0) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:180:11: note: +1, nesting level increased to 2
  180 |         } else {
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:197:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  197 |     if (last_notification_time.find(throttle_key) != last_notification_time.end()) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:199:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  199 |         if (time_since_last < min_interval) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:207:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  207 |     switch (what) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:226:13: note: +2, including nesting penalty of 1, nesting level increased to 2
  226 |             if (selector == NTFY_ALL) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:228:17: note: +3, including nesting penalty of 2, nesting level increased to 3
  228 |                 for (long unsigned int ri=0; ri < lcl.radios.size(); ri++) {  
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:231:15: note: +1, nesting level increased to 2
  231 |             } else {
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:232:17: note: +3, including nesting penalty of 2, nesting level increased to 3
  232 |                 if (lcl.radios[selector].publish) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:246:19: note: +1, nesting level increased to 3
  246 |                 } else {
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:271:13: note: +2, including nesting penalty of 1, nesting level increased to 2
  271 |             for (const auto &idty : fgcom_local_client) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:272:17: note: +3, including nesting penalty of 2, nesting level increased to 3
  272 |                 if (message.length() > 0) message += ",";
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:288:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  288 |     if (mumAPI.getChannelOfUser(ownPluginID, activeConnection, localMumId, &localChannelID) != MUMBLE_STATUS_OK) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:293:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  293 |     if (mumAPI.getUsersInChannel(ownPluginID, activeConnection, localChannelID, &userIDs, &userCount) != MUMBLE_STATUS_OK) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:296:7: note: +1, nesting level increased to 1
  296 |     } else {
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:298:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  298 |         if (userCount > 1) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:299:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  299 |             if (tgtUser > 0) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:302:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  302 |                 if (tgtUser != lcl.mumid) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:305:21: note: +5, including nesting penalty of 4, nesting level increased to 5
  305 |                     if (send_res != MUMBLE_STATUS_OK) {
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:307:23: note: +1, nesting level increased to 5
  307 |                     } else {
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:310:19: note: +1, nesting level increased to 4
  310 |                 } else {
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:313:15: note: +1, nesting level increased to 3
  313 |             } else {
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:318:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  318 |                 for(size_t i=0; i<userCount; i++) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:319:21: note: +5, including nesting penalty of 4, nesting level increased to 5
  319 |                     if (userIDs[i] != lcl.mumid) {
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:323:23: note: +1, nesting level increased to 5
  323 |                     } else {
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:329:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  329 |                 if (send_res != MUMBLE_STATUS_OK) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:331:19: note: +1, nesting level increased to 4
  331 |                 } else {
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:144:17: warning: redundant string initialization [readability-redundant-string-init]
  144 |     std::string dataID("");  // FGCOM<something>
      |                 ^~~~~~~~~~
      |                 dataID
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:145:17: warning: redundant string initialization [readability-redundant-string-init]
  145 |     std::string message(""); // the message as sting data (yeah, i'm lazy but it parses so easily and is human readable and therefore easy to debug)
      |                 ^~~~~~~~~~~
      |                 message
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:152:7: warning: do not use 'else' after 'return' [readability-else-after-return]
  152 |     } else {
      |       ^~~~~~
  153 |         pluginDbg("[mum_pluginIO] notifyRemotes(): we are connected, so notifications will be sent.");
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  154 |     }
      |     ~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:229:50: warning: narrowing conversion from 'unsigned long' to signed type 'int' is implementation-defined [cppcoreguidelines-narrowing-conversions]
  229 |                     notifyRemotes(iid, NTFY_COM, ri, tgtUser);
      |                                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:240:53: warning: implicit conversion 'bool' -> 'int' [readability-implicit-bool-conversion]
  240 |                             + "PTT="+std::to_string(lcl.radios[selector].ptt)+","
      |                                                     ^                       
      |                                                     static_cast<int>(       )
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:243:53: warning: implicit conversion 'bool' -> 'int' [readability-implicit-bool-conversion]
  243 |                             + "OPR="+std::to_string(lcl.radios[selector].operable);
      |                                                     ^                            
      |                                                     static_cast<int>(            )
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:272:21: warning: the 'empty' method should be used to check for emptiness instead of 'length' [readability-container-size-empty]
  272 |                 if (message.length() > 0) message += ",";
      |                     ^~~~~~~~~~~~~~~~~~~~
      |                     !message.empty()
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:1220:7: note: method 'basic_string<char>'::empty() defined here
 1220 |       empty() const _GLIBCXX_NOEXCEPT
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:272:42: warning: statement should be inside braces [readability-braces-around-statements]
  272 |                 if (message.length() > 0) message += ",";
      |                                          ^               
      |                                           {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:285:12: warning: variable 'userCount' is not initialized [cppcoreguidelines-init-variables]
  285 |     size_t userCount;
      |            ^        
      |                      = 0
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:286:19: warning: variable 'userIDs' is not initialized [cppcoreguidelines-init-variables]
  286 |         mumble_userid_t *userIDs;
      |                          ^      
      |                                  = nullptr
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:287:24: warning: variable 'localChannelID' is not initialized [cppcoreguidelines-init-variables]
  287 |     mumble_channelid_t localChannelID;
      |                        ^             
      |                                       = 0
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:296:7: warning: do not use 'else' after 'return' [readability-else-after-return]
  296 |     } else {
      |       ^~~~~~
  297 |         pluginDbg("There are "+std::to_string(userCount)+" users on this channel.");
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  298 |         if (userCount > 1) {
      |         ~~~~~~~~~~~~~~~~~~~~
  299 |             if (tgtUser > 0) {
      |             ~~~~~~~~~~~~~~~~~~
  300 |                 // a specific user was requested
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  301 |                 // (note: 0 is usually the id of the superuser, ordinary users star with 1)
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  302 |                 if (tgtUser != lcl.mumid) {
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  303 |                     pluginDbg("  sending message to targeted user: "+std::to_string(tgtUser));
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  304 |                     int send_res = mumAPI.sendData(ownPluginID, activeConnection, &tgtUser, 1, reinterpret_cast<const uint8_t *>(message.c_str()), strlen(message.c_str()), dataID.c_str());
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  305 |                     if (send_res != MUMBLE_STATUS_OK) {
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  306 |                         pluginDbg("  message sent ERROR: "+std::to_string(send_res));
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  307 |                     } else {
      |                     ~~~~~~~~
  308 |                         pluginDbg("  message sent to "+std::to_string(userCount-1)+" clients");
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  309 |                     }
      |                     ~
  310 |                 } else {
      |                 ~~~~~~~~
  311 |                     pluginDbg("  ignored targeted user; he is local: id="+std::to_string(tgtUser));
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:304:96: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  304 |                     int send_res = mumAPI.sendData(ownPluginID, activeConnection, &tgtUser, 1, reinterpret_cast<const uint8_t *>(message.c_str()), strlen(message.c_str()), dataID.c_str());
      |                                                                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:317:21: warning: variable name 'o' is too short, expected at least 3 characters [readability-identifier-length]
  317 |                 int o = 0;
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:319:25: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  319 |                     if (userIDs[i] != lcl.mumid) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:320:47: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  320 |                         exclusiveUserIDs[o] = userIDs[i];
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:321:75: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  321 |                         pluginDbg("  sending message to: "+std::to_string(userIDs[i]));
      |                                                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:324:78: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  324 |                         pluginDbg("  ignored local user: id="+std::to_string(userIDs[i]));
      |                                                                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:328:117: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  328 |                 int send_res = mumAPI.sendData(ownPluginID, activeConnection, exclusiveUserIDs.data(), userCount-1, reinterpret_cast<const uint8_t *>(message.c_str()), strlen(message.c_str()), dataID.c_str());
      |                                                                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:361:17: warning: redundant string initialization [readability-redundant-string-init]
  361 |     std::string message = "";
      |                 ^~~~~~~~~~~~
      |                 message
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:370:17: warning: loop variable name 'r' is too short, expected at least 2 characters [readability-identifier-length]
  370 |     for (size_t r = 0; r < lcl.radios.size(); r++) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:373:73: warning: implicit conversion 'bool' -> 'int' [readability-implicit-bool-conversion]
  373 |             message += "COM"+std::to_string(r+1)+"_PTT="+std::to_string(lcl.radios[r].ptt)+",";
      |                                                                         ^                
      |                                                                         static_cast<int>()
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:381:22: warning: variable 'userIDs' is not initialized [cppcoreguidelines-init-variables]
  381 |     mumble_userid_t *userIDs;
      |                      ^      
      |                              = nullptr
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:382:12: warning: variable 'userCount' is not initialized [cppcoreguidelines-init-variables]
  382 |     size_t userCount;
      |            ^        
      |                      = 0
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:392:88: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  392 |             int send_res = mumAPI.sendData(ownPluginID, activeConnection, &tgtUser, 1, reinterpret_cast<const uint8_t *>(message.c_str()), strlen(message.c_str()), dataID.c_str());
      |                                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:404:13: warning: variable name 'o' is too short, expected at least 3 characters [readability-identifier-length]
  404 |         int o = 0;
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:406:17: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  406 |             if (userIDs[i] != lcl.mumid) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:407:39: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  407 |                 exclusiveUserIDs[o] = userIDs[i];
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:408:76: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  408 |                 pluginDbg("  sending combined message to: "+std::to_string(userIDs[i]));
      |                                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:411:70: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  411 |                 pluginDbg("  ignored local user: id="+std::to_string(userIDs[i]));
      |                                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:415:109: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  415 |         int send_res = mumAPI.sendData(ownPluginID, activeConnection, exclusiveUserIDs.data(), userCount-1, reinterpret_cast<const uint8_t *>(message.c_str()), strlen(message.c_str()), dataID.c_str());
      |                                                                                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:428:12: warning: variable 'fgcom_remotecfg_mtx' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  428 | std::mutex fgcom_remotecfg_mtx;  // mutex lock for remote data
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:429:57: warning: variable 'fgcom_remote_clients' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  429 | std::map<mumble_userid_t, std::map<int, fgcom_client> > fgcom_remote_clients; // remote radio config
      |                                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:430:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  430 | bool handlePluginDataReceived(mumble_userid_t senderID, std::string dataID, std::string data) {
      | ~~~~ ^
      | auto                                                                                          -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:430:6: warning: function 'handlePluginDataReceived' has cognitive complexity of 171 (threshold 25) [readability-function-cognitive-complexity]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:434:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  434 |     if (dataID.substr(0,5) == "FGCOM") {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:443:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  443 |         if (std::regex_search(dataID, smc_iid, get_iid_re)) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:445:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  445 |             if (iid < 0) return false; // enforce >= 0 for supplied id
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:454:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  454 |         if (iid > -1 && search == fgcom_remote_clients.end()) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:454:22: note: +1
  454 |         if (iid > -1 && search == fgcom_remote_clients.end()) {
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:461:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  461 |         if (iid > -1 ) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:467:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  467 |         if (dataID == "FGCOM:ICANHAZDATAPLZ") {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:473:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  473 |             if (fgcom_remote_clients[clientID][iid].lastNotification + ntf_ask_answerInterval < std::chrono::system_clock::now()) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:476:15: note: +1, nesting level increased to 3
  476 |             } else {
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:481:16: note: +1, nesting level increased to 2
  481 |         } else if (dataID == "FGCOM:PING") {
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:484:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  484 |             if (clientAlreadyknown) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:487:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  487 |                 while(std::getline(streambuffer, segment, ',')) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:490:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  490 |                         if (fgcom_remote_clients[clientID].count(rmt_iid) > 0) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:494:23: note: +5, including nesting penalty of 4, nesting level increased to 5
  494 |                     } catch (const std::exception& e) {
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:498:15: note: +1, nesting level increased to 3
  498 |             } else {
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:505:16: note: +1, nesting level increased to 2
  505 |         } else if (dataID == "FGCOM:UPD_USR:"+iid_str
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:506:17: note: +1
  506 |                 || dataID == "FGCOM:UPD_LOC:"+iid_str) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:512:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  512 |             while(std::getline(streambuffer, segment, ',')) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:519:21: note: +4, including nesting penalty of 3, nesting level increased to 4
  519 |                     if (std::regex_search(segment, sm, parse_key_value)) {
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:527:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  527 |                         if (curlength > MAX_PLUGINIO_FIELDLENGTH) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:533:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  533 |                         if (token_key == "LON")      fgcom_remote_clients[clientID][iid].lon      = std::stof(token_value);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:534:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  534 |                         if (token_key == "LAT")      fgcom_remote_clients[clientID][iid].lat      = std::stof(token_value);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:535:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  535 |                         if (token_key == "ALT")      fgcom_remote_clients[clientID][iid].alt      = std::stof(token_value);  // ALT in meters above ground!
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:538:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  538 |                         if (token_key == "CALLSIGN") fgcom_remote_clients[clientID][iid].callsign = token_value; 
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:540:23: note: +1, nesting level increased to 4
  540 |                     } else {
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:545:19: note: +4, including nesting penalty of 3, nesting level increased to 4
  545 |                 } catch (const std::exception& e) {
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:551:16: note: +1, nesting level increased to 2
  551 |         } else if (dataID.substr(0, 15+iid_str.length()) == "FGCOM:UPD_COM:"+iid_str+":") {
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:557:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  557 |             if (fgcom_remote_clients[clientID][iid].radios.size() < radio_id+1) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:558:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  558 |                 for (long unsigned int cr = fgcom_remote_clients[clientID][iid].radios.size(); cr < radio_id+1; cr++) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:566:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  566 |             while(std::getline(streambuffer, segment, ',')) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:572:21: note: +4, including nesting penalty of 3, nesting level increased to 4
  572 |                     if (std::regex_search(segment, sm, parse_key_value)) {
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:581:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  581 |                         if (curlength > MAX_PLUGINIO_FIELDLENGTH) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:586:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  586 |                         if (token_key == "FRQ") {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:590:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  590 |                         if (token_key == "CHN") {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:594:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  594 |                         if (token_key == "VLT") fgcom_remote_clients[clientID][iid].radios[radio_id].volts       = std::stof(token_value);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:595:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  595 |                         if (token_key == "PBT") fgcom_remote_clients[clientID][iid].radios[radio_id].power_btn   = (token_value == "1")? true : false;
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:595:136: note: +6, including nesting penalty of 5, nesting level increased to 6
  595 |                         if (token_key == "PBT") fgcom_remote_clients[clientID][iid].radios[radio_id].power_btn   = (token_value == "1")? true : false;
      |                                                                                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:596:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  596 |                         if (token_key == "SRV") fgcom_remote_clients[clientID][iid].radios[radio_id].serviceable = (token_value == "1")? true : false;
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:596:136: note: +6, including nesting penalty of 5, nesting level increased to 6
  596 |                         if (token_key == "SRV") fgcom_remote_clients[clientID][iid].radios[radio_id].serviceable = (token_value == "1")? true : false;
      |                                                                                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:597:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  597 |                         if (token_key == "OPR") fgcom_remote_clients[clientID][iid].radios[radio_id].operable    = (token_value == "1")? true : false;
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:597:136: note: +6, including nesting penalty of 5, nesting level increased to 6
  597 |                         if (token_key == "OPR") fgcom_remote_clients[clientID][iid].radios[radio_id].operable    = (token_value == "1")? true : false;
      |                                                                                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:598:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  598 |                         if (token_key == "PTT") {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:599:58: note: +6, including nesting penalty of 5, nesting level increased to 6
  599 |                             bool v = (token_value == "1")? true : false;
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:602:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  602 |                         if (token_key == "VOL") fgcom_remote_clients[clientID][iid].radios[radio_id].volume      = std::stof(token_value);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:603:25: note: +5, including nesting penalty of 4, nesting level increased to 5
  603 |                         if (token_key == "PWR") fgcom_remote_clients[clientID][iid].radios[radio_id].pwr         = std::stof(token_value);      
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:605:23: note: +1, nesting level increased to 4
  605 |                     } else {
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:610:19: note: +4, including nesting penalty of 3, nesting level increased to 4
  610 |                 } catch (const std::exception& e) {
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:617:11: note: +1, nesting level increased to 2
  617 |         } else {
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:626:7: note: +1, nesting level increased to 1
  626 |     } else {
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:430:69: warning: the parameter 'dataID' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
  430 | bool handlePluginDataReceived(mumble_userid_t senderID, std::string dataID, std::string data) {
      |                                                                     ^
      |                                                         const      &
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:430:89: warning: the parameter 'data' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
  430 | bool handlePluginDataReceived(mumble_userid_t senderID, std::string dataID, std::string data) {
      |                                                                                         ^
      |                                                                             const      &
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:434:25: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  434 |     if (dataID.substr(0,5) == "FGCOM") {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:445:25: warning: statement should be inside braces [readability-braces-around-statements]
  445 |             if (iid < 0) return false; // enforce >= 0 for supplied id
      |                         ^                                             
      |                          {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:500:51: warning: narrowing conversion from 'mumble_userid_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [cppcoreguidelines-narrowing-conversions]
  500 |                 notifyRemotes(NTFY_ALL, NTFY_ASK, clientID);
      |                                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:518:33: warning: variable name 'sm' is too short, expected at least 3 characters [readability-identifier-length]
  518 |                     std::smatch sm;
      |                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:523:81: warning: string concatenation results in allocation of unnecessary temporary strings; consider using 'operator+=' or 'string::append()' instead [performance-inefficient-string-concatenation]
  523 |                         pluginDbg("[mum_pluginIO] Parsing token: "+token_key+"="+token_value);
      |                                                                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:526:41: warning: narrowing conversion from 'size_type' (aka 'unsigned long') to signed type 'int' is implementation-defined [cppcoreguidelines-narrowing-conversions]
  526 |                         int curlength = token_value.length();
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:533:48: warning: statement should be inside braces [readability-braces-around-statements]
  533 |                         if (token_key == "LON")      fgcom_remote_clients[clientID][iid].lon      = std::stof(token_value);
      |                                                ^                                                                           
      |                                                 {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:534:48: warning: statement should be inside braces [readability-braces-around-statements]
  534 |                         if (token_key == "LAT")      fgcom_remote_clients[clientID][iid].lat      = std::stof(token_value);
      |                                                ^                                                                           
      |                                                 {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:535:48: warning: statement should be inside braces [readability-braces-around-statements]
  535 |                         if (token_key == "ALT")      fgcom_remote_clients[clientID][iid].alt      = std::stof(token_value);  // ALT in meters above ground!
      |                                                ^                                                                                                           
      |                                                 {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:538:53: warning: statement should be inside braces [readability-braces-around-statements]
  538 |                         if (token_key == "CALLSIGN") fgcom_remote_clients[clientID][iid].callsign = token_value; 
      |                                                     ^
      |                                                      {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:551:37: warning: 15 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  551 |         } else if (dataID.substr(0, 15+iid_str.length()) == "FGCOM:UPD_COM:"+iid_str+":") {
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:554:66: warning: 15 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  554 |             long unsigned int radio_id = std::stoi(dataID.substr(15+iid_str.length())); // when segfault: indicates problem with the implemented udp protocol
      |                                                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:559:64: warning: use emplace_back instead of push_back [modernize-use-emplace]
  559 |                     fgcom_remote_clients[clientID][iid].radios.push_back(fgcom_radio()); // add new radio instance with default values
      |                                                                ^~~~~~~~~~~~~~~~~~~~~~~
      |                                                                emplace_back(
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:571:33: warning: variable name 'sm' is too short, expected at least 3 characters [readability-identifier-length]
  571 |                     std::smatch sm;
      |                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:577:81: warning: string concatenation results in allocation of unnecessary temporary strings; consider using 'operator+=' or 'string::append()' instead [performance-inefficient-string-concatenation]
  577 |                         pluginDbg("[mum_pluginIO] Parsing token: "+token_key+"="+token_value);
      |                                                                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:580:41: warning: narrowing conversion from 'size_type' (aka 'unsigned long') to signed type 'int' is implementation-defined [cppcoreguidelines-narrowing-conversions]
  580 |                         int curlength = token_value.length();
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:594:48: warning: statement should be inside braces [readability-braces-around-statements]
  594 |                         if (token_key == "VLT") fgcom_remote_clients[clientID][iid].radios[radio_id].volts       = std::stof(token_value);
      |                                                ^                                                                                          
      |                                                 {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:595:48: warning: statement should be inside braces [readability-braces-around-statements]
  595 |                         if (token_key == "PBT") fgcom_remote_clients[clientID][iid].radios[radio_id].power_btn   = (token_value == "1")? true : false;
      |                                                ^                                                                                                      
      |                                                 {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:595:138: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
  595 |                         if (token_key == "PBT") fgcom_remote_clients[clientID][iid].radios[radio_id].power_btn   = (token_value == "1")? true : false;
      |                                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |                                                                                                                    token_value == "1"
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:596:48: warning: statement should be inside braces [readability-braces-around-statements]
  596 |                         if (token_key == "SRV") fgcom_remote_clients[clientID][iid].radios[radio_id].serviceable = (token_value == "1")? true : false;
      |                                                ^                                                                                                      
      |                                                 {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:596:138: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
  596 |                         if (token_key == "SRV") fgcom_remote_clients[clientID][iid].radios[radio_id].serviceable = (token_value == "1")? true : false;
      |                                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |                                                                                                                    token_value == "1"
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:597:48: warning: statement should be inside braces [readability-braces-around-statements]
  597 |                         if (token_key == "OPR") fgcom_remote_clients[clientID][iid].radios[radio_id].operable    = (token_value == "1")? true : false;
      |                                                ^                                                                                                      
      |                                                 {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:597:138: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
  597 |                         if (token_key == "OPR") fgcom_remote_clients[clientID][iid].radios[radio_id].operable    = (token_value == "1")? true : false;
      |                                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |                                                                                                                    token_value == "1"
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:599:34: warning: variable name 'v' is too short, expected at least 3 characters [readability-identifier-length]
  599 |                             bool v = (token_value == "1")? true : false;
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:599:60: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
  599 |                             bool v = (token_value == "1")? true : false;
      |                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |                                      token_value == "1"
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:602:48: warning: statement should be inside braces [readability-braces-around-statements]
  602 |                         if (token_key == "VOL") fgcom_remote_clients[clientID][iid].radios[radio_id].volume      = std::stof(token_value);
      |                                                ^                                                                                          
      |                                                 {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:603:48: warning: statement should be inside braces [readability-braces-around-statements]
  603 |                         if (token_key == "PWR") fgcom_remote_clients[clientID][iid].radios[radio_id].pwr         = std::stof(token_value);      
      |                                                ^
      |                                                 {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:626:7: warning: do not use 'else' after 'return' [readability-else-after-return]
  626 |     } else {
      |       ^~~~~~
  627 |         return false; // packet does not belong to us. other plugins should also receive it
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  628 |     }
      |     ~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:633:40: warning: variable 'lastNotifiedState' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  633 | std::map<int, fgcom_notificationState> lastNotifiedState;  // holds the last data we did sent out, so we can detect changes for notification (and how much)
      |                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:635:6: warning: function 'fgcom_notifyThread' has cognitive complexity of 35 (threshold 25) [readability-function-cognitive-complexity]
  635 | void fgcom_notifyThread() {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:636:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  636 |     while (true) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:637:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  637 |         if (fgcom_isPluginActive()) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:644:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  644 |             for (const auto &idty : fgcom_local_client) {
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:650:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  650 |                 if (fabs(lcl.lat - lastNotifiedState[iid].data.lat) >= 0.0005) { // about 40-50m
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:654:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  654 |                 if (fabs(lcl.lon - lastNotifiedState[iid].data.lon) >= 0.0005) { // about 40-50m
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:658:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  658 |                 if (fabs(lcl.alt - lastNotifiedState[iid].data.alt) >= 5) {  // 5 meters
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:662:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  662 |                 if (lcl.callsign != lastNotifiedState[iid].data.callsign) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:670:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  670 |                 if (!notifyUserData && !notifyLocationData && std::chrono::system_clock::now() > lastNotifiedState[iid].lastPing + notifyPingInterval) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:670:60: note: +1
  670 |                 if (!notifyUserData && !notifyLocationData && std::chrono::system_clock::now() > lastNotifiedState[iid].lastPing + notifyPingInterval) {
      |                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:677:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  677 |                 if (notifyLocationData) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:684:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  684 |                 if (notifyUserData) {
      |                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:650:72: warning: 0.0005 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  650 |                 if (fabs(lcl.lat - lastNotifiedState[iid].data.lat) >= 0.0005) { // about 40-50m
      |                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:654:72: warning: 0.0005 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  654 |                 if (fabs(lcl.lon - lastNotifiedState[iid].data.lon) >= 0.0005) { // about 40-50m
      |                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.cpp:658:72: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  658 |                 if (fabs(lcl.alt - lastNotifiedState[iid].data.alt) >= 5) {  // 5 meters
      |                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:25:9: warning: macro 'NOTIFYINTERVAL' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   25 | #define NOTIFYINTERVAL      1000  // minimal time between notifications (ms)
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:26:9: warning: macro 'NOTIFYPINGINTERVAL' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   26 | #define NOTIFYPINGINTERVAL 10000  // time between pings (ms), if no notification was done
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:28:9: warning: macro 'MAX_PLUGINIO_FIELDLENGTH' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   28 | #define MAX_PLUGINIO_FIELDLENGTH      32    // maximum plugin-io field size, should correspond to MAX_UDPSRV_FIELDLENGTH
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:30:9: warning: macro 'MIN_NTFYANSWER_INTVAL' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   30 | #define MIN_NTFYANSWER_INTVAL 1000   // minimum time interval between answers to incoming NTF_ASK requests
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:34:26: warning: variable 'mumAPI' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   34 | extern MumbleAPI_v_1_0_x mumAPI;
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:35:28: warning: variable 'activeConnection' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   35 | extern mumble_connection_t activeConnection;
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:36:27: warning: variable 'ownPluginID' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   36 | extern mumble_plugin_id_t ownPluginID;
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:37:24: warning: variable 'localMumId' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   37 | extern mumble_userid_t localMumId;
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:41:6: warning: enum 'FGCOM_NOTIFY_T' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   41 | enum FGCOM_NOTIFY_T {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:56:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   56 | std::ostream& pLog(std::ostream& stream);
      | ~~~~~~~~~~~~~ ^                         
      | auto                                     -> std::ostream&
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:75:47: warning: variable 'lastNotifiedState' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   75 | extern std::map<int, fgcom_notificationState> lastNotifiedState;
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:106:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  106 | bool handlePluginDataReceived(mumble_userid_t senderID, std::string dataID, std::string data);
      | ~~~~ ^                                                                                       
      | auto                                                                                          -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/io_plugin.h:129:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | bool fgcom_isConnectedToServer();
      | ~~~~ ^                          
      | auto                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumbleAPI_v_1_0_x.h:16:9: warning: macro 'MUMBLE_PLUGIN_API_MAJOR_MACRO' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   16 | #define MUMBLE_PLUGIN_API_MAJOR_MACRO 1
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumbleAPI_v_1_0_x.h:17:9: warning: macro 'MUMBLE_PLUGIN_API_MINOR_MACRO' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   17 | #define MUMBLE_PLUGIN_API_MINOR_MACRO 0
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumbleAPI_v_1_0_x.h:18:9: warning: macro 'MUMBLE_PLUGIN_API_PATCH_MACRO' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   18 | #define MUMBLE_PLUGIN_API_PATCH_MACRO 3
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumbleAPI_v_1_0_x.h:28:9: warning: function-like macro 'MUMBLE_CONCAT_HELPER' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
   28 | #define MUMBLE_CONCAT_HELPER(a, b) a##_##b
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumbleAPI_v_1_0_x.h:29:9: warning: function-like macro 'MUMBLE_CONCAT' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
   29 | #define MUMBLE_CONCAT(a, b) MUMBLE_CONCAT_HELPER(a, b)
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumbleAPI_v_1_0_x.h:33:9: warning: function-like macro 'MUMBLE_API_CAST' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
   33 | #define MUMBLE_API_CAST(ptrName) (*((struct MUMBLE_API_STRUCT *) ptrName))
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumbleAPI_v_1_0_x.h:530:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  530 | typedef struct MumbleAPI_v_1_0_x mumble_api_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_api_t = struct MumbleAPI_v_1_0_x
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:29:1: warning: replace macro with enum [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
   29 | #define MUMBLE_PLUGIN_FUNCTIONS_MAJOR_MACRO 1
      | ^~~~~~~                                      
      |                                             =,
   30 | #define MUMBLE_PLUGIN_FUNCTIONS_MINOR_MACRO 0
      | ~~~~~~~                                      
      |                                             =,
   31 | #define MUMBLE_PLUGIN_FUNCTIONS_PATCH_MACRO 1
      | ~~~~~~~
      |                                             =
   32 | 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:29:9: warning: macro 'MUMBLE_PLUGIN_FUNCTIONS_MAJOR_MACRO' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
   29 | #define MUMBLE_PLUGIN_FUNCTIONS_MAJOR_MACRO 1
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:29:9: warning: macro 'MUMBLE_PLUGIN_FUNCTIONS_MAJOR_MACRO' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:30:9: warning: macro 'MUMBLE_PLUGIN_FUNCTIONS_MINOR_MACRO' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
   30 | #define MUMBLE_PLUGIN_FUNCTIONS_MINOR_MACRO 0
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:30:9: warning: macro 'MUMBLE_PLUGIN_FUNCTIONS_MINOR_MACRO' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:31:9: warning: macro 'MUMBLE_PLUGIN_FUNCTIONS_PATCH_MACRO' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
   31 | #define MUMBLE_PLUGIN_FUNCTIONS_PATCH_MACRO 1
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:31:9: warning: macro 'MUMBLE_PLUGIN_FUNCTIONS_PATCH_MACRO' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:53:56: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   53 | PLUGIN_EXPORT mumble_error_t PLUGIN_CALLING_CONVENTION mumble_init(uint32_t id);
      |               ~~~~~~~~~~~~~~                           ^                       
      |               auto                                                              -> mumble_error_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:53:77: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
   53 | PLUGIN_EXPORT mumble_error_t PLUGIN_CALLING_CONVENTION mumble_init(uint32_t id);
      |                                                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:64:68: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   64 | PLUGIN_EXPORT struct MumbleStringWrapper PLUGIN_CALLING_CONVENTION mumble_getName();
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^               
      |               auto                                                                  -> struct MumbleStringWrapper
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:72:58: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   72 | PLUGIN_EXPORT mumble_version_t PLUGIN_CALLING_CONVENTION mumble_getAPIVersion();
      |               ~~~~~~~~~~~~~~~~                           ^                     
      |               auto                                                              -> mumble_version_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:133:58: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  133 | PLUGIN_EXPORT mumble_version_t PLUGIN_CALLING_CONVENTION mumble_getVersion();
      |               ~~~~~~~~~~~~~~~~                           ^                  
      |               auto                                                           -> mumble_version_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:140:68: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  140 | PLUGIN_EXPORT struct MumbleStringWrapper PLUGIN_CALLING_CONVENTION mumble_getAuthor();
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^                 
      |               auto                                                                    -> struct MumbleStringWrapper
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:147:68: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  147 | PLUGIN_EXPORT struct MumbleStringWrapper PLUGIN_CALLING_CONVENTION mumble_getDescription();
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^                      
      |               auto                                                                         -> struct MumbleStringWrapper
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:155:50: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  155 | PLUGIN_EXPORT uint32_t PLUGIN_CALLING_CONVENTION mumble_getFeatures();
      |               ~~~~~~~~                           ^                   
      |               auto                                                    -> uint32_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:170:50: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  170 | PLUGIN_EXPORT uint32_t PLUGIN_CALLING_CONVENTION mumble_deactivateFeatures(uint32_t features);
      |               ~~~~~~~~                           ^                                           
      |               auto                                                                            -> uint32_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:193:49: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  193 | PLUGIN_EXPORT uint8_t PLUGIN_CALLING_CONVENTION mumble_initPositionalData(const char *const *programNames,
      |               ~~~~~~~                           ^
      |               auto
  194 |                                                                                                                                                   const uint64_t *programPIDs,
  195 |                                                                                                                                                   size_t programCount);
      |                                                                                                                                                                       
      |                                                                                                                                                                        -> uint8_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:221:46: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  221 | PLUGIN_EXPORT bool PLUGIN_CALLING_CONVENTION mumble_fetchPositionalData(float *avatarPos, float *avatarDir,
      |               ~~~~                           ^
      |               auto
  222 |                                                                                                                                                 float *avatarAxis, float *cameraPos,
  223 |                                                                                                                                                 float *cameraDir, float *cameraAxis,
  224 |                                                                                                                                                 const char **context, const char **identity);
      |                                                                                                                                                                                             
      |                                                                                                                                                                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:304:46: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  304 | PLUGIN_EXPORT bool PLUGIN_CALLING_CONVENTION mumble_onAudioInput(short *inputPCM, uint32_t sampleCount,
      |               ~~~~                           ^
      |               auto
  305 |                                                                                                                                  uint16_t channelCount, uint32_t sampleRate,
  306 |                                                                                                                                  bool isSpeech);
      |                                                                                                                                                
      |                                                                                                                                                 -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:323:46: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  323 | PLUGIN_EXPORT bool PLUGIN_CALLING_CONVENTION mumble_onAudioSourceFetched(float *outputPCM, uint32_t sampleCount,
      |               ~~~~                           ^
      |               auto
  324 |                                                                                                                                                  uint16_t channelCount, uint32_t sampleRate,
  325 |                                                                                                                                                  bool isSpeech, mumble_userid_t userID);
      |                                                                                                                                                                                        
      |                                                                                                                                                                                         -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:339:46: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  339 | PLUGIN_EXPORT bool PLUGIN_CALLING_CONVENTION mumble_onAudioOutputAboutToPlay(float *outputPCM, uint32_t sampleCount,
      |               ~~~~                           ^
      |               auto
  340 |                                                                                                                                                          uint16_t channelCount,
  341 |                                                                                                                                                          uint32_t sampleRate);
      |                                                                                                                                                                              
      |                                                                                                                                                                               -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:353:46: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  353 | PLUGIN_EXPORT bool PLUGIN_CALLING_CONVENTION mumble_onReceiveData(mumble_connection_t connection,
      |               ~~~~                           ^
      |               auto
  354 |                                                                                                                                   mumble_userid_t sender, const uint8_t *data,
  355 |                                                                                                                                   size_t dataLength, const char *dataID);
      |                                                                                                                                                                         
      |                                                                                                                                                                          -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:424:46: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  424 | PLUGIN_EXPORT bool PLUGIN_CALLING_CONVENTION mumble_hasUpdate();
      |               ~~~~                           ^                 
      |               auto                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/MumblePlugin_v_1_0_x.h:431:68: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  431 | PLUGIN_EXPORT struct MumbleStringWrapper PLUGIN_CALLING_CONVENTION mumble_getUpdateDownloadURL();
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^                            
      |               auto                                                                               -> struct MumbleStringWrapper
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:35:6: warning: enum 'Mumble_PluginFeature' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   35 | enum Mumble_PluginFeature {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:45:6: warning: enum 'Mumble_TalkingState' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   45 | enum Mumble_TalkingState {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:57:6: warning: enum 'Mumble_TransmissionMode' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   57 | enum Mumble_TransmissionMode { MUMBLE_TM_CONTINOUS, MUMBLE_TM_VOICE_ACTIVATION, MUMBLE_TM_PUSH_TO_TALK };
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:61:6: warning: enum 'Mumble_ErrorCode' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   61 | enum Mumble_ErrorCode {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:89:6: warning: enum 'Mumble_PositionalDataErrorCode' uses a larger base type ('unsigned int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   89 | enum Mumble_PositionalDataErrorCode {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:100:6: warning: enum 'Mumble_SettingsKey' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  100 | enum Mumble_SettingsKey {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:112:6: warning: enum 'Mumble_KeyCode' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int16_t' (2 bytes) as the base type to reduce its size [performance-enum-size]
  112 | enum Mumble_KeyCode {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:247:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  247 |         bool operator<(const MumbleVersion &other) const {
      |         ~~~~ ^
      |         auto                                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:258:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  258 |         bool operator>(const MumbleVersion &other) const {
      |         ~~~~ ^
      |         auto                                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:269:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  269 |         bool operator>=(const MumbleVersion &other) const {
      |         ~~~~ ^
      |         auto                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:280:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  280 |         bool operator<=(const MumbleVersion &other) const {
      |         ~~~~ ^
      |         auto                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:291:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  291 |         bool operator==(const MumbleVersion &other) const {
      |         ~~~~ ^
      |         auto                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:295:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  295 |         bool operator!=(const MumbleVersion &other) const {
      |         ~~~~ ^
      |         auto                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:321:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  321 | inline const char *mumble_errorMessage(int16_t errorCode) {
      |        ~~~~~~~~~~~~^
      |        auto                                               -> const char *
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:389:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  389 | typedef enum Mumble_TalkingState mumble_talking_state_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_talking_state_t = enum Mumble_TalkingState
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:391:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  391 | typedef enum Mumble_TransmissionMode mumble_transmission_mode_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_transmission_mode_t = enum Mumble_TransmissionMode
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:393:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  393 | typedef struct MumbleVersion mumble_version_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_version_t = struct MumbleVersion
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:395:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  395 | typedef int32_t mumble_connection_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_connection_t = int32_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:397:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  397 | typedef uint32_t mumble_userid_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_userid_t = uint32_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:399:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  399 | typedef int32_t mumble_channelid_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_channelid_t = int32_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:401:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  401 | typedef enum Mumble_ErrorCode mumble_error_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_error_t = enum Mumble_ErrorCode
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:403:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  403 | typedef uint32_t mumble_plugin_id_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_plugin_id_t = uint32_t
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:405:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  405 | typedef enum Mumble_SettingsKey mumble_settings_key_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_settings_key_t = enum Mumble_SettingsKey
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/mumble/PluginComponents_v_1_0_x.h:407:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  407 | typedef enum Mumble_KeyCode mumble_keycode_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mumble_keycode_t = enum Mumble_KeyCode
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:34:9: warning: macro 'EARTH_RADIUS_CONST' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   34 | #define EARTH_RADIUS_CONST 3.57  // earth radius factor constant for m/km
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:35:9: warning: macro 'EARTH_RADIUS_AVG' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   35 | #define EARTH_RADIUS_AVG   6371  // earth radius constant in km
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:65:9: warning: 'frequency' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   40 |         frequency   = "";
      |         ^~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:66:9: warning: 'dialedFRQ' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   41 |         dialedFRQ   = "";
      |         ^~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:67:9: warning: 'power_btn' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   42 |         power_btn   = true;
      |         ^~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:68:9: warning: 'volts' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   43 |         volts       = 12;
      |         ^~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:68:23: warning: 12 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   68 |         volts       = 12;
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:69:9: warning: 'serviceable' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   44 |         serviceable = true;
      |         ^~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:70:9: warning: 'ptt' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   45 |         ptt         = false;
      |         ^~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:71:9: warning: 'ptt_req' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   46 |         ptt_req     = false;
      |         ^~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:72:9: warning: 'volume' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   47 |         volume      = 1.0;
      |         ^~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:73:9: warning: 'pwr' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   48 |         pwr         = 10;
      |         ^~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:73:23: warning: 10 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   73 |         pwr         = 10;
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:74:9: warning: 'operable' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   49 |         operable    = true;
      |         ^~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:75:9: warning: 'squelch' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   50 |         squelch     = 0.1;
      |         ^~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:75:23: warning: 0.1 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   75 |         squelch     = 0.1;
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:76:9: warning: 'rdfEnabled' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   51 |         rdfEnabled  = false;
      |         ^~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:77:9: warning: 'channelWidth' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   52 |         channelWidth = -1;   // let the selected radio model decide on defaults
      |         ^~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:78:9: warning: 'publish' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   53 |         publish     = true;
      |         ^~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:81:9: warning: 'antenna_type' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   56 |         antenna_type = "vertical";
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:82:9: warning: 'frequency_band' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   57 |         frequency_band = "amateur";
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:83:9: warning: 'power_efficiency' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   58 |         power_efficiency = 0.8f;
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:83:28: warning: 0.8f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   83 |         power_efficiency = 0.8f;
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:83:28: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:84:9: warning: 'power_limiting_enabled' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   59 |         power_limiting_enabled = true;
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:85:9: warning: 'swr' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   60 |         swr = 1.0f;
      |         ^~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:85:15: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   85 |         swr = 1.0f;
      |               ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:86:9: warning: 'temperature' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   61 |         temperature = 25.0f;
      |         ^~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:86:23: warning: 25.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   86 |         temperature = 25.0f;
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:86:23: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:87:9: warning: 'battery_level' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   62 |         battery_level = 1.0f;
      |         ^~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:87:25: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   87 |         battery_level = 1.0f;
      |                         ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:100:29: warning: initializer for base class 'fgcom_radio' is redundant [readability-redundant-member-init]
  100 |     fgcom_amateur_radio() : fgcom_radio() {
      |                             ^~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:101:9: warning: 'band' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   93 |     std::string band;           // "160m", "80m", "40m", "20m", etc.
      |                     
      |                     {""}
   94 |     std::string mode;           // "CW", "LSB", "USB", "NFM", "AM"
   95 |     std::string grid_locator;   // Maidenhead grid square
   96 |     float power_watts;          // Transmit power (50W-1000W)
   97 |     bool is_amateur;            // Amateur radio flag
   98 |     int itu_region;             // ITU Region (1, 2, 3)
   99 |     
  100 |     fgcom_amateur_radio() : fgcom_radio() {
  101 |         band = "";
      |         ^~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:102:9: warning: 'mode' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   94 |     std::string mode;           // "CW", "LSB", "USB", "NFM", "AM"
      |                     
      |                     {"USB"}
   95 |     std::string grid_locator;   // Maidenhead grid square
   96 |     float power_watts;          // Transmit power (50W-1000W)
   97 |     bool is_amateur;            // Amateur radio flag
   98 |     int itu_region;             // ITU Region (1, 2, 3)
   99 |     
  100 |     fgcom_amateur_radio() : fgcom_radio() {
  101 |         band = "";
  102 |         mode = "USB";
      |         ^~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:103:9: warning: 'grid_locator' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   95 |     std::string grid_locator;   // Maidenhead grid square
      |                             
      |                             {""}
   96 |     float power_watts;          // Transmit power (50W-1000W)
   97 |     bool is_amateur;            // Amateur radio flag
   98 |     int itu_region;             // ITU Region (1, 2, 3)
   99 |     
  100 |     fgcom_amateur_radio() : fgcom_radio() {
  101 |         band = "";
  102 |         mode = "USB";
  103 |         grid_locator = "";
      |         ^~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:104:9: warning: 'power_watts' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   96 |     float power_watts;          // Transmit power (50W-1000W)
      |                      
      |                      {100.0}
   97 |     bool is_amateur;            // Amateur radio flag
   98 |     int itu_region;             // ITU Region (1, 2, 3)
   99 |     
  100 |     fgcom_amateur_radio() : fgcom_radio() {
  101 |         band = "";
  102 |         mode = "USB";
  103 |         grid_locator = "";
  104 |         power_watts = 100.0;
      |         ^~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:105:9: warning: 'is_amateur' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   97 |     bool is_amateur;            // Amateur radio flag
      |                    
      |                    {false}
   98 |     int itu_region;             // ITU Region (1, 2, 3)
   99 |     
  100 |     fgcom_amateur_radio() : fgcom_radio() {
  101 |         band = "";
  102 |         mode = "USB";
  103 |         grid_locator = "";
  104 |         power_watts = 100.0;
  105 |         is_amateur = false;
      |         ^~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:106:9: warning: 'itu_region' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
   98 |     int itu_region;             // ITU Region (1, 2, 3)
      |                   
      |                   {1}
   99 |     
  100 |     fgcom_amateur_radio() : fgcom_radio() {
  101 |         band = "";
  102 |         mode = "USB";
  103 |         grid_locator = "";
  104 |         power_watts = 100.0;
  105 |         is_amateur = false;
  106 |         itu_region = 1;  // Default to Region 1
      |         ^~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:119:9: warning: 'quality' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
  114 |     float quality;        // 0.0=no signal, 1.0=perfect signal
      |                  
      |                  {-1}
  115 |     float direction;      // 0.0=north, 90=east, 180=south, 270=west
  116 |     float verticalAngle;  // 0.0=straight, 90=above, -90=below
  117 |     
  118 |     fgcom_radiowave_signal()  {
  119 |         quality       = -1;
      |         ^~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:120:9: warning: 'direction' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
  115 |     float direction;      // 0.0=north, 90=east, 180=south, 270=west
      |                    
      |                    {-1}
  116 |     float verticalAngle;  // 0.0=straight, 90=above, -90=below
  117 |     
  118 |     fgcom_radiowave_signal()  {
  119 |         quality       = -1;
  120 |         direction     = -1;
      |         ^~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:121:9: warning: 'verticalAngle' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
  116 |     float verticalAngle;  // 0.0=straight, 90=above, -90=below
      |                        
      |                        {-1}
  117 |     
  118 |     fgcom_radiowave_signal()  {
  119 |         quality       = -1;
  120 |         direction     = -1;
  121 |         verticalAngle = -1;
      |         ^~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:139:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  139 | bool fgcom_radio_updateOperable(fgcom_radio &r);
      | ~~~~ ^                                         
      | auto                                            -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:139:46: warning: parameter name 'r' is too short, expected at least 3 characters [readability-identifier-length]
  139 | bool fgcom_radio_updateOperable(fgcom_radio &r);
      |                                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:148:7: warning: class 'FGCom_radiowaveModel' defines a default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
  148 | class FGCom_radiowaveModel {
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:163:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  163 |     virtual std::string getType() = 0;  // pure-virtual: cannot be provided by the base class
      |             ~~~~~~~~~~~ ^
      |             auto                  -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:178:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  178 |     virtual fgcom_radiowave_signal getSignal(double lat1, double lon1, float alt1, double lat2, double lon2, float alt2, float power) = 0;
      |             ~~~~~~~~~~~~~~~~~~~~~~ ^
      |             auto                                                                                                                      -> fgcom_radiowave_signal
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:187:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  187 |     virtual std::string conv_chan2freq(std::string frq) = 0;
      |             ~~~~~~~~~~~ ^
      |             auto                                        -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:196:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  196 |     virtual std::string conv_freq2chan(std::string frq) = 0;
      |             ~~~~~~~~~~~ ^
      |             auto                                        -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:210:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  210 |     virtual float getFrqMatch(fgcom_radio r1, fgcom_radio r2) = 0;
      |             ~~~~~ ^
      |             auto                                              -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:210:43: warning: parameter name 'r1' is too short, expected at least 3 characters [readability-identifier-length]
  210 |     virtual float getFrqMatch(fgcom_radio r1, fgcom_radio r2) = 0;
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:210:59: warning: parameter name 'r2' is too short, expected at least 3 characters [readability-identifier-length]
  210 |     virtual float getFrqMatch(fgcom_radio r1, fgcom_radio r2) = 0;
      |                                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:249:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  249 |     virtual float getChannelAlignment(float frq1_real, float frq2_real, float width_kHz, float core_kHz);
      |             ~~~~~ ^                                                                                     
      |             auto                                                                                         -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:258:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  258 |     virtual bool isCompatible(FGCom_radiowaveModel *otherModel);
      |             ~~~~ ^                                             
      |             auto                                                -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:267:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  267 |     virtual double getDistToHorizon(float h);
      |             ~~~~~~ ^                        
      |             auto                             -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:267:43: warning: parameter name 'h' is too short, expected at least 3 characters [readability-identifier-length]
  267 |     virtual double getDistToHorizon(float h);
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:278:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  278 |     virtual double heightAboveHorizon(double dist, float hA, float hB);
      |             ~~~~~~ ^                                                  
      |             auto                                                       -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:278:58: warning: parameter name 'hA' is too short, expected at least 3 characters [readability-identifier-length]
  278 |     virtual double heightAboveHorizon(double dist, float hA, float hB);
      |                                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:278:68: warning: parameter name 'hB' is too short, expected at least 3 characters [readability-identifier-length]
  278 |     virtual double heightAboveHorizon(double dist, float hA, float hB);
      |                                                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:288:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  288 |     virtual double getSlantDistance(double surfacedist, double hah);
      |             ~~~~~~ ^                                               
      |             auto                                                    -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:298:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  298 |     virtual double degreeAboveHorizon(double surfacedist, double hah);
      |             ~~~~~~ ^                                                 
      |             auto                                                      -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:309:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  309 |     virtual double getDirection(double lat1, double lon1, double lat2, double lon2);
      |             ~~~~~~ ^                                                               
      |             auto                                                                    -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:321:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  321 |     virtual double getSurfaceDistance(double lat1, double lon1, double lat2, double lon2);
      |             ~~~~~~ ^                                                                     
      |             auto                                                                          -> double
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:340:50: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  340 |     static std::unique_ptr<FGCom_radiowaveModel> selectModel(std::string freq);
      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^                            
      |            auto                                                                -> std::unique_ptr<FGCom_radiowaveModel>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h:363:40: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  363 |     static fgcom_radiowave_freqConvRes splitFreqString(std::string frq);
      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^                               
      |            auto                                                         -> fgcom_radiowave_freqConvRes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:9:47: warning: variable 'g_vehicle_dynamics_manager' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
    9 | std::unique_ptr<FGCom_VehicleDynamicsManager> g_vehicle_dynamics_manager = nullptr;
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:17:60: warning: 300 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   17 |     : auto_cleanup_enabled(true), cleanup_interval_seconds(300) {
      |                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:21:31: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
   21 | FGCom_VehicleDynamicsManager::~FGCom_VehicleDynamicsManager() {
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:25:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   25 | bool FGCom_VehicleDynamicsManager::registerVehicle(const std::string& vehicle_id, const std::string& vehicle_type) {
      | ~~~~                               ^
      | auto                                                                                                               -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:42:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   42 | bool FGCom_VehicleDynamicsManager::unregisterVehicle(const std::string& vehicle_id) {
      | ~~~~                               ^
      | auto                                                                                -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:45:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
   45 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:54:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   54 | bool FGCom_VehicleDynamicsManager::updateVehiclePosition(const std::string& vehicle_id, const fgcom_vehicle_position& position) {
      | ~~~~                               ^
      | auto                                                                                                                            -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:57:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
   57 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:66:70: warning: 0.01 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   66 |     if (std::abs(it->second.position.latitude - position.latitude) > 0.01 ||
      |                                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:67:72: warning: 0.01 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   67 |         std::abs(it->second.position.longitude - position.longitude) > 0.01) {
      |                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:74:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   74 | bool FGCom_VehicleDynamicsManager::updateVehicleAttitude(const std::string& vehicle_id, const fgcom_vehicle_attitude& attitude) {
      | ~~~~                               ^
      | auto                                                                                                                            -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:77:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
   77 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:93:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   93 | bool FGCom_VehicleDynamicsManager::updateVehicleVelocity(const std::string& vehicle_id, const fgcom_vehicle_velocity& velocity) {
      | ~~~~                               ^
      | auto                                                                                                                            -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:96:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
   96 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:106:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  106 | bool FGCom_VehicleDynamicsManager::updateVehicleDynamics(const std::string& vehicle_id, const fgcom_vehicle_dynamics& dynamics) {
      | ~~~~                               ^
      | auto                                                                                                                            -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:109:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  109 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:119:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  119 | bool FGCom_VehicleDynamicsManager::addAntenna(const std::string& vehicle_id, const fgcom_antenna_orientation& antenna) {
      | ~~~~                               ^
      | auto                                                                                                                   -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:122:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  122 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:139:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  139 | bool FGCom_VehicleDynamicsManager::removeAntenna(const std::string& vehicle_id, const std::string& antenna_id) {
      | ~~~~                               ^
      | auto                                                                                                           -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:142:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  142 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:161:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  161 | bool FGCom_VehicleDynamicsManager::updateAntennaOrientation(const std::string& vehicle_id, const std::string& antenna_id,
      | ~~~~                               ^
      | auto
  162 |                                                            const fgcom_antenna_orientation& orientation) {
      |                                                                                                          -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:165:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  165 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:185:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  185 | bool FGCom_VehicleDynamicsManager::rotateAntenna(const std::string& vehicle_id, const std::string& antenna_id,
      | ~~~~                               ^
      | auto
  186 |                                                 float target_azimuth, float target_elevation, bool immediate) {
      |                                                                                                               -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:189:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  189 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:206:47: warning: 90.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  206 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:206:47: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  206 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                                               ^   ~
      |                                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:206:63: warning: 90.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  206 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:206:63: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  206 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                                                               ^   ~
      |                                                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:211:47: warning: 90.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  211 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:211:47: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  211 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                                               ^   ~
      |                                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:211:63: warning: 90.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  211 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:211:63: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  211 |         antenna_it->elevation_deg = std::max(-90.0f, std::min(90.0f, target_elevation));
      |                                                               ^   ~
      |                                                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:219:55: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  219 | VehicleDynamicsResponse FGCom_VehicleDynamicsManager::getVehicleDynamics(const std::string& vehicle_id) {
      | ~~~~~~~~~~~~~~~~~~~~~~~                               ^
      | auto                                                                                                    -> VehicleDynamicsResponse
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:224:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  224 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:236:51: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  236 | VehicleListResponse FGCom_VehicleDynamicsManager::getAllVehicles() {
      | ~~~~~~~~~~~~~~~~~~~                               ^
      | auto                                                               -> VehicleListResponse
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:253:70: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  253 | std::vector<fgcom_antenna_orientation> FGCom_VehicleDynamicsManager::getVehicleAntennas(const std::string& vehicle_id) {
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                               ^
      | auto                                                                                                                   -> std::vector<fgcom_antenna_orientation>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:256:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  256 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:258:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
  258 |         return std::vector<fgcom_antenna_orientation>();
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                {}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:264:54: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  264 | fgcom_vehicle_position FGCom_VehicleDynamicsManager::getVehiclePosition(const std::string& vehicle_id) {
      | ~~~~~~~~~~~~~~~~~~~~~~                               ^
      | auto                                                                                                   -> fgcom_vehicle_position
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:267:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  267 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:269:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
  269 |         return fgcom_vehicle_position(); // Return default position
      |                ^~~~~~~~~~~~~~~~~~~~~~~~
      |                {}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:275:54: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  275 | fgcom_vehicle_attitude FGCom_VehicleDynamicsManager::getVehicleAttitude(const std::string& vehicle_id) {
      | ~~~~~~~~~~~~~~~~~~~~~~                               ^
      | auto                                                                                                   -> fgcom_vehicle_attitude
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:278:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  278 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:280:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
  280 |         return fgcom_vehicle_attitude(); // Return default attitude
      |                ^~~~~~~~~~~~~~~~~~~~~~~~
      |                {}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:286:54: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  286 | fgcom_vehicle_velocity FGCom_VehicleDynamicsManager::getVehicleVelocity(const std::string& vehicle_id) {
      | ~~~~~~~~~~~~~~~~~~~~~~                               ^
      | auto                                                                                                   -> fgcom_vehicle_velocity
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:289:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  289 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:291:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
  291 |         return fgcom_vehicle_velocity(); // Return default velocity
      |                ^~~~~~~~~~~~~~~~~~~~~~~~
      |                {}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:297:55: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  297 | AntennaRotationResponse FGCom_VehicleDynamicsManager::calculateAntennaRotation(const AntennaRotationRequest& request) {
      | ~~~~~~~~~~~~~~~~~~~~~~~                               ^
      | auto                                                                                                                  -> AntennaRotationResponse
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:302:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  302 |     auto it = vehicles.find(request.vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:323:47: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  323 |         response.estimated_arrival_time_sec = 0.0f;
      |                                               ^  ~
      |                                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:338:56: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  338 | std::vector<std::string> FGCom_VehicleDynamicsManager::getVehiclesInRange(double center_lat, double center_lon, float radius_km) {
      | ~~~~~~~~~~~~~~~~~~~~~~~~                               ^
      | auto                                                                                                                             -> std::vector<std::string>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:356:56: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  356 | std::vector<std::string> FGCom_VehicleDynamicsManager::getVehiclesByType(const std::string& vehicle_type) {
      | ~~~~~~~~~~~~~~~~~~~~~~~~                               ^
      | auto                                                                                                      -> std::vector<std::string>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:370:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  370 | bool FGCom_VehicleDynamicsManager::enableAutoTracking(const std::string& vehicle_id, const std::string& antenna_id,
      | ~~~~                               ^
      | auto
  371 |                                                      const std::string& target_vehicle_id) {
      |                                                                                            -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:374:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  374 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:396:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  396 | bool FGCom_VehicleDynamicsManager::disableAutoTracking(const std::string& vehicle_id, const std::string& antenna_id) {
      | ~~~~                               ^
      | auto                                                                                                                 -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:399:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  399 |     auto it = vehicles.find(vehicle_id);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:420:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  420 | bool FGCom_VehicleDynamicsManager::updateAutoTracking() {
      | ~~~~                               ^
      | auto                                                    -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:445:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  445 |     auto it = vehicles.begin();
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:462:66: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  462 | std::map<std::string, std::string> FGCom_VehicleDynamicsManager::getSystemStatus() {
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                               ^
      | auto                                                                               -> std::map<std::string, std::string>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:481:27: warning: narrowing conversion from 'size_type' (aka 'unsigned long') to signed type 'int' is implementation-defined [cppcoreguidelines-narrowing-conversions]
  481 |         total_antennas += vehicle.second.antennas.size();
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:512:37: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  512 | float FGCom_VehicleDynamicsManager::calculateMagneticDeclination(double lat, double lon) {
      | ~~~~~                               ^
      | auto                                                                                     -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:512:37: warning: method 'calculateMagneticDeclination' can be made static [readability-convert-member-functions-to-static]
  512 | float FGCom_VehicleDynamicsManager::calculateMagneticDeclination(double lat, double lon) {
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:516:12: warning: narrowing conversion from 'double' to 'float' [cppcoreguidelines-narrowing-conversions]
  516 |     return lat * 0.1f; // Very rough approximation
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:516:18: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  516 |     return lat * 0.1f; // Very rough approximation
      |                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:516:18: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  516 |     return lat * 0.1f; // Very rough approximation
      |                  ^  ~
      |                     F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:527:43: warning: 90.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  527 |         antenna.elevation_deg = std::max(-90.0f, std::min(90.0f, 
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:527:43: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  527 |         antenna.elevation_deg = std::max(-90.0f, std::min(90.0f, 
      |                                           ^   ~
      |                                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:527:59: warning: 90.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  527 |         antenna.elevation_deg = std::max(-90.0f, std::min(90.0f, 
      |                                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:527:59: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  527 |         antenna.elevation_deg = std::max(-90.0f, std::min(90.0f, 
      |                                                           ^   ~
      |                                                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:533:37: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  533 | float FGCom_VehicleDynamicsManager::normalizeAngle(float angle_deg) {
      | ~~~~~                               ^
      | auto                                                                -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:533:37: warning: method 'normalizeAngle' can be made static [readability-convert-member-functions-to-static]
  533 | float FGCom_VehicleDynamicsManager::normalizeAngle(float angle_deg) {
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:534:24: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  534 |     while (angle_deg < 0.0f) angle_deg += 360.0f;
      |                        ^  ~
      |                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:534:29: warning: statement should be inside braces [readability-braces-around-statements]
  534 |     while (angle_deg < 0.0f) angle_deg += 360.0f;
      |                             ^                    
      |                              {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:534:43: warning: 360.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  534 |     while (angle_deg < 0.0f) angle_deg += 360.0f;
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:534:43: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  534 |     while (angle_deg < 0.0f) angle_deg += 360.0f;
      |                                           ^    ~
      |                                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:535:25: warning: 360.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  535 |     while (angle_deg >= 360.0f) angle_deg -= 360.0f;
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:535:25: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  535 |     while (angle_deg >= 360.0f) angle_deg -= 360.0f;
      |                         ^    ~
      |                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:535:32: warning: statement should be inside braces [readability-braces-around-statements]
  535 |     while (angle_deg >= 360.0f) angle_deg -= 360.0f;
      |                                ^                    
      |                                 {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:535:46: warning: 360.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  535 |     while (angle_deg >= 360.0f) angle_deg -= 360.0f;
      |                                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:535:46: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  535 |     while (angle_deg >= 360.0f) angle_deg -= 360.0f;
      |                                              ^    ~
      |                                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:539:37: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  539 | float FGCom_VehicleDynamicsManager::calculateDistance(double lat1, double lon1, double lat2, double lon2) {
      | ~~~~~                               ^
      | auto                                                                                                      -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:539:37: warning: method 'calculateDistance' can be made static [readability-convert-member-functions-to-static]
  539 | float FGCom_VehicleDynamicsManager::calculateDistance(double lat1, double lon1, double lat2, double lon2) {
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:544:12: warning: variable name 'a' is too short, expected at least 3 characters [readability-identifier-length]
  544 |     double a = std::sin(dlat/2) * std::sin(dlat/2) +
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:548:12: warning: variable name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  548 |     double c = 2 * std::atan2(std::sqrt(a), std::sqrt(1-a));
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:550:12: warning: narrowing conversion from 'double' to 'float' [cppcoreguidelines-narrowing-conversions]
  550 |     return EARTH_RADIUS_KM * c;
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:553:37: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  553 | float FGCom_VehicleDynamicsManager::calculateBearing(double lat1, double lon1, double lat2, double lon2) {
      | ~~~~~                               ^
      | auto                                                                                                     -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:555:12: warning: Value stored to 'dlat' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  555 |     double dlat = (lat2 - lat1) * DEG_TO_RAD;
      |            ^~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:555:12: note: Value stored to 'dlat' during its initialization is never read
  555 |     double dlat = (lat2 - lat1) * DEG_TO_RAD;
      |            ^~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:558:12: warning: variable name 'y' is too short, expected at least 3 characters [readability-identifier-length]
  558 |     double y = std::sin(dlon) * std::cos(lat2 * DEG_TO_RAD);
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:559:12: warning: variable name 'x' is too short, expected at least 3 characters [readability-identifier-length]
  559 |     double x = std::cos(lat1 * DEG_TO_RAD) * std::sin(lat2 * DEG_TO_RAD) -
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:563:27: warning: narrowing conversion from 'double' to 'float' [cppcoreguidelines-narrowing-conversions]
  563 |     return normalizeAngle(bearing);
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp:567:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  567 | bool initializeVehicleDynamicsManager() {
      | ~~~~ ^
      | auto                                    -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:13:11: warning: use default member initializer for 'pitch_deg' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   13 |     float pitch_deg;        // Pitch angle in degrees (-90 to +90)
      |           ^        
      |                    {0.0f}
   14 |     float roll_deg;         // Roll angle in degrees (-180 to +180)
   15 |     float yaw_deg;          // Yaw angle in degrees (0 to 360, true heading)
   16 |     float magnetic_heading_deg; // Magnetic heading in degrees (0 to 360)
   17 |     float magnetic_declination_deg; // Magnetic declination at current location
   18 |     std::chrono::system_clock::time_point timestamp;
   19 |     
   20 |     fgcom_vehicle_attitude() : pitch_deg(0.0f), roll_deg(0.0f), yaw_deg(0.0f), 
      |                                ~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:14:11: warning: use default member initializer for 'roll_deg' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   14 |     float roll_deg;         // Roll angle in degrees (-180 to +180)
      |           ^       
      |                   {0.0f}
   15 |     float yaw_deg;          // Yaw angle in degrees (0 to 360, true heading)
   16 |     float magnetic_heading_deg; // Magnetic heading in degrees (0 to 360)
   17 |     float magnetic_declination_deg; // Magnetic declination at current location
   18 |     std::chrono::system_clock::time_point timestamp;
   19 |     
   20 |     fgcom_vehicle_attitude() : pitch_deg(0.0f), roll_deg(0.0f), yaw_deg(0.0f), 
      |                                                 ~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:15:11: warning: use default member initializer for 'yaw_deg' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   15 |     float yaw_deg;          // Yaw angle in degrees (0 to 360, true heading)
      |           ^      
      |                  {0.0f}
   16 |     float magnetic_heading_deg; // Magnetic heading in degrees (0 to 360)
   17 |     float magnetic_declination_deg; // Magnetic declination at current location
   18 |     std::chrono::system_clock::time_point timestamp;
   19 |     
   20 |     fgcom_vehicle_attitude() : pitch_deg(0.0f), roll_deg(0.0f), yaw_deg(0.0f), 
      |                                                                 ~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:16:11: warning: use default member initializer for 'magnetic_heading_deg' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   16 |     float magnetic_heading_deg; // Magnetic heading in degrees (0 to 360)
      |           ^                   
      |                               {0.0f}
   17 |     float magnetic_declination_deg; // Magnetic declination at current location
   18 |     std::chrono::system_clock::time_point timestamp;
   19 |     
   20 |     fgcom_vehicle_attitude() : pitch_deg(0.0f), roll_deg(0.0f), yaw_deg(0.0f), 
   21 |                               magnetic_heading_deg(0.0f), magnetic_declination_deg(0.0f) {
      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:17:11: warning: use default member initializer for 'magnetic_declination_deg' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   17 |     float magnetic_declination_deg; // Magnetic declination at current location
      |           ^                       
      |                                   {0.0f}
   18 |     std::chrono::system_clock::time_point timestamp;
   19 |     
   20 |     fgcom_vehicle_attitude() : pitch_deg(0.0f), roll_deg(0.0f), yaw_deg(0.0f), 
   21 |                               magnetic_heading_deg(0.0f), magnetic_declination_deg(0.0f) {
      |                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:20:42: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   20 |     fgcom_vehicle_attitude() : pitch_deg(0.0f), roll_deg(0.0f), yaw_deg(0.0f), 
      |                                          ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:20:58: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   20 |     fgcom_vehicle_attitude() : pitch_deg(0.0f), roll_deg(0.0f), yaw_deg(0.0f), 
      |                                                          ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:20:73: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   20 |     fgcom_vehicle_attitude() : pitch_deg(0.0f), roll_deg(0.0f), yaw_deg(0.0f), 
      |                                                                         ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:21:52: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   21 |                               magnetic_heading_deg(0.0f), magnetic_declination_deg(0.0f) {
      |                                                    ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:21:84: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   21 |                               magnetic_heading_deg(0.0f), magnetic_declination_deg(0.0f) {
      |                                                                                    ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:27:11: warning: use default member initializer for 'speed_knots' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   27 |     float speed_knots;      // Speed in knots
      |           ^          
      |                      {0.0f}
   28 |     float speed_kmh;        // Speed in km/h
   29 |     float speed_ms;         // Speed in m/s
   30 |     float course_deg;       // Course over ground in degrees (0-360)
   31 |     float vertical_speed_fpm; // Vertical speed in feet per minute
   32 |     float vertical_speed_ms;  // Vertical speed in m/s
   33 |     std::chrono::system_clock::time_point timestamp;
   34 |     
   35 |     fgcom_vehicle_velocity() : speed_knots(0.0f), speed_kmh(0.0f), speed_ms(0.0f),
      |                                ~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:28:11: warning: use default member initializer for 'speed_kmh' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   28 |     float speed_kmh;        // Speed in km/h
      |           ^        
      |                    {0.0f}
   29 |     float speed_ms;         // Speed in m/s
   30 |     float course_deg;       // Course over ground in degrees (0-360)
   31 |     float vertical_speed_fpm; // Vertical speed in feet per minute
   32 |     float vertical_speed_ms;  // Vertical speed in m/s
   33 |     std::chrono::system_clock::time_point timestamp;
   34 |     
   35 |     fgcom_vehicle_velocity() : speed_knots(0.0f), speed_kmh(0.0f), speed_ms(0.0f),
      |                                                   ~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:29:11: warning: use default member initializer for 'speed_ms' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   29 |     float speed_ms;         // Speed in m/s
      |           ^       
      |                   {0.0f}
   30 |     float course_deg;       // Course over ground in degrees (0-360)
   31 |     float vertical_speed_fpm; // Vertical speed in feet per minute
   32 |     float vertical_speed_ms;  // Vertical speed in m/s
   33 |     std::chrono::system_clock::time_point timestamp;
   34 |     
   35 |     fgcom_vehicle_velocity() : speed_knots(0.0f), speed_kmh(0.0f), speed_ms(0.0f),
      |                                                                    ~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:30:11: warning: use default member initializer for 'course_deg' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   30 |     float course_deg;       // Course over ground in degrees (0-360)
      |           ^         
      |                     {0.0f}
   31 |     float vertical_speed_fpm; // Vertical speed in feet per minute
   32 |     float vertical_speed_ms;  // Vertical speed in m/s
   33 |     std::chrono::system_clock::time_point timestamp;
   34 |     
   35 |     fgcom_vehicle_velocity() : speed_knots(0.0f), speed_kmh(0.0f), speed_ms(0.0f),
   36 |                               course_deg(0.0f), vertical_speed_fpm(0.0f), vertical_speed_ms(0.0f) {
      |                               ~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:31:11: warning: use default member initializer for 'vertical_speed_fpm' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   31 |     float vertical_speed_fpm; // Vertical speed in feet per minute
      |           ^                 
      |                             {0.0f}
   32 |     float vertical_speed_ms;  // Vertical speed in m/s
   33 |     std::chrono::system_clock::time_point timestamp;
   34 |     
   35 |     fgcom_vehicle_velocity() : speed_knots(0.0f), speed_kmh(0.0f), speed_ms(0.0f),
   36 |                               course_deg(0.0f), vertical_speed_fpm(0.0f), vertical_speed_ms(0.0f) {
      |                                                 ~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:32:11: warning: use default member initializer for 'vertical_speed_ms' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   32 |     float vertical_speed_ms;  // Vertical speed in m/s
      |           ^                
      |                            {0.0f}
   33 |     std::chrono::system_clock::time_point timestamp;
   34 |     
   35 |     fgcom_vehicle_velocity() : speed_knots(0.0f), speed_kmh(0.0f), speed_ms(0.0f),
   36 |                               course_deg(0.0f), vertical_speed_fpm(0.0f), vertical_speed_ms(0.0f) {
      |                                                                           ~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:35:44: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   35 |     fgcom_vehicle_velocity() : speed_knots(0.0f), speed_kmh(0.0f), speed_ms(0.0f),
      |                                            ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:35:61: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   35 |     fgcom_vehicle_velocity() : speed_knots(0.0f), speed_kmh(0.0f), speed_ms(0.0f),
      |                                                             ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:35:77: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   35 |     fgcom_vehicle_velocity() : speed_knots(0.0f), speed_kmh(0.0f), speed_ms(0.0f),
      |                                                                             ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:36:42: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   36 |                               course_deg(0.0f), vertical_speed_fpm(0.0f), vertical_speed_ms(0.0f) {
      |                                          ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:36:68: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   36 |                               course_deg(0.0f), vertical_speed_fpm(0.0f), vertical_speed_ms(0.0f) {
      |                                                                    ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:36:93: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   36 |                               course_deg(0.0f), vertical_speed_fpm(0.0f), vertical_speed_ms(0.0f) {
      |                                                                                             ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:42:12: warning: use default member initializer for 'latitude' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   42 |     double latitude;        // Latitude in decimal degrees
      |            ^       
      |                    {0.0}
   43 |     double longitude;       // Longitude in decimal degrees
   44 |     float altitude_ft_msl;  // Altitude in feet MSL
   45 |     float altitude_ft_agl;  // Altitude in feet AGL
   46 |     float ground_elevation_ft; // Ground elevation in feet MSL
   47 |     std::string callsign;   // Vehicle callsign
   48 |     std::string vehicle_type; // "aircraft", "boat", "ship", "vehicle", "ground_station"
   49 |     std::chrono::system_clock::time_point timestamp;
   50 |     
   51 |     fgcom_vehicle_position() : latitude(0.0), longitude(0.0), altitude_ft_msl(0.0f),
      |                                ~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:43:12: warning: use default member initializer for 'longitude' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   43 |     double longitude;       // Longitude in decimal degrees
      |            ^        
      |                     {0.0}
   44 |     float altitude_ft_msl;  // Altitude in feet MSL
   45 |     float altitude_ft_agl;  // Altitude in feet AGL
   46 |     float ground_elevation_ft; // Ground elevation in feet MSL
   47 |     std::string callsign;   // Vehicle callsign
   48 |     std::string vehicle_type; // "aircraft", "boat", "ship", "vehicle", "ground_station"
   49 |     std::chrono::system_clock::time_point timestamp;
   50 |     
   51 |     fgcom_vehicle_position() : latitude(0.0), longitude(0.0), altitude_ft_msl(0.0f),
      |                                               ~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:44:11: warning: use default member initializer for 'altitude_ft_msl' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   44 |     float altitude_ft_msl;  // Altitude in feet MSL
      |           ^              
      |                          {0.0f}
   45 |     float altitude_ft_agl;  // Altitude in feet AGL
   46 |     float ground_elevation_ft; // Ground elevation in feet MSL
   47 |     std::string callsign;   // Vehicle callsign
   48 |     std::string vehicle_type; // "aircraft", "boat", "ship", "vehicle", "ground_station"
   49 |     std::chrono::system_clock::time_point timestamp;
   50 |     
   51 |     fgcom_vehicle_position() : latitude(0.0), longitude(0.0), altitude_ft_msl(0.0f),
      |                                                               ~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:45:11: warning: use default member initializer for 'altitude_ft_agl' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   45 |     float altitude_ft_agl;  // Altitude in feet AGL
      |           ^              
      |                          {0.0f}
   46 |     float ground_elevation_ft; // Ground elevation in feet MSL
   47 |     std::string callsign;   // Vehicle callsign
   48 |     std::string vehicle_type; // "aircraft", "boat", "ship", "vehicle", "ground_station"
   49 |     std::chrono::system_clock::time_point timestamp;
   50 |     
   51 |     fgcom_vehicle_position() : latitude(0.0), longitude(0.0), altitude_ft_msl(0.0f),
   52 |                               altitude_ft_agl(0.0f), ground_elevation_ft(0.0f) {
      |                               ~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:46:11: warning: use default member initializer for 'ground_elevation_ft' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   46 |     float ground_elevation_ft; // Ground elevation in feet MSL
      |           ^                  
      |                              {0.0f}
   47 |     std::string callsign;   // Vehicle callsign
   48 |     std::string vehicle_type; // "aircraft", "boat", "ship", "vehicle", "ground_station"
   49 |     std::chrono::system_clock::time_point timestamp;
   50 |     
   51 |     fgcom_vehicle_position() : latitude(0.0), longitude(0.0), altitude_ft_msl(0.0f),
   52 |                               altitude_ft_agl(0.0f), ground_elevation_ft(0.0f) {
      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:51:79: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   51 |     fgcom_vehicle_position() : latitude(0.0), longitude(0.0), altitude_ft_msl(0.0f),
      |                                                                               ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:52:47: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   52 |                               altitude_ft_agl(0.0f), ground_elevation_ft(0.0f) {
      |                                               ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:52:74: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   52 |                               altitude_ft_agl(0.0f), ground_elevation_ft(0.0f) {
      |                                                                          ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:60:11: warning: use default member initializer for 'azimuth_deg' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   60 |     float azimuth_deg;          // Azimuth pointing direction (0-360)
      |           ^          
      |                      {0.0f}
   61 |     float elevation_deg;        // Elevation angle (-90 to +90)
   62 |     bool is_auto_tracking;      // Is auto-tracking enabled?
   63 |     float rotation_speed_deg_per_sec; // Rotation speed for motorized antennas
   64 |     std::chrono::system_clock::time_point timestamp;
   65 |     
   66 |     fgcom_antenna_orientation() : azimuth_deg(0.0f), elevation_deg(0.0f),
      |                                   ~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:61:11: warning: use default member initializer for 'elevation_deg' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   61 |     float elevation_deg;        // Elevation angle (-90 to +90)
      |           ^            
      |                        {0.0f}
   62 |     bool is_auto_tracking;      // Is auto-tracking enabled?
   63 |     float rotation_speed_deg_per_sec; // Rotation speed for motorized antennas
   64 |     std::chrono::system_clock::time_point timestamp;
   65 |     
   66 |     fgcom_antenna_orientation() : azimuth_deg(0.0f), elevation_deg(0.0f),
      |                                                      ~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:62:10: warning: use default member initializer for 'is_auto_tracking' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   62 |     bool is_auto_tracking;      // Is auto-tracking enabled?
      |          ^               
      |                          {false}
   63 |     float rotation_speed_deg_per_sec; // Rotation speed for motorized antennas
   64 |     std::chrono::system_clock::time_point timestamp;
   65 |     
   66 |     fgcom_antenna_orientation() : azimuth_deg(0.0f), elevation_deg(0.0f),
   67 |                                  is_auto_tracking(false),
      |                                  ~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:63:11: warning: use default member initializer for 'rotation_speed_deg_per_sec' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   63 |     float rotation_speed_deg_per_sec; // Rotation speed for motorized antennas
      |           ^                         
      |                                     {0.0f}
   64 |     std::chrono::system_clock::time_point timestamp;
   65 |     
   66 |     fgcom_antenna_orientation() : azimuth_deg(0.0f), elevation_deg(0.0f),
   67 |                                  is_auto_tracking(false),
   68 |                                  rotation_speed_deg_per_sec(0.0f) {
      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:66:47: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   66 |     fgcom_antenna_orientation() : azimuth_deg(0.0f), elevation_deg(0.0f),
      |                                               ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:66:68: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   66 |     fgcom_antenna_orientation() : azimuth_deg(0.0f), elevation_deg(0.0f),
      |                                                                    ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:68:61: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
   68 |                                  rotation_speed_deg_per_sec(0.0f) {
      |                                                             ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:97:10: warning: use default member initializer for 'success' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   97 |     bool success;
      |          ^      
      |                 {false}
   98 |     std::string message;
   99 |     fgcom_vehicle_dynamics dynamics;
  100 |     std::chrono::system_clock::time_point timestamp;
  101 |     
  102 |     VehicleDynamicsResponse() : success(false) {
      |                                 ~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:117:10: warning: use default member initializer for 'success' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  117 |     bool success;
      |          ^      
      |                 {false}
  118 |     std::string message;
  119 |     fgcom_antenna_orientation current_orientation;
  120 |     float estimated_arrival_time_sec;
  121 |     std::chrono::system_clock::time_point timestamp;
  122 |     
  123 |     AntennaRotationResponse() : success(false), estimated_arrival_time_sec(0.0f) {
      |                                 ~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:120:11: warning: use default member initializer for 'estimated_arrival_time_sec' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  120 |     float estimated_arrival_time_sec;
      |           ^                         
      |                                     {0.0f}
  121 |     std::chrono::system_clock::time_point timestamp;
  122 |     
  123 |     AntennaRotationResponse() : success(false), estimated_arrival_time_sec(0.0f) {
      |                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:123:76: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]
  123 |     AntennaRotationResponse() : success(false), estimated_arrival_time_sec(0.0f) {
      |                                                                            ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:129:10: warning: use default member initializer for 'success' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  129 |     bool success;
      |          ^      
      |                 {false}
  130 |     std::string message;
  131 |     std::vector<std::string> vehicle_ids;
  132 |     std::map<std::string, std::string> vehicle_types;
  133 |     std::map<std::string, std::string> vehicle_status;
  134 |     std::chrono::system_clock::time_point timestamp;
  135 |     
  136 |     VehicleListResponse() : success(false) {
      |                             ~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:142:7: warning: class 'FGCom_VehicleDynamicsManager' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
  142 | class FGCom_VehicleDynamicsManager {
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:147:10: warning: use default member initializer for 'auto_cleanup_enabled' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  147 |     bool auto_cleanup_enabled;
      |          ^                   
      |                              {true}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:148:9: warning: use default member initializer for 'cleanup_interval_seconds' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  148 |     int cleanup_interval_seconds;
      |         ^                       
      |                                 {300}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:151:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  151 |     float calculateMagneticDeclination(double lat, double lon);
      |     ~~~~~ ^                                                   
      |     auto                                                       -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:158:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  158 |     float normalizeAngle(float angle_deg);
      |     ~~~~~ ^                              
      |     auto                                  -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:159:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  159 |     float calculateDistance(double lat1, double lon1, double lat2, double lon2);
      |     ~~~~~ ^                                                                    
      |     auto                                                                        -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:160:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  160 |     float calculateBearing(double lat1, double lon1, double lat2, double lon2);
      |     ~~~~~ ^                                                                   
      |     auto                                                                       -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:167:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  167 |     bool registerVehicle(const std::string& vehicle_id, const std::string& vehicle_type);
      |     ~~~~ ^                                                                              
      |     auto                                                                                 -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:168:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  168 |     bool unregisterVehicle(const std::string& vehicle_id);
      |     ~~~~ ^                                               
      |     auto                                                  -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:169:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  169 |     bool updateVehiclePosition(const std::string& vehicle_id, const fgcom_vehicle_position& position);
      |     ~~~~ ^                                                                                           
      |     auto                                                                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:170:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  170 |     bool updateVehicleAttitude(const std::string& vehicle_id, const fgcom_vehicle_attitude& attitude);
      |     ~~~~ ^                                                                                           
      |     auto                                                                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:171:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  171 |     bool updateVehicleVelocity(const std::string& vehicle_id, const fgcom_vehicle_velocity& velocity);
      |     ~~~~ ^                                                                                           
      |     auto                                                                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:172:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  172 |     bool updateVehicleDynamics(const std::string& vehicle_id, const fgcom_vehicle_dynamics& dynamics);
      |     ~~~~ ^                                                                                           
      |     auto                                                                                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:175:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  175 |     bool addAntenna(const std::string& vehicle_id, const fgcom_antenna_orientation& antenna);
      |     ~~~~ ^                                                                                  
      |     auto                                                                                     -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:176:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  176 |     bool removeAntenna(const std::string& vehicle_id, const std::string& antenna_id);
      |     ~~~~ ^                                                                          
      |     auto                                                                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:177:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  177 |     bool updateAntennaOrientation(const std::string& vehicle_id, const std::string& antenna_id,
      |     ~~~~ ^
      |     auto
  178 |                                  const fgcom_antenna_orientation& orientation);
      |                                                                               
      |                                                                                -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:179:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  179 |     bool rotateAntenna(const std::string& vehicle_id, const std::string& antenna_id,
      |     ~~~~ ^
      |     auto
  180 |                       float target_azimuth, float target_elevation, bool immediate = false);
      |                                                                                            
      |                                                                                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:183:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  183 |     VehicleDynamicsResponse getVehicleDynamics(const std::string& vehicle_id);
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^                                                
      |     auto                                                                      -> VehicleDynamicsResponse
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:184:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  184 |     VehicleListResponse getAllVehicles();
      |     ~~~~~~~~~~~~~~~~~~~ ^               
      |     auto                                 -> VehicleListResponse
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:185:44: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  185 |     std::vector<fgcom_antenna_orientation> getVehicleAntennas(const std::string& vehicle_id);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^                                                
      |     auto                                                                                     -> std::vector<fgcom_antenna_orientation>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:186:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  186 |     fgcom_vehicle_position getVehiclePosition(const std::string& vehicle_id);
      |     ~~~~~~~~~~~~~~~~~~~~~~ ^                                                
      |     auto                                                                     -> fgcom_vehicle_position
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:187:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  187 |     fgcom_vehicle_attitude getVehicleAttitude(const std::string& vehicle_id);
      |     ~~~~~~~~~~~~~~~~~~~~~~ ^                                                
      |     auto                                                                     -> fgcom_vehicle_attitude
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:188:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  188 |     fgcom_vehicle_velocity getVehicleVelocity(const std::string& vehicle_id);
      |     ~~~~~~~~~~~~~~~~~~~~~~ ^                                                
      |     auto                                                                     -> fgcom_vehicle_velocity
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:191:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  191 |     AntennaRotationResponse calculateAntennaRotation(const AntennaRotationRequest& request);
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^                                                              
      |     auto                                                                                    -> AntennaRotationResponse
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:192:30: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  192 |     std::vector<std::string> getVehiclesInRange(double center_lat, double center_lon, float radius_km);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~ ^                                                                        
      |     auto                                                                                               -> std::vector<std::string>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:193:30: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  193 |     std::vector<std::string> getVehiclesByType(const std::string& vehicle_type);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~ ^                                                 
      |     auto                                                                        -> std::vector<std::string>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:196:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  196 |     bool enableAutoTracking(const std::string& vehicle_id, const std::string& antenna_id,
      |     ~~~~ ^
      |     auto
  197 |                            const std::string& target_vehicle_id);
      |                                                                 
      |                                                                  -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:198:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  198 |     bool disableAutoTracking(const std::string& vehicle_id, const std::string& antenna_id);
      |     ~~~~ ^                                                                                
      |     auto                                                                                   -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:199:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  199 |     bool updateAutoTracking();
      |     ~~~~ ^                   
      |     auto                      -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:203:62: warning: 300 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  203 |     void setAutoCleanup(bool enabled, int interval_seconds = 300);
      |                                                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:204:40: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  204 |     std::map<std::string, std::string> getSystemStatus();
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^                
      |     auto                                                 -> std::map<std::string, std::string>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:213:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  213 |     std::string getVehicleModulationMode(const std::string& vehicle_id);
      |     ~~~~~~~~~~~ ^                                                      
      |     auto                                                                -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:214:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  214 |     bool validateModulationMode(const std::string& mode);
      |     ~~~~ ^                                              
      |     auto                                                 -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:215:30: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  215 |     std::vector<std::string> getSupportedModulationModes();
      |     ~~~~~~~~~~~~~~~~~~~~~~~~ ^                            
      |     auto                                                   -> std::vector<std::string>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:219:54: warning: variable 'g_vehicle_dynamics_manager' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  219 | extern std::unique_ptr<FGCom_VehicleDynamicsManager> g_vehicle_dynamics_manager;
      |                                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h:222:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  222 | bool initializeVehicleDynamicsManager();
      | ~~~~ ^                                 
      | auto                                    -> bool
