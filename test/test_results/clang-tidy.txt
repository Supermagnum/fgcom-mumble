/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:2:1: warning: system include algorithm not allowed [llvmlibc-restrict-system-libc-headers]
    2 | #include <algorithm>
      | ^~~~~~~~~~~~~~~~~~~~
    3 | #include <cmath>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:3:1: warning: system include cmath not allowed [llvmlibc-restrict-system-libc-headers]
    3 | #include <cmath>
      | ^~~~~~~~~~~~~~~~
    4 | #include <iostream>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:4:1: warning: system include iostream not allowed [llvmlibc-restrict-system-libc-headers]
    4 | #include <iostream>
      | ^~~~~~~~~~~~~~~~~~~
    5 | #include <sstream>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:5:1: warning: system include sstream not allowed [llvmlibc-restrict-system-libc-headers]
    5 | #include <sstream>
      | ^~~~~~~~~~~~~~~~~~
    6 | 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:8:1: warning: static objects are disallowed; if possible, use a constexpr constructor instead [fuchsia-statically-constructed-objects]
    8 | std::unique_ptr<FGCom_AGC_Squelch> FGCom_AGC_Squelch::instance = nullptr;
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:8:6: warning: no header providing "std::unique_ptr" is directly included [misc-include-cleaner]
    5 | #include <sstream>
    6 | 
    7 | // Static member initialization
    8 | std::unique_ptr<FGCom_AGC_Squelch> FGCom_AGC_Squelch::instance = nullptr;
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:8:55: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
    8 | std::unique_ptr<FGCom_AGC_Squelch> FGCom_AGC_Squelch::instance = nullptr;
      |                                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:9:6: warning: no header providing "std::mutex" is directly included [misc-include-cleaner]
    5 | #include <sstream>
    6 | 
    7 | // Static member initialization
    8 | std::unique_ptr<FGCom_AGC_Squelch> FGCom_AGC_Squelch::instance = nullptr;
    9 | std::mutex FGCom_AGC_Squelch::instance_mutex;
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:9:31: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
    9 | std::mutex FGCom_AGC_Squelch::instance_mutex;
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:12:20: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   12 | FGCom_AGC_Squelch::FGCom_AGC_Squelch() 
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:13:23: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   13 |     : current_gain_db(0.0f)
      |                       ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:14:22: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   14 |     , target_gain_db(0.0f)
      |                      ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:15:22: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   15 |     , agc_hold_timer(0.0f)
      |                      ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:18:21: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   18 |     , squelch_timer(0.0f)
      |                     ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:19:27: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   19 |     , tone_detector_phase(0.0f)
      |                           ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:20:31: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   20 |     , tone_detector_amplitude(0.0f)
      |                               ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:22:21: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   22 |     last_agc_update = std::chrono::system_clock::now();
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:22:23: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   22 |     last_agc_update = std::chrono::system_clock::now();
      |                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:22:36: warning: no header providing "std::chrono::system_clock" is directly included [misc-include-cleaner]
    3 |     last_agc_update = std::chrono::system_clock::now();
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:23:25: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   23 |     last_squelch_change = std::chrono::system_clock::now();
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:23:27: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   23 |     last_squelch_change = std::chrono::system_clock::now();
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:26:25: warning: 1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   26 |     audio_buffer.resize(1024);
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:27:24: warning: 1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   27 |     gain_buffer.resize(1024);
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:28:27: warning: 1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   28 |     squelch_buffer.resize(1024);
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:32:33: warning: 10.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   32 |     agc_config.attack_time_ms = 10.0f;
      |                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:32:33: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   32 |     agc_config.attack_time_ms = 10.0f;
      |                                 ^   ~
      |                                     F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:33:34: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   33 |     agc_config.release_time_ms = 100.0f;
      |                                  ^    ~
      |                                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:34:31: warning: 20.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   34 |     agc_config.min_gain_db = -20.0f;  // Allow reduction
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:34:31: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   34 |     agc_config.min_gain_db = -20.0f;  // Allow reduction
      |                               ^   ~
      |                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:35:30: warning: 40.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   35 |     agc_config.max_gain_db = 40.0f;   // Allow amplification
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:35:30: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   35 |     agc_config.max_gain_db = 40.0f;   // Allow amplification
      |                              ^   ~
      |                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:38:36: warning: 80.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   38 |     squelch_config.threshold_db = -80.0f;
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:38:36: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   38 |     squelch_config.threshold_db = -80.0f;
      |                                    ^   ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:39:36: warning: 3.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   39 |     squelch_config.hysteresis_db = 3.0f;
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:39:36: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   39 |     squelch_config.hysteresis_db = 3.0f;
      |                                    ^  ~
      |                                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:40:37: warning: 5.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   40 |     squelch_config.attack_time_ms = 5.0f;
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:40:37: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   40 |     squelch_config.attack_time_ms = 5.0f;
      |                                     ^  ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:41:38: warning: 50.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   41 |     squelch_config.release_time_ms = 50.0f;
      |                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:41:38: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   41 |     squelch_config.release_time_ms = 50.0f;
      |                                      ^   ~
      |                                          F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:42:40: warning: 1000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   42 |     squelch_config.tone_frequency_hz = 1000.0f;
      |                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:42:40: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   42 |     squelch_config.tone_frequency_hz = 1000.0f;
      |                                        ^     ~
      |                                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:43:42: warning: 60.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   43 |     squelch_config.noise_threshold_db = -60.0f;
      |                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:43:42: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   43 |     squelch_config.noise_threshold_db = -60.0f;
      |                                          ^   ~
      |                                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:47:39: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   47 | FGCom_AGC_Squelch& FGCom_AGC_Squelch::getInstance() {
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:47:39: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   47 | FGCom_AGC_Squelch& FGCom_AGC_Squelch::getInstance() {
      | ~~~~~~~~~~~~~~~~~~                    ^
      | auto                                                -> FGCom_AGC_Squelch&
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:48:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
   48 |     std::lock_guard<std::mutex> lock(instance_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:48:10: warning: no header providing "std::lock_guard" is directly included [misc-include-cleaner]
   48 |     std::lock_guard<std::mutex> lock(instance_mutex);
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:50:18: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   50 |         instance = std::unique_ptr<FGCom_AGC_Squelch>(new FGCom_AGC_Squelch());
      |                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/unique_ptr.h:414:19: note: resolves to this declaration
  414 |       unique_ptr& operator=(unique_ptr&&) = default;
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:52:12: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   52 |     return *instance;
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/unique_ptr.h:451:7: note: resolves to this declaration
  451 |       operator*() const noexcept(noexcept(*std::declval<pointer>()))
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:55:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   55 | void FGCom_AGC_Squelch::destroyInstance() {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:56:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
   56 |     std::lock_guard<std::mutex> lock(instance_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:57:5: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   57 |     instance.reset();
      |     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/unique_ptr.h:505:13: note: default parameter was declared here
  505 |       reset(pointer __p = pointer()) noexcept
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:61:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   61 | void FGCom_AGC_Squelch::setAGCMode(AGCMode mode) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:62:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
   62 |     std::lock_guard<std::mutex> lock(agc_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:68:41: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   68 |             agc_config.attack_time_ms = 1.0f;
      |                                         ^  ~
      |                                            F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:69:42: warning: 10.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   69 |             agc_config.release_time_ms = 10.0f;
      |                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:69:42: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   69 |             agc_config.release_time_ms = 10.0f;
      |                                          ^   ~
      |                                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:73:41: warning: 5.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   73 |             agc_config.attack_time_ms = 5.0f;
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:73:41: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   73 |             agc_config.attack_time_ms = 5.0f;
      |                                         ^  ~
      |                                            F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:74:42: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   74 |             agc_config.release_time_ms = 100.0f;
      |                                          ^    ~
      |                                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:78:41: warning: 20.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   78 |             agc_config.attack_time_ms = 20.0f;
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:78:41: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   78 |             agc_config.attack_time_ms = 20.0f;
      |                                         ^   ~
      |                                             F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:79:42: warning: 500.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   79 |             agc_config.release_time_ms = 500.0f;
      |                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:79:42: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   79 |             agc_config.release_time_ms = 500.0f;
      |                                          ^    ~
      |                                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:83:25: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   83 |             agc_enabled = false;
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/atomic:79:5: note: resolves to this declaration
   79 |     operator=(bool __i) noexcept
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:87:40: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   87 |     logAGCEvent("AGC mode changed to " + std::to_string(static_cast<int>(mode)));
      |                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:87:42: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   87 |     logAGCEvent("AGC mode changed to " + std::to_string(static_cast<int>(mode)));
      |                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4162:3: note: resolves to this declaration
 4162 |   to_string(int __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:87:47: warning: no header providing "std::to_string" is directly included [misc-include-cleaner]
    6 |     logAGCEvent("AGC mode changed to " + std::to_string(static_cast<int>(mode)));
      |                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:90:28: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   90 | AGCMode FGCom_AGC_Squelch::getAGCMode() const {
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:90:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   90 | AGCMode FGCom_AGC_Squelch::getAGCMode() const {
      | ~~~~~~~                    ^
      | auto                                          -> AGCMode
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:91:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
   91 |     std::lock_guard<std::mutex> lock(agc_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:95:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   95 | void FGCom_AGC_Squelch::setAGCThreshold(float threshold_db) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:96:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
   96 |     std::lock_guard<std::mutex> lock(agc_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:97:52: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   97 |     agc_config.threshold_db = clamp(threshold_db, -100.0f, 0.0f);
      |                                                    ^    ~
      |                                                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:97:60: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   97 |     agc_config.threshold_db = clamp(threshold_db, -100.0f, 0.0f);
      |                                                            ^  ~
      |                                                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:98:41: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   98 |     logAGCEvent("AGC threshold set to " + std::to_string(threshold_db) + " dB");
      |                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:98:43: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   98 |     logAGCEvent("AGC threshold set to " + std::to_string(threshold_db) + " dB");
      |                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4241:3: note: resolves to this declaration
 4241 |   to_string(float __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:98:48: warning: no header providing "std::to_string" is directly included [misc-include-cleaner]
   98 |     logAGCEvent("AGC threshold set to " + std::to_string(threshold_db) + " dB");
      |                                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:98:72: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   98 |     logAGCEvent("AGC threshold set to " + std::to_string(threshold_db) + " dB");
      |                                                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:101:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  101 | float FGCom_AGC_Squelch::getAGCThreshold() const {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:101:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  101 | float FGCom_AGC_Squelch::getAGCThreshold() const {
      | ~~~~~                    ^
      | auto                                             -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:102:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  102 |     std::lock_guard<std::mutex> lock(agc_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:106:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  106 | void FGCom_AGC_Squelch::setAGCAttackTime(float attack_time_ms) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:107:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  107 |     std::lock_guard<std::mutex> lock(agc_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:108:55: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  108 |     agc_config.attack_time_ms = clamp(attack_time_ms, 0.1f, 1000.0f);
      |                                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:108:55: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  108 |     agc_config.attack_time_ms = clamp(attack_time_ms, 0.1f, 1000.0f);
      |                                                       ^  ~
      |                                                          F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:108:61: warning: 1000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  108 |     agc_config.attack_time_ms = clamp(attack_time_ms, 0.1f, 1000.0f);
      |                                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:108:61: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  108 |     agc_config.attack_time_ms = clamp(attack_time_ms, 0.1f, 1000.0f);
      |                                                             ^     ~
      |                                                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:109:43: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  109 |     logAGCEvent("AGC attack time set to " + std::to_string(attack_time_ms) + " ms");
      |                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:109:45: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  109 |     logAGCEvent("AGC attack time set to " + std::to_string(attack_time_ms) + " ms");
      |                                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4241:3: note: resolves to this declaration
 4241 |   to_string(float __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:109:76: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  109 |     logAGCEvent("AGC attack time set to " + std::to_string(attack_time_ms) + " ms");
      |                                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:112:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  112 | float FGCom_AGC_Squelch::getAGCAttackTime() const {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:112:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  112 | float FGCom_AGC_Squelch::getAGCAttackTime() const {
      | ~~~~~                    ^
      | auto                                              -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:113:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  113 |     std::lock_guard<std::mutex> lock(agc_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:117:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  117 | void FGCom_AGC_Squelch::setAGCReleaseTime(float release_time_ms) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:118:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  118 |     std::lock_guard<std::mutex> lock(agc_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:119:57: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  119 |     agc_config.release_time_ms = clamp(release_time_ms, 1.0f, 10000.0f);
      |                                                         ^  ~
      |                                                            F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:119:63: warning: 10000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  119 |     agc_config.release_time_ms = clamp(release_time_ms, 1.0f, 10000.0f);
      |                                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:119:63: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  119 |     agc_config.release_time_ms = clamp(release_time_ms, 1.0f, 10000.0f);
      |                                                               ^      ~
      |                                                                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:120:44: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  120 |     logAGCEvent("AGC release time set to " + std::to_string(release_time_ms) + " ms");
      |                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:120:46: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  120 |     logAGCEvent("AGC release time set to " + std::to_string(release_time_ms) + " ms");
      |                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4241:3: note: resolves to this declaration
 4241 |   to_string(float __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:120:78: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  120 |     logAGCEvent("AGC release time set to " + std::to_string(release_time_ms) + " ms");
      |                                                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:123:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  123 | float FGCom_AGC_Squelch::getAGCReleaseTime() const {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:123:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  123 | float FGCom_AGC_Squelch::getAGCReleaseTime() const {
      | ~~~~~                    ^
      | auto                                               -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:124:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  124 |     std::lock_guard<std::mutex> lock(agc_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:128:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  128 | void FGCom_AGC_Squelch::setAGCMaxGain(float max_gain_db) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:129:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  129 |     std::lock_guard<std::mutex> lock(agc_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:130:49: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  130 |     agc_config.max_gain_db = clamp(max_gain_db, 0.0f, 60.0f);
      |                                                 ^  ~
      |                                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:130:55: warning: 60.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  130 |     agc_config.max_gain_db = clamp(max_gain_db, 0.0f, 60.0f);
      |                                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:130:55: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  130 |     agc_config.max_gain_db = clamp(max_gain_db, 0.0f, 60.0f);
      |                                                       ^   ~
      |                                                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:131:40: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  131 |     logAGCEvent("AGC max gain set to " + std::to_string(max_gain_db) + " dB");
      |                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:131:42: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  131 |     logAGCEvent("AGC max gain set to " + std::to_string(max_gain_db) + " dB");
      |                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4241:3: note: resolves to this declaration
 4241 |   to_string(float __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:131:70: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  131 |     logAGCEvent("AGC max gain set to " + std::to_string(max_gain_db) + " dB");
      |                                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:134:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  134 | float FGCom_AGC_Squelch::getAGCMaxGain() const {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:134:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  134 | float FGCom_AGC_Squelch::getAGCMaxGain() const {
      | ~~~~~                    ^
      | auto                                           -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:135:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  135 |     std::lock_guard<std::mutex> lock(agc_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:139:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  139 | void FGCom_AGC_Squelch::setAGCMinGain(float min_gain_db) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:140:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  140 |     std::lock_guard<std::mutex> lock(agc_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:141:50: warning: 40.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  141 |     agc_config.min_gain_db = clamp(min_gain_db, -40.0f, 0.0f);
      |                                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:141:50: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  141 |     agc_config.min_gain_db = clamp(min_gain_db, -40.0f, 0.0f);
      |                                                  ^   ~
      |                                                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:141:57: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  141 |     agc_config.min_gain_db = clamp(min_gain_db, -40.0f, 0.0f);
      |                                                         ^  ~
      |                                                            F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:142:40: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  142 |     logAGCEvent("AGC min gain set to " + std::to_string(min_gain_db) + " dB");
      |                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:142:42: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  142 |     logAGCEvent("AGC min gain set to " + std::to_string(min_gain_db) + " dB");
      |                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4241:3: note: resolves to this declaration
 4241 |   to_string(float __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:142:70: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  142 |     logAGCEvent("AGC min gain set to " + std::to_string(min_gain_db) + " dB");
      |                                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:145:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  145 | float FGCom_AGC_Squelch::getAGCMinGain() const {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:145:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  145 | float FGCom_AGC_Squelch::getAGCMinGain() const {
      | ~~~~~                    ^
      | auto                                           -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:146:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  146 |     std::lock_guard<std::mutex> lock(agc_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:150:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  150 | void FGCom_AGC_Squelch::enableAGC(bool enabled) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:151:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  151 |     std::lock_guard<std::mutex> lock(agc_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:152:17: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  152 |     agc_enabled = enabled;
      |                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/atomic:79:5: note: resolves to this declaration
   79 |     operator=(bool __i) noexcept
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:156:24: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  156 |     logAGCEvent("AGC " + std::string(enabled ? "enabled" : "disabled"));
      |                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:156:26: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  156 |     logAGCEvent("AGC " + std::string(enabled ? "enabled" : "disabled"));
      |                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:156:31: warning: no header providing "std::string" is directly included [misc-include-cleaner]
  156 |     logAGCEvent("AGC " + std::string(enabled ? "enabled" : "disabled"));
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:159:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  159 | bool FGCom_AGC_Squelch::isAGCEnabled() const {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:159:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  159 | bool FGCom_AGC_Squelch::isAGCEnabled() const {
      | ~~~~                    ^
      | auto                                         -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:160:12: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  160 |     return agc_enabled.load();
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/atomic:111:10: note: default parameter was declared here
  111 |     load(memory_order __m = memory_order_seq_cst) const noexcept
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:164:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  164 | void FGCom_AGC_Squelch::setSquelchEnabled(bool enabled) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:165:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  165 |     std::lock_guard<std::mutex> lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:166:21: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  166 |     squelch_enabled = enabled;
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/atomic:79:5: note: resolves to this declaration
   79 |     operator=(bool __i) noexcept
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:168:32: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  168 |     logSquelchEvent("Squelch " + std::string(enabled ? "enabled" : "disabled"));
      |                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:168:34: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  168 |     logSquelchEvent("Squelch " + std::string(enabled ? "enabled" : "disabled"));
      |                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:171:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  171 | bool FGCom_AGC_Squelch::isSquelchEnabled() const {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:171:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  171 | bool FGCom_AGC_Squelch::isSquelchEnabled() const {
      | ~~~~                    ^
      | auto                                             -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:172:12: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  172 |     return squelch_enabled.load();
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/atomic:111:10: note: default parameter was declared here
  111 |     load(memory_order __m = memory_order_seq_cst) const noexcept
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:175:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  175 | void FGCom_AGC_Squelch::setSquelchThreshold(float threshold_db) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:176:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  176 |     std::lock_guard<std::mutex> lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:177:56: warning: 120.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  177 |     squelch_config.threshold_db = clamp(threshold_db, -120.0f, 0.0f);
      |                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:177:56: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  177 |     squelch_config.threshold_db = clamp(threshold_db, -120.0f, 0.0f);
      |                                                        ^    ~
      |                                                             F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:177:64: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  177 |     squelch_config.threshold_db = clamp(threshold_db, -120.0f, 0.0f);
      |                                                                ^  ~
      |                                                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:178:49: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  178 |     logSquelchEvent("Squelch threshold set to " + std::to_string(threshold_db) + " dB");
      |                                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:178:51: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  178 |     logSquelchEvent("Squelch threshold set to " + std::to_string(threshold_db) + " dB");
      |                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4241:3: note: resolves to this declaration
 4241 |   to_string(float __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:178:80: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  178 |     logSquelchEvent("Squelch threshold set to " + std::to_string(threshold_db) + " dB");
      |                                                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:181:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  181 | float FGCom_AGC_Squelch::getSquelchThreshold() const {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:181:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  181 | float FGCom_AGC_Squelch::getSquelchThreshold() const {
      | ~~~~~                    ^
      | auto                                                 -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:182:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  182 |     std::lock_guard<std::mutex> lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:186:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  186 | void FGCom_AGC_Squelch::setSquelchHysteresis(float hysteresis_db) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:187:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  187 |     std::lock_guard<std::mutex> lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:188:57: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  188 |     squelch_config.hysteresis_db = clamp(hysteresis_db, 0.0f, 20.0f);
      |                                                         ^  ~
      |                                                            F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:188:63: warning: 20.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  188 |     squelch_config.hysteresis_db = clamp(hysteresis_db, 0.0f, 20.0f);
      |                                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:188:63: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  188 |     squelch_config.hysteresis_db = clamp(hysteresis_db, 0.0f, 20.0f);
      |                                                               ^   ~
      |                                                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:189:50: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  189 |     logSquelchEvent("Squelch hysteresis set to " + std::to_string(hysteresis_db) + " dB");
      |                                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:189:52: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  189 |     logSquelchEvent("Squelch hysteresis set to " + std::to_string(hysteresis_db) + " dB");
      |                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4241:3: note: resolves to this declaration
 4241 |   to_string(float __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:189:82: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  189 |     logSquelchEvent("Squelch hysteresis set to " + std::to_string(hysteresis_db) + " dB");
      |                                                                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:192:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  192 | float FGCom_AGC_Squelch::getSquelchHysteresis() const {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:192:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  192 | float FGCom_AGC_Squelch::getSquelchHysteresis() const {
      | ~~~~~                    ^
      | auto                                                  -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:193:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  193 |     std::lock_guard<std::mutex> lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:197:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  197 | void FGCom_AGC_Squelch::setSquelchAttackTime(float attack_time_ms) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:198:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  198 |     std::lock_guard<std::mutex> lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:199:59: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  199 |     squelch_config.attack_time_ms = clamp(attack_time_ms, 0.1f, 1000.0f);
      |                                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:199:59: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  199 |     squelch_config.attack_time_ms = clamp(attack_time_ms, 0.1f, 1000.0f);
      |                                                           ^  ~
      |                                                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:199:65: warning: 1000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  199 |     squelch_config.attack_time_ms = clamp(attack_time_ms, 0.1f, 1000.0f);
      |                                                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:199:65: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  199 |     squelch_config.attack_time_ms = clamp(attack_time_ms, 0.1f, 1000.0f);
      |                                                                 ^     ~
      |                                                                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:200:51: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  200 |     logSquelchEvent("Squelch attack time set to " + std::to_string(attack_time_ms) + " ms");
      |                                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:200:53: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  200 |     logSquelchEvent("Squelch attack time set to " + std::to_string(attack_time_ms) + " ms");
      |                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4241:3: note: resolves to this declaration
 4241 |   to_string(float __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:200:84: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  200 |     logSquelchEvent("Squelch attack time set to " + std::to_string(attack_time_ms) + " ms");
      |                                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:203:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  203 | float FGCom_AGC_Squelch::getSquelchAttackTime() const {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:203:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  203 | float FGCom_AGC_Squelch::getSquelchAttackTime() const {
      | ~~~~~                    ^
      | auto                                                  -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:204:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  204 |     std::lock_guard<std::mutex> lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:208:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  208 | void FGCom_AGC_Squelch::setSquelchReleaseTime(float release_time_ms) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:209:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  209 |     std::lock_guard<std::mutex> lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:210:61: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  210 |     squelch_config.release_time_ms = clamp(release_time_ms, 1.0f, 10000.0f);
      |                                                             ^  ~
      |                                                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:210:67: warning: 10000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  210 |     squelch_config.release_time_ms = clamp(release_time_ms, 1.0f, 10000.0f);
      |                                                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:210:67: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  210 |     squelch_config.release_time_ms = clamp(release_time_ms, 1.0f, 10000.0f);
      |                                                                   ^      ~
      |                                                                          F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:211:52: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  211 |     logSquelchEvent("Squelch release time set to " + std::to_string(release_time_ms) + " ms");
      |                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:211:54: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  211 |     logSquelchEvent("Squelch release time set to " + std::to_string(release_time_ms) + " ms");
      |                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4241:3: note: resolves to this declaration
 4241 |   to_string(float __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:211:86: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  211 |     logSquelchEvent("Squelch release time set to " + std::to_string(release_time_ms) + " ms");
      |                                                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:214:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  214 | float FGCom_AGC_Squelch::getSquelchReleaseTime() const {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:214:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  214 | float FGCom_AGC_Squelch::getSquelchReleaseTime() const {
      | ~~~~~                    ^
      | auto                                                   -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:215:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  215 |     std::lock_guard<std::mutex> lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:219:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  219 | void FGCom_AGC_Squelch::setToneSquelch(bool enabled, float frequency_hz) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:220:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  220 |     std::lock_guard<std::mutex> lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:222:60: warning: 50.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  222 |     squelch_config.tone_frequency_hz = clamp(frequency_hz, 50.0f, 3000.0f);
      |                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:222:60: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  222 |     squelch_config.tone_frequency_hz = clamp(frequency_hz, 50.0f, 3000.0f);
      |                                                            ^   ~
      |                                                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:222:67: warning: 3000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  222 |     squelch_config.tone_frequency_hz = clamp(frequency_hz, 50.0f, 3000.0f);
      |                                                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:222:67: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  222 |     squelch_config.tone_frequency_hz = clamp(frequency_hz, 50.0f, 3000.0f);
      |                                                                   ^     ~
      |                                                                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:223:37: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  223 |     logSquelchEvent("Tone squelch " + std::string(enabled ? "enabled" : "disabled") + 
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:223:39: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  223 |     logSquelchEvent("Tone squelch " + std::string(enabled ? "enabled" : "disabled") + 
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:223:85: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  223 |     logSquelchEvent("Tone squelch " + std::string(enabled ? "enabled" : "disabled") + 
      |                                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:224:27: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  224 |                    " at " + std::to_string(frequency_hz) + " Hz");
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:224:29: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  224 |                    " at " + std::to_string(frequency_hz) + " Hz");
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4241:3: note: resolves to this declaration
 4241 |   to_string(float __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:224:58: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  224 |                    " at " + std::to_string(frequency_hz) + " Hz");
      |                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:227:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  227 | bool FGCom_AGC_Squelch::isToneSquelchEnabled() const {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:227:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  227 | bool FGCom_AGC_Squelch::isToneSquelchEnabled() const {
      | ~~~~                    ^
      | auto                                                 -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:228:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  228 |     std::lock_guard<std::mutex> lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:232:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  232 | float FGCom_AGC_Squelch::getToneSquelchFrequency() const {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:232:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  232 | float FGCom_AGC_Squelch::getToneSquelchFrequency() const {
      | ~~~~~                    ^
      | auto                                                     -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:233:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  233 |     std::lock_guard<std::mutex> lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:237:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  237 | void FGCom_AGC_Squelch::setNoiseSquelch(bool enabled, float threshold_db) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:238:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  238 |     std::lock_guard<std::mutex> lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:240:62: warning: 120.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  240 |     squelch_config.noise_threshold_db = clamp(threshold_db, -120.0f, 0.0f);
      |                                                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:240:62: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  240 |     squelch_config.noise_threshold_db = clamp(threshold_db, -120.0f, 0.0f);
      |                                                              ^    ~
      |                                                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:240:70: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  240 |     squelch_config.noise_threshold_db = clamp(threshold_db, -120.0f, 0.0f);
      |                                                                      ^  ~
      |                                                                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:241:38: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  241 |     logSquelchEvent("Noise squelch " + std::string(enabled ? "enabled" : "disabled") + 
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:241:40: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  241 |     logSquelchEvent("Noise squelch " + std::string(enabled ? "enabled" : "disabled") + 
      |                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:241:86: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  241 |     logSquelchEvent("Noise squelch " + std::string(enabled ? "enabled" : "disabled") + 
      |                                                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:242:27: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  242 |                    " at " + std::to_string(threshold_db) + " dB");
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3651:5: note: resolves to this declaration
 3651 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:242:29: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  242 |                    " at " + std::to_string(threshold_db) + " dB");
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4241:3: note: resolves to this declaration
 4241 |   to_string(float __val)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:242:58: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  242 |                    " at " + std::to_string(threshold_db) + " dB");
      |                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:245:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  245 | bool FGCom_AGC_Squelch::isNoiseSquelchEnabled() const {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:245:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  245 | bool FGCom_AGC_Squelch::isNoiseSquelchEnabled() const {
      | ~~~~                    ^
      | auto                                                  -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:246:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  246 |     std::lock_guard<std::mutex> lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:250:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  250 | float FGCom_AGC_Squelch::getNoiseSquelchThreshold() const {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:250:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  250 | float FGCom_AGC_Squelch::getNoiseSquelchThreshold() const {
      | ~~~~~                    ^
      | auto                                                      -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:251:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  251 |     std::lock_guard<std::mutex> lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:256:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  256 | void FGCom_AGC_Squelch::processAudioSamples(float* input_samples, float* output_samples, 
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:257:44: warning: 2 adjacent parameters of 'processAudioSamples' of convertible types are easily swapped by mistake [bugprone-easily-swappable-parameters]
  257 |                                            size_t sample_count, float sample_rate_hz) {
      |                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:257:51: note: the first parameter in the range is 'sample_count'
  257 |                                            size_t sample_count, float sample_rate_hz) {
      |                                                   ^~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:257:71: note: the last parameter in the range is 'sample_rate_hz'
  257 |                                            size_t sample_count, float sample_rate_hz) {
      |                                                                       ^~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:257:44: note: 
  257 |                                            size_t sample_count, float sample_rate_hz) {
      |                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:257:65: note: 'size_t' and 'float' may be implicitly converted: 'size_t' (as 'unsigned long') -> 'float', 'float' -> 'size_t' (as 'unsigned long')
  257 |                                            size_t sample_count, float sample_rate_hz) {
      |                                                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:257:44: warning: no header providing "size_t" is directly included [misc-include-cleaner]
    4 |                                            size_t sample_count, float sample_rate_hz) {
      |                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:258:27: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  258 |     if (sample_count == 0) return;
      |                           ^       
      |                            {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:261:10: warning: implicit conversion 'float *' -> 'bool' [readability-implicit-bool-conversion]
  261 |     if (!input_samples || !output_samples) {
      |         ~^
      |         (              == nullptr)
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:261:28: warning: implicit conversion 'float *' -> 'bool' [readability-implicit-bool-conversion]
  261 |     if (!input_samples || !output_samples) {
      |                           ~^             
      |                           (               == nullptr)
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:267:24: warning: 10000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  267 |     if (sample_count > 10000) { // Reasonable upper limit to prevent buffer overflow
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:272:5: warning: variable 'rms' of type 'float' can be declared 'const' [misc-const-correctness]
  272 |     float rms = calculateRMS(input_samples, sample_count);
      |     ^
      |           const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:273:5: warning: variable 'input_level_db' of type 'float' can be declared 'const' [misc-const-correctness]
  273 |     float input_level_db = linearToDb(rms);
      |     ^
      |           const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:277:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  277 |     if (agc_enabled.load()) {
      |         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/atomic:111:10: note: default parameter was declared here
  111 |     load(memory_order __m = memory_order_seq_cst) const noexcept
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:282:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  282 |     if (squelch_enabled.load()) {
      |         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/atomic:111:10: note: default parameter was declared here
  111 |     load(memory_order __m = memory_order_seq_cst) const noexcept
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:287:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  287 |     for (size_t i = 0; i < sample_count; ++i) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:288:24: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  288 |         float sample = input_samples[i];
      |                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:291:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  291 |         if (agc_enabled.load()) {
      |             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/atomic:111:10: note: default parameter was declared here
  111 |     load(memory_order __m = memory_order_seq_cst) const noexcept
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:296:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  296 |         if (squelch_enabled.load() && !squelch_state) {
      |             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/atomic:111:10: note: default parameter was declared here
  111 |     load(memory_order __m = memory_order_seq_cst) const noexcept
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:297:22: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  297 |             sample = 0.0f;
      |                      ^  ~
      |                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:300:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  300 |         output_samples[i] = sample;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:304:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  304 | bool FGCom_AGC_Squelch::isSquelchOpen() const {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:304:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  304 | bool FGCom_AGC_Squelch::isSquelchOpen() const {
      | ~~~~                    ^
      | auto                                          -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:308:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  308 | float FGCom_AGC_Squelch::getCurrentGain() const {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:308:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  308 | float FGCom_AGC_Squelch::getCurrentGain() const {
      | ~~~~~                    ^
      | auto                                            -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:312:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  312 | float FGCom_AGC_Squelch::getCurrentSignalLevel() const {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:312:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  312 | float FGCom_AGC_Squelch::getCurrentSignalLevel() const {
      | ~~~~~                    ^
      | auto                                                   -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:317:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  317 | void FGCom_AGC_Squelch::setAGCConfig(const AGCConfig& config) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:318:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  318 |     std::lock_guard<std::mutex> lock(agc_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:319:16: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  319 |     agc_config = config;
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:20:8: note: resolves to this declaration
   20 | struct AGCConfig {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:320:17: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  320 |     logAGCEvent("AGC configuration updated");
      |                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:323:30: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  323 | AGCConfig FGCom_AGC_Squelch::getAGCConfig() const {
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:323:30: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  323 | AGCConfig FGCom_AGC_Squelch::getAGCConfig() const {
      | ~~~~~~~~~                    ^
      | auto                                              -> AGCConfig
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:324:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  324 |     std::lock_guard<std::mutex> lock(agc_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:328:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  328 | void FGCom_AGC_Squelch::setSquelchConfig(const SquelchConfig& config) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:329:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  329 |     std::lock_guard<std::mutex> lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:330:20: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  330 |     squelch_config = config;
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:36:8: note: resolves to this declaration
   36 | struct SquelchConfig {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:331:21: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  331 |     logSquelchEvent("Squelch configuration updated");
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:334:34: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  334 | SquelchConfig FGCom_AGC_Squelch::getSquelchConfig() const {
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:334:34: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  334 | SquelchConfig FGCom_AGC_Squelch::getSquelchConfig() const {
      | ~~~~~~~~~~~~~                    ^
      | auto                                                      -> SquelchConfig
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:335:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  335 |     std::lock_guard<std::mutex> lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:340:29: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  340 | AGCStats FGCom_AGC_Squelch::getAGCStats() const {
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:340:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  340 | AGCStats FGCom_AGC_Squelch::getAGCStats() const {
      | ~~~~~~~~                    ^
      | auto                                            -> AGCStats
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:341:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  341 |     std::lock_guard<std::mutex> lock(agc_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:345:33: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  345 | SquelchStats FGCom_AGC_Squelch::getSquelchStats() const {
      |                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:345:33: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  345 | SquelchStats FGCom_AGC_Squelch::getSquelchStats() const {
      | ~~~~~~~~~~~~                    ^
      | auto                                                    -> SquelchStats
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:346:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  346 |     std::lock_guard<std::mutex> lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:350:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  350 | void FGCom_AGC_Squelch::resetStats() {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:351:5: warning: variable 'agc_lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  351 |     std::lock_guard<std::mutex> agc_lock(agc_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:352:5: warning: variable 'squelch_lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  352 |     std::lock_guard<std::mutex> squelch_lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:354:15: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  354 |     agc_stats = AGCStats();
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:50:8: note: resolves to this declaration
   50 | struct AGCStats {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:355:19: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  355 |     squelch_stats = SquelchStats();
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:64:8: note: resolves to this declaration
   64 | struct SquelchStats {
      |        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:357:17: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  357 |     logAGCEvent("AGC statistics reset");
      |                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:358:21: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  358 |     logSquelchEvent("Squelch statistics reset");
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:362:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  362 | void FGCom_AGC_Squelch::setAGCPreset(const std::string& preset_name) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:363:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  363 |     std::lock_guard<std::mutex> lock(agc_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:365:21: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  365 |     if (preset_name == "fast") {
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:367:37: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  367 |         agc_config.attack_time_ms = 1.0f;
      |                                     ^  ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:368:38: warning: 10.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  368 |         agc_config.release_time_ms = 10.0f;
      |                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:368:38: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  368 |         agc_config.release_time_ms = 10.0f;
      |                                      ^   ~
      |                                          F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:369:36: warning: 50.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  369 |         agc_config.threshold_db = -50.0f;
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:369:36: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  369 |         agc_config.threshold_db = -50.0f;
      |                                    ^   ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:370:28: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  370 |     } else if (preset_name == "medium") {
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:372:37: warning: 5.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  372 |         agc_config.attack_time_ms = 5.0f;
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:372:37: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  372 |         agc_config.attack_time_ms = 5.0f;
      |                                     ^  ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:373:38: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  373 |         agc_config.release_time_ms = 100.0f;
      |                                      ^    ~
      |                                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:374:36: warning: 60.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  374 |         agc_config.threshold_db = -60.0f;
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:374:36: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  374 |         agc_config.threshold_db = -60.0f;
      |                                    ^   ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:375:28: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  375 |     } else if (preset_name == "slow") {
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:377:37: warning: 20.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  377 |         agc_config.attack_time_ms = 20.0f;
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:377:37: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  377 |         agc_config.attack_time_ms = 20.0f;
      |                                     ^   ~
      |                                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:378:38: warning: 500.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  378 |         agc_config.release_time_ms = 500.0f;
      |                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:378:38: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  378 |         agc_config.release_time_ms = 500.0f;
      |                                      ^    ~
      |                                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:379:36: warning: 70.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  379 |         agc_config.threshold_db = -70.0f;
      |                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:379:36: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  379 |         agc_config.threshold_db = -70.0f;
      |                                    ^   ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:380:28: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  380 |     } else if (preset_name == "off") {
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:382:21: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  382 |         agc_enabled = false;
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/atomic:79:5: note: resolves to this declaration
   79 |     operator=(bool __i) noexcept
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:385:40: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  385 |     logAGCEvent("AGC preset applied: " + preset_name);
      |                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:388:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  388 | void FGCom_AGC_Squelch::setSquelchPreset(const std::string& preset_name) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:389:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  389 |     std::lock_guard<std::mutex> lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:391:21: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  391 |     if (preset_name == "sensitive") {
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:392:40: warning: 90.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  392 |         squelch_config.threshold_db = -90.0f;
      |                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:392:40: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  392 |         squelch_config.threshold_db = -90.0f;
      |                                        ^   ~
      |                                            F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:393:40: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  393 |         squelch_config.hysteresis_db = 1.0f;
      |                                        ^  ~
      |                                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:394:41: warning: 5.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  394 |         squelch_config.attack_time_ms = 5.0f;
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:394:41: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  394 |         squelch_config.attack_time_ms = 5.0f;
      |                                         ^  ~
      |                                            F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:395:42: warning: 25.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  395 |         squelch_config.release_time_ms = 25.0f;
      |                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:395:42: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  395 |         squelch_config.release_time_ms = 25.0f;
      |                                          ^   ~
      |                                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:396:28: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  396 |     } else if (preset_name == "normal") {
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:397:40: warning: 80.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  397 |         squelch_config.threshold_db = -80.0f;
      |                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:397:40: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  397 |         squelch_config.threshold_db = -80.0f;
      |                                        ^   ~
      |                                            F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:398:40: warning: 3.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  398 |         squelch_config.hysteresis_db = 3.0f;
      |                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:398:40: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  398 |         squelch_config.hysteresis_db = 3.0f;
      |                                        ^  ~
      |                                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:399:41: warning: 10.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  399 |         squelch_config.attack_time_ms = 10.0f;
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:399:41: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  399 |         squelch_config.attack_time_ms = 10.0f;
      |                                         ^   ~
      |                                             F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:400:42: warning: 50.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  400 |         squelch_config.release_time_ms = 50.0f;
      |                                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:400:42: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  400 |         squelch_config.release_time_ms = 50.0f;
      |                                          ^   ~
      |                                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:401:28: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  401 |     } else if (preset_name == "tight") {
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3727:5: note: resolves to this declaration
 3727 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:402:40: warning: 70.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  402 |         squelch_config.threshold_db = -70.0f;
      |                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:402:40: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  402 |         squelch_config.threshold_db = -70.0f;
      |                                        ^   ~
      |                                            F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:403:40: warning: 5.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  403 |         squelch_config.hysteresis_db = 5.0f;
      |                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:403:40: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  403 |         squelch_config.hysteresis_db = 5.0f;
      |                                        ^  ~
      |                                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:404:41: warning: 20.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  404 |         squelch_config.attack_time_ms = 20.0f;
      |                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:404:41: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  404 |         squelch_config.attack_time_ms = 20.0f;
      |                                         ^   ~
      |                                             F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:405:42: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  405 |         squelch_config.release_time_ms = 100.0f;
      |                                          ^    ~
      |                                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:408:48: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  408 |     logSquelchEvent("Squelch preset applied: " + preset_name);
      |                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3571:5: note: resolves to this declaration
 3571 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:411:6: warning: no header providing "std::vector" is directly included [misc-include-cleaner]
    6 | std::vector<std::string> FGCom_AGC_Squelch::getAGCPresets() const {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:411:45: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  411 | std::vector<std::string> FGCom_AGC_Squelch::getAGCPresets() const {
      |                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:411:45: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:411:45: warning: method 'getAGCPresets' can be made static [readability-convert-member-functions-to-static]
  411 | std::vector<std::string> FGCom_AGC_Squelch::getAGCPresets() const {
      |                                             ^               ~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:412:12: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  412 |     return {"fast", "medium", "slow", "off"};
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:679:7: note: default parameter was declared here
  679 |              const allocator_type& __a = allocator_type())
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:412:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  412 |     return {"fast", "medium", "slow", "off"};
      |             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:412:21: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  412 |     return {"fast", "medium", "slow", "off"};
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:412:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  412 |     return {"fast", "medium", "slow", "off"};
      |                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:412:39: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  412 |     return {"fast", "medium", "slow", "off"};
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:415:45: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  415 | std::vector<std::string> FGCom_AGC_Squelch::getSquelchPresets() const {
      |                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:415:45: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:415:45: warning: method 'getSquelchPresets' can be made static [readability-convert-member-functions-to-static]
  415 | std::vector<std::string> FGCom_AGC_Squelch::getSquelchPresets() const {
      |                                             ^                   ~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:416:12: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  416 |     return {"sensitive", "normal", "tight"};
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h:679:7: note: default parameter was declared here
  679 |              const allocator_type& __a = allocator_type())
      |              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:416:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  416 |     return {"sensitive", "normal", "tight"};
      |             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:416:26: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  416 |     return {"sensitive", "normal", "tight"};
      |                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:416:36: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  416 |     return {"sensitive", "normal", "tight"};
      |                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:420:32: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  420 | std::string FGCom_AGC_Squelch::getAGCStatusJSON() const {
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:420:32: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  420 | std::string FGCom_AGC_Squelch::getAGCStatusJSON() const {
      | ~~~~~~~~~~~                    ^
      | auto                                                    -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:421:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  421 |     std::lock_guard<std::mutex> lock(agc_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:424:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  424 |     json << "{"
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:425:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  425 |          << "\"mode\":" << static_cast<int>(agc_config.mode) << ","
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:425:25: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  425 |          << "\"mode\":" << static_cast<int>(agc_config.mode) << ","
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:191:7: note: resolves to this declaration
  191 |       operator<<(int __n);
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:425:62: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  425 |          << "\"mode\":" << static_cast<int>(agc_config.mode) << ","
      |                                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:426:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  426 |          << "\"enabled\":" << (agc_enabled.load() ? "true" : "false") << ","
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:426:28: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  426 |          << "\"enabled\":" << (agc_enabled.load() ? "true" : "false") << ","
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:426:32: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  426 |          << "\"enabled\":" << (agc_enabled.load() ? "true" : "false") << ","
      |                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/atomic:111:10: note: default parameter was declared here
  111 |     load(memory_order __m = memory_order_seq_cst) const noexcept
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:426:71: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  426 |          << "\"enabled\":" << (agc_enabled.load() ? "true" : "false") << ","
      |                                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:427:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  427 |          << "\"threshold_db\":" << agc_config.threshold_db << ","
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:427:33: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  427 |          << "\"threshold_db\":" << agc_config.threshold_db << ","
      |                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:226:7: note: resolves to this declaration
  226 |       operator<<(float __f)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:427:60: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  427 |          << "\"threshold_db\":" << agc_config.threshold_db << ","
      |                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:428:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  428 |          << "\"max_gain_db\":" << agc_config.max_gain_db << ","
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:428:32: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  428 |          << "\"max_gain_db\":" << agc_config.max_gain_db << ","
      |                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:226:7: note: resolves to this declaration
  226 |       operator<<(float __f)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:428:58: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  428 |          << "\"max_gain_db\":" << agc_config.max_gain_db << ","
      |                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:429:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  429 |          << "\"min_gain_db\":" << agc_config.min_gain_db << ","
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:429:32: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  429 |          << "\"min_gain_db\":" << agc_config.min_gain_db << ","
      |                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:226:7: note: resolves to this declaration
  226 |       operator<<(float __f)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:429:58: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  429 |          << "\"min_gain_db\":" << agc_config.min_gain_db << ","
      |                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:430:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  430 |          << "\"attack_time_ms\":" << agc_config.attack_time_ms << ","
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:430:35: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  430 |          << "\"attack_time_ms\":" << agc_config.attack_time_ms << ","
      |                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:226:7: note: resolves to this declaration
  226 |       operator<<(float __f)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:430:64: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  430 |          << "\"attack_time_ms\":" << agc_config.attack_time_ms << ","
      |                                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:431:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  431 |          << "\"release_time_ms\":" << agc_config.release_time_ms << ","
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:431:36: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  431 |          << "\"release_time_ms\":" << agc_config.release_time_ms << ","
      |                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:226:7: note: resolves to this declaration
  226 |       operator<<(float __f)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:431:66: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  431 |          << "\"release_time_ms\":" << agc_config.release_time_ms << ","
      |                                                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:432:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  432 |          << "\"current_gain_db\":" << current_gain_db << ","
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:432:36: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  432 |          << "\"current_gain_db\":" << current_gain_db << ","
      |                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:226:7: note: resolves to this declaration
  226 |       operator<<(float __f)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:432:55: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  432 |          << "\"current_gain_db\":" << current_gain_db << ","
      |                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:433:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  433 |          << "\"active\":" << (agc_stats.agc_active ? "true" : "false")
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:433:27: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  433 |          << "\"active\":" << (agc_stats.agc_active ? "true" : "false")
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:434:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  434 |          << "}";
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:439:32: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  439 | std::string FGCom_AGC_Squelch::getSquelchStatusJSON() const {
      |                                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:439:32: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  439 | std::string FGCom_AGC_Squelch::getSquelchStatusJSON() const {
      | ~~~~~~~~~~~                    ^
      | auto                                                        -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:440:5: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  440 |     std::lock_guard<std::mutex> lock(squelch_mutex);
      |     ^
      |                                 const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:443:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  443 |     json << "{"
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:444:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  444 |          << "\"enabled\":" << (squelch_enabled.load() ? "true" : "false") << ","
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:444:28: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  444 |          << "\"enabled\":" << (squelch_enabled.load() ? "true" : "false") << ","
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:444:32: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  444 |          << "\"enabled\":" << (squelch_enabled.load() ? "true" : "false") << ","
      |                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/atomic:111:10: note: default parameter was declared here
  111 |     load(memory_order __m = memory_order_seq_cst) const noexcept
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:444:75: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  444 |          << "\"enabled\":" << (squelch_enabled.load() ? "true" : "false") << ","
      |                                                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:445:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  445 |          << "\"threshold_db\":" << squelch_config.threshold_db << ","
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:445:33: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  445 |          << "\"threshold_db\":" << squelch_config.threshold_db << ","
      |                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:226:7: note: resolves to this declaration
  226 |       operator<<(float __f)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:445:64: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  445 |          << "\"threshold_db\":" << squelch_config.threshold_db << ","
      |                                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:446:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  446 |          << "\"hysteresis_db\":" << squelch_config.hysteresis_db << ","
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:446:34: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  446 |          << "\"hysteresis_db\":" << squelch_config.hysteresis_db << ","
      |                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:226:7: note: resolves to this declaration
  226 |       operator<<(float __f)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:446:66: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  446 |          << "\"hysteresis_db\":" << squelch_config.hysteresis_db << ","
      |                                                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:447:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  447 |          << "\"attack_time_ms\":" << squelch_config.attack_time_ms << ","
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:447:35: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  447 |          << "\"attack_time_ms\":" << squelch_config.attack_time_ms << ","
      |                                   ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:226:7: note: resolves to this declaration
  226 |       operator<<(float __f)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:447:68: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  447 |          << "\"attack_time_ms\":" << squelch_config.attack_time_ms << ","
      |                                                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:448:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  448 |          << "\"release_time_ms\":" << squelch_config.release_time_ms << ","
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:448:36: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  448 |          << "\"release_time_ms\":" << squelch_config.release_time_ms << ","
      |                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:226:7: note: resolves to this declaration
  226 |       operator<<(float __f)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:448:70: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  448 |          << "\"release_time_ms\":" << squelch_config.release_time_ms << ","
      |                                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:449:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  449 |          << "\"tone_squelch\":" << (squelch_config.tone_squelch ? "true" : "false") << ","
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:449:33: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  449 |          << "\"tone_squelch\":" << (squelch_config.tone_squelch ? "true" : "false") << ","
      |                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:449:85: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  449 |          << "\"tone_squelch\":" << (squelch_config.tone_squelch ? "true" : "false") << ","
      |                                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:450:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  450 |          << "\"tone_frequency_hz\":" << squelch_config.tone_frequency_hz << ","
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:450:38: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  450 |          << "\"tone_frequency_hz\":" << squelch_config.tone_frequency_hz << ","
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:226:7: note: resolves to this declaration
  226 |       operator<<(float __f)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:450:74: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  450 |          << "\"tone_frequency_hz\":" << squelch_config.tone_frequency_hz << ","
      |                                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:451:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  451 |          << "\"noise_squelch\":" << (squelch_config.noise_squelch ? "true" : "false") << ","
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:451:34: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  451 |          << "\"noise_squelch\":" << (squelch_config.noise_squelch ? "true" : "false") << ","
      |                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:451:87: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  451 |          << "\"noise_squelch\":" << (squelch_config.noise_squelch ? "true" : "false") << ","
      |                                                                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:452:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  452 |          << "\"noise_threshold_db\":" << squelch_config.noise_threshold_db << ","
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:452:39: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  452 |          << "\"noise_threshold_db\":" << squelch_config.noise_threshold_db << ","
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:226:7: note: resolves to this declaration
  226 |       operator<<(float __f)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:452:76: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  452 |          << "\"noise_threshold_db\":" << squelch_config.noise_threshold_db << ","
      |                                                                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:453:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  453 |          << "\"open\":" << (squelch_state ? "true" : "false") << ","
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:453:25: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  453 |          << "\"open\":" << (squelch_state ? "true" : "false") << ","
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:453:63: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  453 |          << "\"open\":" << (squelch_state ? "true" : "false") << ","
      |                                                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:454:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  454 |          << "\"signal_level_db\":" << squelch_stats.current_signal_level_db
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:454:36: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  454 |          << "\"signal_level_db\":" << squelch_stats.current_signal_level_db
      |                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:226:7: note: resolves to this declaration
  226 |       operator<<(float __f)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:455:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  455 |          << "}";
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:460:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  460 | bool FGCom_AGC_Squelch::updateAGCFromJSON(const std::string& json_config) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:460:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  460 | bool FGCom_AGC_Squelch::updateAGCFromJSON(const std::string& json_config) {
      | ~~~~                    ^
      | auto                                                                      -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:463:9: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  463 |         std::lock_guard<std::mutex> lock(agc_mutex);
      |         ^
      |                                     const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:467:25: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  467 |             logAGCEvent("Empty JSON configuration provided");
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:472:13: warning: use !absl::StrContains instead of find() == npos [abseil-string-find-str-contains]
    6 |         if (json_config.find("{") == std::string::npos || 
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |             !absl::StrContains(json_config, "{")
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:472:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:2695:31: note: default parameter was declared here
 2695 |       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:472:30: warning: 'find' called with a string literal consisting of a single character; consider using the more effective overload accepting a character [performance-faster-string-find]
  472 |         if (json_config.find("{") == std::string::npos || 
      |                              ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:473:13: warning: use !absl::StrContains instead of find() == npos [abseil-string-find-str-contains]
  473 |             json_config.find("}") == std::string::npos) {
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |             !absl::StrContains(json_config, "}")
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:473:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:2695:31: note: default parameter was declared here
 2695 |       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:473:30: warning: 'find' called with a string literal consisting of a single character; consider using the more effective overload accepting a character [performance-faster-string-find]
  473 |             json_config.find("}") == std::string::npos) {
      |                              ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:474:25: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  474 |             logAGCEvent("Invalid JSON format in configuration");
      |                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:479:61: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  479 |         logAGCEvent("AGC configuration updated from JSON: " + json_config.substr(0, 100) + "...");
      |                                                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:479:85: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  479 |         logAGCEvent("AGC configuration updated from JSON: " + json_config.substr(0, 100) + "...");
      |                                                                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:479:90: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  479 |         logAGCEvent("AGC configuration updated from JSON: " + json_config.substr(0, 100) + "...");
      |                                                                                          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:481:25: warning: no header providing "std::exception" is directly included [misc-include-cleaner]
    4 |     } catch (const std::exception& e) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:482:54: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  482 |         logAGCEvent("Error updating AGC from JSON: " + std::string(e.what()));
      |                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:482:56: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  482 |         logAGCEvent("Error updating AGC from JSON: " + std::string(e.what()));
      |                                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:487:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  487 | bool FGCom_AGC_Squelch::updateSquelchFromJSON(const std::string& json_config) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:487:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  487 | bool FGCom_AGC_Squelch::updateSquelchFromJSON(const std::string& json_config) {
      | ~~~~                    ^
      | auto                                                                          -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:490:9: warning: variable 'lock' of type 'std::lock_guard<std::mutex>' can be declared 'const' [misc-const-correctness]
  490 |         std::lock_guard<std::mutex> lock(squelch_mutex);
      |         ^
      |                                     const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:494:29: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  494 |             logSquelchEvent("Empty JSON configuration provided");
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:499:13: warning: use !absl::StrContains instead of find() == npos [abseil-string-find-str-contains]
  499 |         if (json_config.find("{") == std::string::npos || 
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |             !absl::StrContains(json_config, "{")
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:499:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:2695:31: note: default parameter was declared here
 2695 |       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:499:30: warning: 'find' called with a string literal consisting of a single character; consider using the more effective overload accepting a character [performance-faster-string-find]
  499 |         if (json_config.find("{") == std::string::npos || 
      |                              ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:500:13: warning: use !absl::StrContains instead of find() == npos [abseil-string-find-str-contains]
  500 |             json_config.find("}") == std::string::npos) {
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |             !absl::StrContains(json_config, "}")
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:500:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:2695:31: note: default parameter was declared here
 2695 |       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
      |                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:500:30: warning: 'find' called with a string literal consisting of a single character; consider using the more effective overload accepting a character [performance-faster-string-find]
  500 |             json_config.find("}") == std::string::npos) {
      |                              ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:501:29: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  501 |             logSquelchEvent("Invalid JSON format in configuration");
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:506:69: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  506 |         logSquelchEvent("Squelch configuration updated from JSON: " + json_config.substr(0, 100) + "...");
      |                                                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:506:93: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  506 |         logSquelchEvent("Squelch configuration updated from JSON: " + json_config.substr(0, 100) + "...");
      |                                                                                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:506:98: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  506 |         logSquelchEvent("Squelch configuration updated from JSON: " + json_config.substr(0, 100) + "...");
      |                                                                                                  ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3688:5: note: resolves to this declaration
 3688 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:509:62: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  509 |         logSquelchEvent("Error updating squelch from JSON: " + std::string(e.what()));
      |                                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:3674:5: note: resolves to this declaration
 3674 |     operator+(const _CharT* __lhs,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:509:64: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  509 |         logSquelchEvent("Error updating squelch from JSON: " + std::string(e.what()));
      |                                                                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:515:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  515 | void FGCom_AGC_Squelch::updateAGC(float input_level_db, float sample_rate_hz) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:516:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  516 |     if (!agc_enabled.load()) return;
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/atomic:111:10: note: default parameter was declared here
  111 |     load(memory_order __m = memory_order_seq_cst) const noexcept
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:516:29: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  516 |     if (!agc_enabled.load()) return;
      |                             ^       
      |                              {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:518:16: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  518 |     auto now = std::chrono::system_clock::now();
      |                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:519:20: warning: 'duration_cast<std::chrono::duration<long, std::ratio<1, 1000>>, long, std::ratio<1, 1000000000>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  519 |     auto elapsed = std::chrono::duration_cast<std::chrono::milliseconds>(now - last_agc_update);
      |                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:273:7: note: resolves to this declaration
  273 |       duration_cast(const duration<_Rep, _Period>& __d)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:519:33: warning: no header providing "std::chrono::duration_cast" is directly included [misc-include-cleaner]
  519 |     auto elapsed = std::chrono::duration_cast<std::chrono::milliseconds>(now - last_agc_update);
      |                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:519:60: warning: no header providing "std::chrono::milliseconds" is directly included [misc-include-cleaner]
  519 |     auto elapsed = std::chrono::duration_cast<std::chrono::milliseconds>(now - last_agc_update);
      |                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:519:78: warning: 'operator-<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>, std::chrono::duration<long, std::ratio<1, 1000000000>>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  519 |     auto elapsed = std::chrono::duration_cast<std::chrono::milliseconds>(now - last_agc_update);
      |                                                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1141:7: note: resolves to this declaration
 1141 |       operator-(const time_point<_Clock, _Dur1>& __lhs,
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:520:5: warning: variable 'dt_ms' of type 'float' can be declared 'const' [misc-const-correctness]
  520 |     float dt_ms = elapsed.count();
      |     ^
      |           const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:520:19: warning: narrowing conversion from 'rep' (aka 'long') to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  520 |     float dt_ms = elapsed.count();
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:521:21: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  521 |     last_agc_update = now;
      |                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:525:30: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  525 |     float required_gain_db = 0.0f; // Default to no gain change
      |                              ^  ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:528:27: warning: 30.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  528 |     if (input_level_db < -30.0f) {
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:528:27: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  528 |     if (input_level_db < -30.0f) {
      |                           ^   ~
      |                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:528:34: warning: repeated branch body in conditional chain [bugprone-branch-clone]
  528 |     if (input_level_db < -30.0f) {
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:531:6: note: end of the original
  531 |     } else if (input_level_db > 0.0f) {
      |      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:531:39: note: clone 1 starts here
  531 |     } else if (input_level_db > 0.0f) {
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:530:29: warning: 20.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  530 |         required_gain_db = -20.0f - input_level_db;
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:530:29: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  530 |         required_gain_db = -20.0f - input_level_db;
      |                             ^   ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:531:33: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  531 |     } else if (input_level_db > 0.0f) {
      |                                 ^  ~
      |                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:533:29: warning: 20.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  533 |         required_gain_db = -20.0f - input_level_db;
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:533:29: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  533 |         required_gain_db = -20.0f - input_level_db;
      |                             ^   ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:557:5: warning: variable 'gain_diff' of type 'float' can be declared 'const' [misc-const-correctness]
  557 |     float gain_diff = required_gain_db - current_gain_db;
      |     ^
      |           const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:558:5: warning: variable 'time_constant' of type 'float' can be declared 'const' [misc-const-correctness]
  558 |     float time_constant = (gain_diff > 0) ? agc_config.attack_time_ms : agc_config.release_time_ms;
      |     ^
      |           const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:562:9: warning: variable 'alpha' of type 'float' can be declared 'const' [misc-const-correctness]
  562 |         float alpha = 1.0f - std::exp(-dt_ms / time_constant);
      |         ^
      |               const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:562:23: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  562 |         float alpha = 1.0f - std::exp(-dt_ms / time_constant);
      |                       ^  ~
      |                          F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:562:30: warning: 'exp' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  562 |         float alpha = 1.0f - std::exp(-dt_ms / time_constant);
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath:215:3: note: resolves to this declaration
  215 |   exp(float __x)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:573:29: warning: 'abs' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  573 |     agc_stats.agc_active = (std::abs(gain_diff) > 0.1f);
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/std_abs.h:75:3: note: resolves to this declaration
   75 |   abs(float __x)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:573:51: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  573 |     agc_stats.agc_active = (std::abs(gain_diff) > 0.1f);
      |                                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:573:51: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  573 |     agc_stats.agc_active = (std::abs(gain_diff) > 0.1f);
      |                                                   ^  ~
      |                                                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:574:31: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  574 |     agc_stats.last_adjustment = now;
      |                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:578:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  578 | void FGCom_AGC_Squelch::updateSquelch(float input_level_db, float sample_rate_hz) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:578:39: warning: 2 adjacent parameters of 'updateSquelch' of similar type ('float') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  578 | void FGCom_AGC_Squelch::updateSquelch(float input_level_db, float sample_rate_hz) {
      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:578:45: note: the first parameter in the range is 'input_level_db'
  578 | void FGCom_AGC_Squelch::updateSquelch(float input_level_db, float sample_rate_hz) {
      |                                             ^~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:578:67: note: the last parameter in the range is 'sample_rate_hz'
  578 | void FGCom_AGC_Squelch::updateSquelch(float input_level_db, float sample_rate_hz) {
      |                                                                   ^~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:579:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  579 |     if (!squelch_enabled.load()) return;
      |          ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/atomic:111:10: note: default parameter was declared here
  111 |     load(memory_order __m = memory_order_seq_cst) const noexcept
      |          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:579:33: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  579 |     if (!squelch_enabled.load()) return;
      |                                 ^       
      |                                  {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:581:16: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  581 |     auto now = std::chrono::system_clock::now();
      |                ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:582:20: warning: 'duration_cast<std::chrono::duration<long, std::ratio<1, 1000>>, long, std::ratio<1, 1000000000>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  582 |     auto elapsed = std::chrono::duration_cast<std::chrono::milliseconds>(now - last_squelch_change);
      |                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:273:7: note: resolves to this declaration
  273 |       duration_cast(const duration<_Rep, _Period>& __d)
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:582:78: warning: 'operator-<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>, std::chrono::duration<long, std::ratio<1, 1000000000>>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  582 |     auto elapsed = std::chrono::duration_cast<std::chrono::milliseconds>(now - last_squelch_change);
      |                                                                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:1141:7: note: resolves to this declaration
 1141 |       operator-(const time_point<_Clock, _Dur1>& __lhs,
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:583:5: warning: variable 'dt_ms' of type 'float' can be declared 'const' [misc-const-correctness]
  583 |     float dt_ms = elapsed.count();
      |     ^
      |           const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:583:19: warning: narrowing conversion from 'rep' (aka 'long') to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  583 |     float dt_ms = elapsed.count();
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:586:5: warning: variable 'sample_period_ms' of type 'float' can be declared 'const' [misc-const-correctness]
  586 |     float sample_period_ms = 1000.0f / sample_rate_hz;
      |     ^
      |           const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:586:30: warning: 1000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  586 |     float sample_period_ms = 1000.0f / sample_rate_hz;
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:586:30: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  586 |     float sample_period_ms = 1000.0f / sample_rate_hz;
      |                              ^     ~
      |                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:587:5: warning: variable 'time_constant_samples' of type 'float' can be declared 'const' [misc-const-correctness]
  587 |     float time_constant_samples = squelch_config.attack_time_ms / sample_period_ms;
      |     ^
      |           const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:590:33: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  590 |     if (time_constant_samples < 1.0f) {
      |                                 ^  ~
      |                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:592:41: warning: 'max<float>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  592 |         squelch_config.attack_time_ms = std::max(squelch_config.attack_time_ms, sample_period_ms);
      |                                         ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algobase.h:257:5: note: resolves to this declaration
  257 |     max(const _Tp& __a, const _Tp& __b)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:599:5: warning: variable 'threshold' of type 'float' can be declared 'const' [misc-const-correctness]
  599 |     float threshold = squelch_state ? 
      |     ^
      |           const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:604:5: warning: variable 'signal_present' of type 'bool' can be declared 'const' [misc-const-correctness]
  604 |     bool signal_present = input_level_db > threshold;
      |     ^
      |          const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:611:29: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  611 |             squelch_timer = 0.0f;
      |                             ^  ~
      |                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:612:33: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  612 |             last_squelch_change = now;
      |                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:614:29: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  614 |             logSquelchEvent("Squelch opened");
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:620:29: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  620 |             squelch_timer = 0.0f;
      |                             ^  ~
      |                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:621:33: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  621 |             last_squelch_change = now;
      |                                 ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/chrono.h:922:13: note: resolves to this declaration
  922 |       class time_point
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:623:29: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  623 |             logSquelchEvent("Squelch closed");
      |                             ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:641:39: note: default parameter was declared here
  641 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:626:25: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  626 |         squelch_timer = 0.0f;
      |                         ^  ~
      |                            F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:634:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  634 | bool FGCom_AGC_Squelch::detectTone(float* samples, size_t sample_count, float sample_rate_hz) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:634:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  634 | bool FGCom_AGC_Squelch::detectTone(float* samples, size_t sample_count, float sample_rate_hz) {
      | ~~~~                    ^
      | auto                                                                                          -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:634:25: warning: method 'detectTone' can be made const [readability-make-member-function-const]
  634 | bool FGCom_AGC_Squelch::detectTone(float* samples, size_t sample_count, float sample_rate_hz) {
      |                         ^
      |                                                                                               const
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:634:43: warning: pointer parameter 'samples' can be pointer to const [readability-non-const-parameter]
  634 | bool FGCom_AGC_Squelch::detectTone(float* samples, size_t sample_count, float sample_rate_hz) {
      |                                           ^
      |                                    const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:634:52: warning: 2 adjacent parameters of 'detectTone' of convertible types are easily swapped by mistake [bugprone-easily-swappable-parameters]
  634 | bool FGCom_AGC_Squelch::detectTone(float* samples, size_t sample_count, float sample_rate_hz) {
      |                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:634:59: note: the first parameter in the range is 'sample_count'
  634 | bool FGCom_AGC_Squelch::detectTone(float* samples, size_t sample_count, float sample_rate_hz) {
      |                                                           ^~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:634:79: note: the last parameter in the range is 'sample_rate_hz'
  634 | bool FGCom_AGC_Squelch::detectTone(float* samples, size_t sample_count, float sample_rate_hz) {
      |                                                                               ^~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:634:52: note: 
  634 | bool FGCom_AGC_Squelch::detectTone(float* samples, size_t sample_count, float sample_rate_hz) {
      |                                                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:634:73: note: 'size_t' and 'float' may be implicitly converted: 'size_t' (as 'unsigned long') -> 'float', 'float' -> 'size_t' (as 'unsigned long')
  634 | bool FGCom_AGC_Squelch::detectTone(float* samples, size_t sample_count, float sample_rate_hz) {
      |                                                                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:635:38: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  635 |     if (!squelch_config.tone_squelch) return false;
      |                                      ^             
      |                                       {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:638:5: warning: variable 'frequency' of type 'float' can be declared 'const' [misc-const-correctness]
  638 |     float frequency = squelch_config.tone_frequency_hz;
      |     ^
      |           const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:639:5: warning: variable 'omega' of type 'float' can be declared 'const' [misc-const-correctness]
  639 |     float omega = 2.0f * M_PI * frequency / sample_rate_hz;
      |     ^
      |           const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:639:19: warning: narrowing conversion from 'double' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  639 |     float omega = 2.0f * M_PI * frequency / sample_rate_hz;
      |                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:639:19: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:639:19: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  639 |     float omega = 2.0f * M_PI * frequency / sample_rate_hz;
      |                   ^  ~
      |                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:639:26: warning: no header providing "M_PI" is directly included [misc-include-cleaner]
    5 |     float omega = 2.0f * M_PI * frequency / sample_rate_hz;
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:641:5: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
  641 |     float q1 = 0.0f, q2 = 0.0f;
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:641:11: warning: variable name 'q1' is too short, expected at least 3 characters [readability-identifier-length]
  641 |     float q1 = 0.0f, q2 = 0.0f;
      |           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:641:16: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  641 |     float q1 = 0.0f, q2 = 0.0f;
      |                ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:641:22: warning: variable name 'q2' is too short, expected at least 3 characters [readability-identifier-length]
  641 |     float q1 = 0.0f, q2 = 0.0f;
      |                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:641:27: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  641 |     float q1 = 0.0f, q2 = 0.0f;
      |                           ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:642:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  642 |     for (size_t i = 0; i < sample_count; ++i) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:643:9: warning: variable 'q0' of type 'float' can be declared 'const' [misc-const-correctness]
  643 |         float q0 = 2.0f * std::cos(omega) * q1 - q2 + samples[i];
      |         ^
      |               const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:643:15: warning: variable name 'q0' is too short, expected at least 3 characters [readability-identifier-length]
  643 |         float q0 = 2.0f * std::cos(omega) * q1 - q2 + samples[i];
      |               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:643:20: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  643 |         float q0 = 2.0f * std::cos(omega) * q1 - q2 + samples[i];
      |                    ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:643:20: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  643 |         float q0 = 2.0f * std::cos(omega) * q1 - q2 + samples[i];
      |                    ^  ~
      |                       F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:643:27: warning: 'cos' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  643 |         float q0 = 2.0f * std::cos(omega) * q1 - q2 + samples[i];
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath:177:3: note: resolves to this declaration
  177 |   cos(float __x)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:643:55: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  643 |         float q0 = 2.0f * std::cos(omega) * q1 - q2 + samples[i];
      |                                                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:648:5: warning: variable 'magnitude' of type 'float' can be declared 'const' [misc-const-correctness]
  648 |     float magnitude = std::sqrt(q1 * q1 + q2 * q2 - q1 * q2 * 2.0f * std::cos(omega));
      |     ^
      |           const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:648:23: warning: 'sqrt' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  648 |     float magnitude = std::sqrt(q1 * q1 + q2 * q2 - q1 * q2 * 2.0f * std::cos(omega));
      |                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath:438:3: note: resolves to this declaration
  438 |   sqrt(float __x)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:648:63: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  648 |     float magnitude = std::sqrt(q1 * q1 + q2 * q2 - q1 * q2 * 2.0f * std::cos(omega));
      |                                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:648:63: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  648 |     float magnitude = std::sqrt(q1 * q1 + q2 * q2 - q1 * q2 * 2.0f * std::cos(omega));
      |                                                               ^  ~
      |                                                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:648:70: warning: 'cos' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  648 |     float magnitude = std::sqrt(q1 * q1 + q2 * q2 - q1 * q2 * 2.0f * std::cos(omega));
      |                                                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath:177:3: note: resolves to this declaration
  177 |   cos(float __x)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:649:5: warning: variable 'threshold' of type 'float' can be declared 'const' [misc-const-correctness]
  649 |     float threshold = 0.1f; // Adjust based on requirements
      |     ^
      |           const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:649:23: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  649 |     float threshold = 0.1f; // Adjust based on requirements
      |                       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:649:23: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  649 |     float threshold = 0.1f; // Adjust based on requirements
      |                       ^  ~
      |                          F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:654:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  654 | float FGCom_AGC_Squelch::calculateRMS(const float* samples, size_t sample_count) {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:654:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  654 | float FGCom_AGC_Squelch::calculateRMS(const float* samples, size_t sample_count) {
      | ~~~~~                    ^
      | auto                                                                             -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:654:26: warning: method 'calculateRMS' can be made static [readability-convert-member-functions-to-static]
  654 | float FGCom_AGC_Squelch::calculateRMS(const float* samples, size_t sample_count) {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:655:27: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  655 |     if (sample_count == 0) return 0.0f;
      |                           ^            
      |                            {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:655:35: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  655 |     if (sample_count == 0) return 0.0f;
      |                                   ^  ~
      |                                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:657:17: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  657 |     float sum = 0.0f;
      |                 ^  ~
      |                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:658:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  658 |     for (size_t i = 0; i < sample_count; ++i) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:659:16: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  659 |         sum += samples[i] * samples[i];
      |                ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:659:29: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  659 |         sum += samples[i] * samples[i];
      |                             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:662:12: warning: 'sqrt' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  662 |     return std::sqrt(sum / sample_count);
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath:438:3: note: resolves to this declaration
  438 |   sqrt(float __x)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:662:28: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  662 |     return std::sqrt(sum / sample_count);
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:665:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  665 | float FGCom_AGC_Squelch::calculatePeak(float* samples, size_t sample_count) {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:665:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  665 | float FGCom_AGC_Squelch::calculatePeak(float* samples, size_t sample_count) {
      | ~~~~~                    ^
      | auto                                                                        -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:665:26: warning: method 'calculatePeak' can be made static [readability-convert-member-functions-to-static]
  665 | float FGCom_AGC_Squelch::calculatePeak(float* samples, size_t sample_count) {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:666:27: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  666 |     if (sample_count == 0) return 0.0f;
      |                           ^            
      |                            {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:666:35: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  666 |     if (sample_count == 0) return 0.0f;
      |                                   ^  ~
      |                                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:668:18: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  668 |     float peak = 0.0f;
      |                  ^  ~
      |                     F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:669:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  669 |     for (size_t i = 0; i < sample_count; ++i) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:670:9: warning: variable 'abs_sample' of type 'float' can be declared 'const' [misc-const-correctness]
  670 |         float abs_sample = std::abs(samples[i]);
      |         ^
      |               const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:670:28: warning: 'abs' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  670 |         float abs_sample = std::abs(samples[i]);
      |                            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/std_abs.h:75:3: note: resolves to this declaration
   75 |   abs(float __x)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:670:37: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  670 |         float abs_sample = std::abs(samples[i]);
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:679:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  679 | void FGCom_AGC_Squelch::applyGain(float* samples, size_t sample_count, float gain_db) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:679:51: warning: 2 adjacent parameters of 'applyGain' of convertible types are easily swapped by mistake [bugprone-easily-swappable-parameters]
  679 | void FGCom_AGC_Squelch::applyGain(float* samples, size_t sample_count, float gain_db) {
      |                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:679:58: note: the first parameter in the range is 'sample_count'
  679 | void FGCom_AGC_Squelch::applyGain(float* samples, size_t sample_count, float gain_db) {
      |                                                          ^~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:679:78: note: the last parameter in the range is 'gain_db'
  679 | void FGCom_AGC_Squelch::applyGain(float* samples, size_t sample_count, float gain_db) {
      |                                                                              ^~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:679:51: note: 
  679 | void FGCom_AGC_Squelch::applyGain(float* samples, size_t sample_count, float gain_db) {
      |                                                   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:679:72: note: 'size_t' and 'float' may be implicitly converted: 'size_t' (as 'unsigned long') -> 'float', 'float' -> 'size_t' (as 'unsigned long')
  679 | void FGCom_AGC_Squelch::applyGain(float* samples, size_t sample_count, float gain_db) {
      |                                                                        ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:680:5: warning: variable 'gain_linear' of type 'float' can be declared 'const' [misc-const-correctness]
  680 |     float gain_linear = dbToLinear(gain_db);
      |     ^
      |           const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:681:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  681 |     for (size_t i = 0; i < sample_count; ++i) {
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:682:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  682 |         samples[i] *= gain_linear;
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:686:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  686 | void FGCom_AGC_Squelch::applySquelch(float* samples, size_t sample_count, bool squelch_open) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:686:25: warning: method 'applySquelch' can be made static [readability-convert-member-functions-to-static]
  686 | void FGCom_AGC_Squelch::applySquelch(float* samples, size_t sample_count, bool squelch_open) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:688:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  688 |         for (size_t i = 0; i < sample_count; ++i) {
      |         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:689:13: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  689 |             samples[i] = 0.0f;
      |             ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:689:26: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  689 |             samples[i] = 0.0f;
      |                          ^  ~
      |                             F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:694:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  694 | void FGCom_AGC_Squelch::processAGCFast(float input_level_db, float sample_rate_hz) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:694:40: warning: 2 adjacent parameters of 'processAGCFast' of similar type ('float') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  694 | void FGCom_AGC_Squelch::processAGCFast(float input_level_db, float sample_rate_hz) {
      |                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:694:46: note: the first parameter in the range is 'input_level_db'
  694 | void FGCom_AGC_Squelch::processAGCFast(float input_level_db, float sample_rate_hz) {
      |                                              ^~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:694:68: note: the last parameter in the range is 'sample_rate_hz'
  694 | void FGCom_AGC_Squelch::processAGCFast(float input_level_db, float sample_rate_hz) {
      |                                                                    ^~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:697:27: warning: 20.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  697 |     if (input_level_db > -20.0f) {
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:697:27: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  697 |     if (input_level_db > -20.0f) {
      |                           ^   ~
      |                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:699:37: warning: 0.5f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  699 |         agc_config.attack_time_ms = 0.5f;
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:699:37: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  699 |         agc_config.attack_time_ms = 0.5f;
      |                                     ^  ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:700:38: warning: 5.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  700 |         agc_config.release_time_ms = 5.0f;
      |                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:700:38: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  700 |         agc_config.release_time_ms = 5.0f;
      |                                      ^  ~
      |                                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:701:34: warning: 60.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  701 |     } else if (input_level_db < -60.0f) {
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:701:34: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  701 |     } else if (input_level_db < -60.0f) {
      |                                  ^   ~
      |                                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:703:37: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  703 |         agc_config.attack_time_ms = 1.0f;
      |                                     ^  ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:704:38: warning: 15.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  704 |         agc_config.release_time_ms = 15.0f;
      |                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:704:38: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  704 |         agc_config.release_time_ms = 15.0f;
      |                                      ^   ~
      |                                          F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:707:37: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  707 |         agc_config.attack_time_ms = 1.0f;
      |                                     ^  ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:708:38: warning: 10.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  708 |         agc_config.release_time_ms = 10.0f;
      |                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:708:38: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  708 |         agc_config.release_time_ms = 10.0f;
      |                                      ^   ~
      |                                          F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:712:5: warning: variable 'sample_period_ms' of type 'float' can be declared 'const' [misc-const-correctness]
  712 |     float sample_period_ms = 1000.0f / sample_rate_hz;
      |     ^
      |           const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:712:30: warning: 1000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  712 |     float sample_period_ms = 1000.0f / sample_rate_hz;
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:712:30: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  712 |     float sample_period_ms = 1000.0f / sample_rate_hz;
      |                              ^     ~
      |                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:713:28: warning: 0.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  713 |     if (sample_period_ms > 0.1f) {
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:713:28: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  713 |     if (sample_period_ms > 0.1f) {
      |                            ^  ~
      |                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:715:37: warning: 'max<float>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  715 |         agc_config.attack_time_ms = std::max(agc_config.attack_time_ms, sample_period_ms * 2.0f);
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algobase.h:257:5: note: resolves to this declaration
  257 |     max(const _Tp& __a, const _Tp& __b)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:715:92: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  715 |         agc_config.attack_time_ms = std::max(agc_config.attack_time_ms, sample_period_ms * 2.0f);
      |                                                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:715:92: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  715 |         agc_config.attack_time_ms = std::max(agc_config.attack_time_ms, sample_period_ms * 2.0f);
      |                                                                                            ^  ~
      |                                                                                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:719:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  719 | void FGCom_AGC_Squelch::processAGCMedium(float input_level_db, float sample_rate_hz) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:719:42: warning: 2 adjacent parameters of 'processAGCMedium' of similar type ('float') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  719 | void FGCom_AGC_Squelch::processAGCMedium(float input_level_db, float sample_rate_hz) {
      |                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:719:48: note: the first parameter in the range is 'input_level_db'
  719 | void FGCom_AGC_Squelch::processAGCMedium(float input_level_db, float sample_rate_hz) {
      |                                                ^~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:719:70: note: the last parameter in the range is 'sample_rate_hz'
  719 | void FGCom_AGC_Squelch::processAGCMedium(float input_level_db, float sample_rate_hz) {
      |                                                                      ^~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:722:27: warning: 30.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  722 |     if (input_level_db > -30.0f) {
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:722:27: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  722 |     if (input_level_db > -30.0f) {
      |                           ^   ~
      |                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:724:37: warning: 3.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  724 |         agc_config.attack_time_ms = 3.0f;
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:724:37: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  724 |         agc_config.attack_time_ms = 3.0f;
      |                                     ^  ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:725:38: warning: 80.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  725 |         agc_config.release_time_ms = 80.0f;
      |                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:725:38: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  725 |         agc_config.release_time_ms = 80.0f;
      |                                      ^   ~
      |                                          F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:726:34: warning: 70.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  726 |     } else if (input_level_db < -70.0f) {
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:726:34: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  726 |     } else if (input_level_db < -70.0f) {
      |                                  ^   ~
      |                                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:728:37: warning: 8.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  728 |         agc_config.attack_time_ms = 8.0f;
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:728:37: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  728 |         agc_config.attack_time_ms = 8.0f;
      |                                     ^  ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:729:38: warning: 150.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  729 |         agc_config.release_time_ms = 150.0f;
      |                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:729:38: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  729 |         agc_config.release_time_ms = 150.0f;
      |                                      ^    ~
      |                                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:732:37: warning: 5.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  732 |         agc_config.attack_time_ms = 5.0f;
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:732:37: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  732 |         agc_config.attack_time_ms = 5.0f;
      |                                     ^  ~
      |                                        F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:733:38: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  733 |         agc_config.release_time_ms = 100.0f;
      |                                      ^    ~
      |                                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:737:5: warning: variable 'sample_period_ms' of type 'float' can be declared 'const' [misc-const-correctness]
  737 |     float sample_period_ms = 1000.0f / sample_rate_hz;
      |     ^
      |           const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:737:30: warning: 1000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  737 |     float sample_period_ms = 1000.0f / sample_rate_hz;
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:737:30: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  737 |     float sample_period_ms = 1000.0f / sample_rate_hz;
      |                              ^     ~
      |                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:738:28: warning: 0.05f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  738 |     if (sample_period_ms > 0.05f) {
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:738:28: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  738 |     if (sample_period_ms > 0.05f) {
      |                            ^   ~
      |                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:740:37: warning: 'max<float>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  740 |         agc_config.attack_time_ms = std::max(agc_config.attack_time_ms, sample_period_ms * 5.0f);
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algobase.h:257:5: note: resolves to this declaration
  257 |     max(const _Tp& __a, const _Tp& __b)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:740:92: warning: 5.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  740 |         agc_config.attack_time_ms = std::max(agc_config.attack_time_ms, sample_period_ms * 5.0f);
      |                                                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:740:92: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  740 |         agc_config.attack_time_ms = std::max(agc_config.attack_time_ms, sample_period_ms * 5.0f);
      |                                                                                            ^  ~
      |                                                                                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:741:38: warning: 'max<float>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  741 |         agc_config.release_time_ms = std::max(agc_config.release_time_ms, sample_period_ms * 50.0f);
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algobase.h:257:5: note: resolves to this declaration
  257 |     max(const _Tp& __a, const _Tp& __b)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:741:94: warning: 50.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  741 |         agc_config.release_time_ms = std::max(agc_config.release_time_ms, sample_period_ms * 50.0f);
      |                                                                                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:741:94: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  741 |         agc_config.release_time_ms = std::max(agc_config.release_time_ms, sample_period_ms * 50.0f);
      |                                                                                              ^   ~
      |                                                                                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:745:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  745 | void FGCom_AGC_Squelch::processAGCSlow(float input_level_db, float sample_rate_hz) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:745:40: warning: 2 adjacent parameters of 'processAGCSlow' of similar type ('float') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  745 | void FGCom_AGC_Squelch::processAGCSlow(float input_level_db, float sample_rate_hz) {
      |                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:745:46: note: the first parameter in the range is 'input_level_db'
  745 | void FGCom_AGC_Squelch::processAGCSlow(float input_level_db, float sample_rate_hz) {
      |                                              ^~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:745:68: note: the last parameter in the range is 'sample_rate_hz'
  745 | void FGCom_AGC_Squelch::processAGCSlow(float input_level_db, float sample_rate_hz) {
      |                                                                    ^~~~~~~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:748:27: warning: 25.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  748 |     if (input_level_db > -25.0f) {
      |                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:748:27: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  748 |     if (input_level_db > -25.0f) {
      |                           ^   ~
      |                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:750:37: warning: 15.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  750 |         agc_config.attack_time_ms = 15.0f;
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:750:37: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  750 |         agc_config.attack_time_ms = 15.0f;
      |                                     ^   ~
      |                                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:751:38: warning: 300.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  751 |         agc_config.release_time_ms = 300.0f;
      |                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:751:38: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  751 |         agc_config.release_time_ms = 300.0f;
      |                                      ^    ~
      |                                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:752:34: warning: 80.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  752 |     } else if (input_level_db < -80.0f) {
      |                                  ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:752:34: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  752 |     } else if (input_level_db < -80.0f) {
      |                                  ^   ~
      |                                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:754:37: warning: 50.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  754 |         agc_config.attack_time_ms = 50.0f;
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:754:37: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  754 |         agc_config.attack_time_ms = 50.0f;
      |                                     ^   ~
      |                                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:755:38: warning: 1000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  755 |         agc_config.release_time_ms = 1000.0f;
      |                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:755:38: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  755 |         agc_config.release_time_ms = 1000.0f;
      |                                      ^     ~
      |                                            F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:758:37: warning: 20.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  758 |         agc_config.attack_time_ms = 20.0f;
      |                                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:758:37: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  758 |         agc_config.attack_time_ms = 20.0f;
      |                                     ^   ~
      |                                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:759:38: warning: 500.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  759 |         agc_config.release_time_ms = 500.0f;
      |                                      ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:759:38: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  759 |         agc_config.release_time_ms = 500.0f;
      |                                      ^    ~
      |                                           F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:763:5: warning: variable 'sample_period_ms' of type 'float' can be declared 'const' [misc-const-correctness]
  763 |     float sample_period_ms = 1000.0f / sample_rate_hz;
      |     ^
      |           const 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:763:30: warning: 1000.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  763 |     float sample_period_ms = 1000.0f / sample_rate_hz;
      |                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:763:30: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  763 |     float sample_period_ms = 1000.0f / sample_rate_hz;
      |                              ^     ~
      |                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:764:28: warning: 0.02f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  764 |     if (sample_period_ms > 0.02f) {
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:764:28: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  764 |     if (sample_period_ms > 0.02f) {
      |                            ^   ~
      |                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:766:37: warning: 'max<float>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  766 |         agc_config.attack_time_ms = std::max(agc_config.attack_time_ms, sample_period_ms * 10.0f);
      |                                     ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algobase.h:257:5: note: resolves to this declaration
  257 |     max(const _Tp& __a, const _Tp& __b)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:766:92: warning: 10.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  766 |         agc_config.attack_time_ms = std::max(agc_config.attack_time_ms, sample_period_ms * 10.0f);
      |                                                                                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:766:92: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  766 |         agc_config.attack_time_ms = std::max(agc_config.attack_time_ms, sample_period_ms * 10.0f);
      |                                                                                            ^   ~
      |                                                                                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:767:38: warning: 'max<float>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  767 |         agc_config.release_time_ms = std::max(agc_config.release_time_ms, sample_period_ms * 100.0f);
      |                                      ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algobase.h:257:5: note: resolves to this declaration
  257 |     max(const _Tp& __a, const _Tp& __b)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:767:94: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  767 |         agc_config.release_time_ms = std::max(agc_config.release_time_ms, sample_period_ms * 100.0f);
      |                                                                                              ^    ~
      |                                                                                                   F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:772:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  772 | float FGCom_AGC_Squelch::dbToLinear(float db) {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:772:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  772 | float FGCom_AGC_Squelch::dbToLinear(float db) {
      | ~~~~~                    ^
      | auto                                          -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:772:26: warning: method 'dbToLinear' can be made static [readability-convert-member-functions-to-static]
  772 | float FGCom_AGC_Squelch::dbToLinear(float db) {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:772:43: warning: parameter name 'db' is too short, expected at least 3 characters [readability-identifier-length]
  772 | float FGCom_AGC_Squelch::dbToLinear(float db) {
      |                                           ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:773:12: warning: 'pow' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  773 |     return std::pow(10.0f, db / 20.0f);
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath:372:3: note: resolves to this declaration
  372 |   pow(float __x, float __y)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:773:21: warning: 10.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  773 |     return std::pow(10.0f, db / 20.0f);
      |                     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:773:21: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  773 |     return std::pow(10.0f, db / 20.0f);
      |                     ^   ~
      |                         F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:773:33: warning: 20.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  773 |     return std::pow(10.0f, db / 20.0f);
      |                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:773:33: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  773 |     return std::pow(10.0f, db / 20.0f);
      |                                 ^   ~
      |                                     F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:776:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  776 | float FGCom_AGC_Squelch::linearToDb(float linear) {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:776:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  776 | float FGCom_AGC_Squelch::linearToDb(float linear) {
      | ~~~~~                    ^
      | auto                                              -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:776:26: warning: method 'linearToDb' can be made static [readability-convert-member-functions-to-static]
  776 | float FGCom_AGC_Squelch::linearToDb(float linear) {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:777:19: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  777 |     if (linear <= 0.0f) return -100.0f;
      |                   ^  ~
      |                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:777:24: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  777 |     if (linear <= 0.0f) return -100.0f;
      |                        ^               
      |                         {
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:777:33: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  777 |     if (linear <= 0.0f) return -100.0f;
      |                                 ^    ~
      |                                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:778:12: warning: 20.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  778 |     return 20.0f * std::log10(linear);
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:778:12: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  778 |     return 20.0f * std::log10(linear);
      |            ^   ~
      |                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:778:20: warning: 'log10' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  778 |     return 20.0f * std::log10(linear);
      |                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath:341:3: note: resolves to this declaration
  341 |   log10(float __x)
      |   ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:781:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  781 | float FGCom_AGC_Squelch::clamp(float value, float min_val, float max_val) {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:781:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  781 | float FGCom_AGC_Squelch::clamp(float value, float min_val, float max_val) {
      | ~~~~~                    ^
      | auto                                                                      -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:781:26: warning: method 'clamp' can be made static [readability-convert-member-functions-to-static]
  781 | float FGCom_AGC_Squelch::clamp(float value, float min_val, float max_val) {
      |                          ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:782:12: warning: 'max<float>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  782 |     return std::max(min_val, std::min(max_val, value));
      |            ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algobase.h:257:5: note: resolves to this declaration
  257 |     max(const _Tp& __a, const _Tp& __b)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:782:30: warning: 'min<float>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  782 |     return std::max(min_val, std::min(max_val, value));
      |                              ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algobase.h:233:5: note: resolves to this declaration
  233 |     min(const _Tp& __a, const _Tp& __b)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:785:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  785 | void FGCom_AGC_Squelch::updateStats() {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:787:81: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  787 |     agc_stats.average_gain_db = (agc_stats.average_gain_db + current_gain_db) / 2.0f;
      |                                                                                 ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:787:81: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  787 |     agc_stats.average_gain_db = (agc_stats.average_gain_db + current_gain_db) / 2.0f;
      |                                                                                 ^  ~
      |                                                                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:796:127: warning: 2.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  796 |     squelch_stats.average_signal_level_db = (squelch_stats.average_signal_level_db + squelch_stats.current_signal_level_db) / 2.0f;
      |                                                                                                                               ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:796:127: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  796 |     squelch_stats.average_signal_level_db = (squelch_stats.average_signal_level_db + squelch_stats.current_signal_level_db) / 2.0f;
      |                                                                                                                               ^  ~
      |                                                                                                                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:799:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  799 | void FGCom_AGC_Squelch::logAGCEvent(const std::string& event) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:799:25: warning: method 'logAGCEvent' can be made static [readability-convert-member-functions-to-static]
  799 | void FGCom_AGC_Squelch::logAGCEvent(const std::string& event) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:800:15: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  800 |     std::cout << "[AGC] " << event << std::endl;
      |               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:800:27: warning: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  800 |     std::cout << "[AGC] " << event << std::endl;
      |                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4032:5: note: resolves to this declaration
 4032 |     operator<<(basic_ostream<_CharT, _Traits>& __os,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:800:36: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  800 |     std::cout << "[AGC] " << event << std::endl;
      |                                    ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
  110 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:800:39: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  800 |     std::cout << "[AGC] " << event << std::endl;
      |                                       ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
  735 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:800:39: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  800 |     std::cout << "[AGC] " << event << std::endl;
      |                                       ^~~~~~~~~
      |                                       '\n'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:803:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  803 | void FGCom_AGC_Squelch::logSquelchEvent(const std::string& event) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:803:25: warning: method 'logSquelchEvent' can be made static [readability-convert-member-functions-to-static]
  803 | void FGCom_AGC_Squelch::logSquelchEvent(const std::string& event) {
      |                         ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:804:15: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  804 |     std::cout << "[SQUELCH] " << event << std::endl;
      |               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
  662 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:804:31: warning: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  804 |     std::cout << "[SQUELCH] " << event << std::endl;
      |                               ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/basic_string.h:4032:5: note: resolves to this declaration
 4032 |     operator<<(basic_ostream<_CharT, _Traits>& __os,
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:804:40: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  804 |     std::cout << "[SQUELCH] " << event << std::endl;
      |                                        ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
  110 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:804:43: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  804 |     std::cout << "[SQUELCH] " << event << std::endl;
      |                                           ^
/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
  735 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.cpp:804:43: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  804 |     std::cout << "[SQUELCH] " << event << std::endl;
      |                                           ^~~~~~~~~
      |                                           '\n'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:1:9: warning: header guard does not follow preferred style [llvm-header-guard]
    1 | #ifndef FGCOM_AGC_SQUELCH_H
      |         ^~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_AGC_SQUELCH_H
    2 | #define FGCOM_AGC_SQUELCH_H
      |         ~~~~~~~~~~~~~~~~~~~
      |         HOME_HAAKEN_GITHUB_PROJECTS_FGCOM_MUMBLE_CLIENT_MUMBLE_PLUGIN_LIB_AGC_SQUELCH_H
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:4:1: warning: #includes are not sorted properly [llvm-include-order]
    4 | #include <string>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:4:1: warning: system include string not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h [llvmlibc-restrict-system-libc-headers]
    4 | #include <string>
      | ^~~~~~~~~~~~~~~~~
    5 | #include <vector>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:5:1: warning: system include vector not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h [llvmlibc-restrict-system-libc-headers]
    5 | #include <vector>
      | ^~~~~~~~~~~~~~~~~
    6 | #include <memory>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:6:1: warning: system include memory not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h [llvmlibc-restrict-system-libc-headers]
    6 | #include <memory>
      | ^~~~~~~~~~~~~~~~~
    7 | #include <mutex>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:7:1: warning: system include mutex not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h [llvmlibc-restrict-system-libc-headers]
    7 | #include <mutex>
      | ^~~~~~~~~~~~~~~~
    8 | #include <atomic>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:8:1: warning: system include atomic not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h [llvmlibc-restrict-system-libc-headers]
    8 | #include <atomic>
      | ^~~~~~~~~~~~~~~~~
    9 | #include <chrono>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:9:1: warning: system include chrono not allowed, transitively included from /home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h [llvmlibc-restrict-system-libc-headers]
    9 | #include <chrono>
      | ^~~~~~~~~~~~~~~~~
   10 | 
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:12:12: warning: enum 'AGCMode' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   12 | enum class AGCMode {
      |            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:20:8: warning: accessing fields in struct 'AGCConfig' is inefficient due to padding; only needs 42 bytes but is using 48 bytes [altera-struct-pack-align]
   20 | struct AGCConfig {
      |        ^
   21 |     AGCMode mode = AGCMode::SLOW;
   22 |     float threshold_db = -60.0f;        // AGC threshold in dB
   23 |     float max_gain_db = 40.0f;          // Maximum gain in dB
   24 |     float min_gain_db = -20.0f;         // Minimum gain in dB
   25 |     float attack_time_ms = 5.0f;        // Attack time in milliseconds
   26 |     float release_time_ms = 100.0f;     // Release time in milliseconds
   27 |     bool enable_agc_hold = true;        // Enable AGC hold function
   28 |     float hold_time_ms = 1000.0f;       // AGC hold time in milliseconds
   29 |     bool enable_agc_fast = false;       // Enable fast AGC response
   30 |     float fast_threshold_db = -40.0f;   // Fast AGC threshold
   31 |     float fast_attack_time_ms = 1.0f;   // Fast AGC attack time
   32 |     float fast_release_time_ms = 10.0f; // Fast AGC release time
   33 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:20:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'AGCConfig'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:20:8: warning: accessing fields in struct 'AGCConfig' is inefficient due to poor alignment; currently aligned to 4 bytes, but recommended alignment is 64 bytes [altera-struct-pack-align]
   20 | struct AGCConfig {
      |        ^
   21 |     AGCMode mode = AGCMode::SLOW;
   22 |     float threshold_db = -60.0f;        // AGC threshold in dB
   23 |     float max_gain_db = 40.0f;          // Maximum gain in dB
   24 |     float min_gain_db = -20.0f;         // Minimum gain in dB
   25 |     float attack_time_ms = 5.0f;        // Attack time in milliseconds
   26 |     float release_time_ms = 100.0f;     // Release time in milliseconds
   27 |     bool enable_agc_hold = true;        // Enable AGC hold function
   28 |     float hold_time_ms = 1000.0f;       // AGC hold time in milliseconds
   29 |     bool enable_agc_fast = false;       // Enable fast AGC response
   30 |     float fast_threshold_db = -40.0f;   // Fast AGC threshold
   31 |     float fast_attack_time_ms = 1.0f;   // Fast AGC attack time
   32 |     float fast_release_time_ms = 10.0f; // Fast AGC release time
   33 | };
      |  
      |   __attribute__((aligned(64)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:20:8: note: use "__attribute__((aligned(64)))" to align struct 'AGCConfig' to 64 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:22:27: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   22 |     float threshold_db = -60.0f;        // AGC threshold in dB
      |                           ^   ~
      |                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:23:25: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   23 |     float max_gain_db = 40.0f;          // Maximum gain in dB
      |                         ^   ~
      |                             F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:24:26: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   24 |     float min_gain_db = -20.0f;         // Minimum gain in dB
      |                          ^   ~
      |                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:25:28: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   25 |     float attack_time_ms = 5.0f;        // Attack time in milliseconds
      |                            ^  ~
      |                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:26:29: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   26 |     float release_time_ms = 100.0f;     // Release time in milliseconds
      |                             ^    ~
      |                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:28:26: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   28 |     float hold_time_ms = 1000.0f;       // AGC hold time in milliseconds
      |                          ^     ~
      |                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:30:32: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   30 |     float fast_threshold_db = -40.0f;   // Fast AGC threshold
      |                                ^   ~
      |                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:31:33: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   31 |     float fast_attack_time_ms = 1.0f;   // Fast AGC attack time
      |                                 ^  ~
      |                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:32:34: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   32 |     float fast_release_time_ms = 10.0f; // Fast AGC release time
      |                                  ^   ~
      |                                      F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:36:8: warning: accessing fields in struct 'SquelchConfig' is inefficient due to padding; only needs 31 bytes but is using 40 bytes [altera-struct-pack-align]
   36 | struct SquelchConfig {
      |        ^
   37 |     bool enabled = true;                // Squelch enabled/disabled
   38 |     float threshold_db = -80.0f;        // Squelch threshold in dB
   39 |     float hysteresis_db = 3.0f;         // Hysteresis to prevent chattering
   40 |     float attack_time_ms = 10.0f;      // Squelch attack time
   41 |     float release_time_ms = 50.0f;      // Squelch release time
   42 |     bool tone_squelch = false;          // Enable tone squelch
   43 |     float tone_frequency_hz = 100.0f;   // Tone frequency for tone squelch
   44 |     float tone_tolerance_hz = 5.0f;     // Tone frequency tolerance
   45 |     bool noise_squelch = true;          // Enable noise squelch
   46 |     float noise_threshold_db = -70.0f;  // Noise squelch threshold
   47 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:36:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'SquelchConfig'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:36:8: warning: accessing fields in struct 'SquelchConfig' is inefficient due to poor alignment; currently aligned to 4 bytes, but recommended alignment is 32 bytes [altera-struct-pack-align]
   36 | struct SquelchConfig {
      |        ^
   37 |     bool enabled = true;                // Squelch enabled/disabled
   38 |     float threshold_db = -80.0f;        // Squelch threshold in dB
   39 |     float hysteresis_db = 3.0f;         // Hysteresis to prevent chattering
   40 |     float attack_time_ms = 10.0f;      // Squelch attack time
   41 |     float release_time_ms = 50.0f;      // Squelch release time
   42 |     bool tone_squelch = false;          // Enable tone squelch
   43 |     float tone_frequency_hz = 100.0f;   // Tone frequency for tone squelch
   44 |     float tone_tolerance_hz = 5.0f;     // Tone frequency tolerance
   45 |     bool noise_squelch = true;          // Enable noise squelch
   46 |     float noise_threshold_db = -70.0f;  // Noise squelch threshold
   47 | };
      |  
      |   __attribute__((aligned(32)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:36:8: note: use "__attribute__((aligned(32)))" to align struct 'SquelchConfig' to 32 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:38:27: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   38 |     float threshold_db = -80.0f;        // Squelch threshold in dB
      |                           ^   ~
      |                               F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:39:27: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   39 |     float hysteresis_db = 3.0f;         // Hysteresis to prevent chattering
      |                           ^  ~
      |                              F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:40:28: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   40 |     float attack_time_ms = 10.0f;      // Squelch attack time
      |                            ^   ~
      |                                F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:41:29: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   41 |     float release_time_ms = 50.0f;      // Squelch release time
      |                             ^   ~
      |                                 F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:43:31: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   43 |     float tone_frequency_hz = 100.0f;   // Tone frequency for tone squelch
      |                               ^    ~
      |                                    F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:44:31: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   44 |     float tone_tolerance_hz = 5.0f;     // Tone frequency tolerance
      |                               ^  ~
      |                                  F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:46:33: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
   46 |     float noise_threshold_db = -70.0f;  // Noise squelch threshold
      |                                 ^   ~
      |                                     F
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:50:8: warning: accessing fields in struct 'AGCStats' is inefficient due to padding; only needs 41 bytes but is using 48 bytes [altera-struct-pack-align]
   50 | struct AGCStats {
      |        ^
   51 |     float current_gain_db;
   52 |     float input_level_db;
   53 |     float output_level_db;
   54 |     float signal_to_noise_db;
   55 |     bool agc_active;
   56 |     std::chrono::system_clock::time_point last_adjustment;
   57 |     int total_adjustments;
   58 |     float average_gain_db;
   59 |     float peak_gain_db;
   60 |     float valley_gain_db;
   61 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:50:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'AGCStats'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:50:8: warning: accessing fields in struct 'AGCStats' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 64 bytes [altera-struct-pack-align]
   50 | struct AGCStats {
      |        ^
   51 |     float current_gain_db;
   52 |     float input_level_db;
   53 |     float output_level_db;
   54 |     float signal_to_noise_db;
   55 |     bool agc_active;
   56 |     std::chrono::system_clock::time_point last_adjustment;
   57 |     int total_adjustments;
   58 |     float average_gain_db;
   59 |     float peak_gain_db;
   60 |     float valley_gain_db;
   61 | };
      |  
      |   __attribute__((aligned(64)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:50:8: note: use "__attribute__((aligned(64)))" to align struct 'AGCStats' to 64 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:50:8: warning: constructor does not initialize these fields: current_gain_db, input_level_db, output_level_db, signal_to_noise_db, agc_active, total_adjustments, average_gain_db, peak_gain_db, valley_gain_db [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
   50 | struct AGCStats {
      |        ^
   51 |     float current_gain_db;
      |                          
      |                          {}
   52 |     float input_level_db;
      |                         
      |                         {}
   53 |     float output_level_db;
      |                          
      |                          {}
   54 |     float signal_to_noise_db;
      |                             
      |                             {}
   55 |     bool agc_active;
      |                    
      |                    {}
   56 |     std::chrono::system_clock::time_point last_adjustment;
   57 |     int total_adjustments;
      |                          
      |                          {}
   58 |     float average_gain_db;
      |                          
      |                          {}
   59 |     float peak_gain_db;
      |                       
      |                       {}
   60 |     float valley_gain_db;
      |                         
      |                         {}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:64:8: warning: accessing fields in struct 'SquelchStats' is inefficient due to padding; only needs 34 bytes but is using 48 bytes [altera-struct-pack-align]
   64 | struct SquelchStats {
      |        ^
   65 |     bool squelch_open;
   66 |     float current_signal_level_db;
   67 |     float squelch_threshold_db;
   68 |     std::chrono::system_clock::time_point last_squelch_change;
   69 |     int squelch_opens;
   70 |     int squelch_closes;
   71 |     float average_signal_level_db;
   72 |     bool tone_detected;
   73 |     float tone_strength_db;
   74 | };
      |  
      |   __attribute__((packed))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:64:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'SquelchStats'
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:64:8: warning: accessing fields in struct 'SquelchStats' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 64 bytes [altera-struct-pack-align]
   64 | struct SquelchStats {
      |        ^
   65 |     bool squelch_open;
   66 |     float current_signal_level_db;
   67 |     float squelch_threshold_db;
   68 |     std::chrono::system_clock::time_point last_squelch_change;
   69 |     int squelch_opens;
   70 |     int squelch_closes;
   71 |     float average_signal_level_db;
   72 |     bool tone_detected;
   73 |     float tone_strength_db;
   74 | };
      |  
      |   __attribute__((aligned(64)))
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:64:8: note: use "__attribute__((aligned(64)))" to align struct 'SquelchStats' to 64 bytes
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:64:8: warning: constructor does not initialize these fields: squelch_open, current_signal_level_db, squelch_threshold_db, squelch_opens, squelch_closes, average_signal_level_db, tone_detected, tone_strength_db [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
   64 | struct SquelchStats {
      |        ^
   65 |     bool squelch_open;
      |                      
      |                      {}
   66 |     float current_signal_level_db;
      |                                  
      |                                  {}
   67 |     float squelch_threshold_db;
      |                               
      |                               {}
   68 |     std::chrono::system_clock::time_point last_squelch_change;
   69 |     int squelch_opens;
      |                      
      |                      {}
   70 |     int squelch_closes;
      |                       
      |                       {}
   71 |     float average_signal_level_db;
      |                                  
      |                                  {}
   72 |     bool tone_detected;
      |                       
      |                       {}
   73 |     float tone_strength_db;
      |                           
      |                           {}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:94:11: warning: use default member initializer for 'current_gain_db' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   94 |     float current_gain_db;
      |           ^              
      |                          {0.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:95:11: warning: use default member initializer for 'target_gain_db' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   95 |     float target_gain_db;
      |           ^             
      |                         {0.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:97:11: warning: use default member initializer for 'agc_hold_timer' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   97 |     float agc_hold_timer;
      |           ^             
      |                         {0.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:98:10: warning: use default member initializer for 'agc_hold_active' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   98 |     bool agc_hold_active;
      |          ^              
      |                         {false}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:101:10: warning: use default member initializer for 'squelch_state' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  101 |     bool squelch_state;
      |          ^            
      |                       {false}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:102:11: warning: use default member initializer for 'squelch_timer' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  102 |     float squelch_timer;
      |           ^            
      |                        {0.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:103:11: warning: use default member initializer for 'tone_detector_phase' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  103 |     float tone_detector_phase;
      |           ^                  
      |                              {0.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:104:11: warning: use default member initializer for 'tone_detector_amplitude' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
  104 |     float tone_detector_amplitude;
      |           ^                      
      |                                  {0.0f}
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:117:31: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  117 |     static FGCom_AGC_Squelch& getInstance();
      |            ~~~~~~~~~~~~~~~~~~ ^            
      |            auto                             -> FGCom_AGC_Squelch&
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:122:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  122 |     AGCMode getAGCMode() const;
      |     ~~~~~~~ ^                 
      |     auto                       -> AGCMode
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:124:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  124 |     float getAGCThreshold() const;
      |     ~~~~~ ^                      
      |     auto                          -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:126:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  126 |     float getAGCAttackTime() const;
      |     ~~~~~ ^                       
      |     auto                           -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:128:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  128 |     float getAGCReleaseTime() const;
      |     ~~~~~ ^                        
      |     auto                            -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:130:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  130 |     float getAGCMaxGain() const;
      |     ~~~~~ ^                    
      |     auto                        -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:132:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  132 |     float getAGCMinGain() const;
      |     ~~~~~ ^                    
      |     auto                        -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:134:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  134 |     bool isAGCEnabled() const;
      |     ~~~~ ^                   
      |     auto                      -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:138:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  138 |     bool isSquelchEnabled() const;
      |     ~~~~ ^                       
      |     auto                          -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:140:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  140 |     float getSquelchThreshold() const;
      |     ~~~~~ ^                          
      |     auto                              -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:142:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  142 |     float getSquelchHysteresis() const;
      |     ~~~~~ ^                           
      |     auto                               -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:144:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  144 |     float getSquelchAttackTime() const;
      |     ~~~~~ ^                           
      |     auto                               -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:146:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  146 |     float getSquelchReleaseTime() const;
      |     ~~~~~ ^                            
      |     auto                                -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:147:39: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  147 |     void setToneSquelch(bool enabled, float frequency_hz = 100.0f);
      |                                       ^                  ~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:147:60: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  147 |     void setToneSquelch(bool enabled, float frequency_hz = 100.0f);
      |                                                            ^
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:148:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  148 |     bool isToneSquelchEnabled() const;
      |     ~~~~ ^                           
      |     auto                              -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:149:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  149 |     float getToneSquelchFrequency() const;
      |     ~~~~~ ^                              
      |     auto                                  -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:150:40: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  150 |     void setNoiseSquelch(bool enabled, float threshold_db = -70.0f);
      |                                        ^                  ~~~~~~~~
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:150:62: warning: 70.0f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  150 |     void setNoiseSquelch(bool enabled, float threshold_db = -70.0f);
      |                                                              ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:150:62: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
note: this fix will not be applied because it overlaps with another fix
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:151:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  151 |     bool isNoiseSquelchEnabled() const;
      |     ~~~~ ^                            
      |     auto                               -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:152:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  152 |     float getNoiseSquelchThreshold() const;
      |     ~~~~~ ^                               
      |     auto                                   -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:157:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  157 |     bool isSquelchOpen() const;
      |     ~~~~ ^                    
      |     auto                       -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:158:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  158 |     float getCurrentGain() const;
      |     ~~~~~ ^                     
      |     auto                         -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:159:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  159 |     float getCurrentSignalLevel() const;
      |     ~~~~~ ^                            
      |     auto                                -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:163:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  163 |     AGCConfig getAGCConfig() const;
      |     ~~~~~~~~~ ^                   
      |     auto                           -> AGCConfig
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:165:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  165 |     SquelchConfig getSquelchConfig() const;
      |     ~~~~~~~~~~~~~ ^                       
      |     auto                                   -> SquelchConfig
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:168:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  168 |     AGCStats getAGCStats() const;
      |     ~~~~~~~~ ^                  
      |     auto                         -> AGCStats
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:169:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  169 |     SquelchStats getSquelchStats() const;
      |     ~~~~~~~~~~~~ ^                      
      |     auto                                 -> SquelchStats
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:175:30: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  175 |     std::vector<std::string> getAGCPresets() const;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~ ^                    
      |     auto                                           -> std::vector<std::string>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:176:30: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  176 |     std::vector<std::string> getSquelchPresets() const;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~ ^                        
      |     auto                                               -> std::vector<std::string>
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:179:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  179 |     std::string getAGCStatusJSON() const;
      |     ~~~~~~~~~~~ ^                       
      |     auto                                 -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:180:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  180 |     std::string getSquelchStatusJSON() const;
      |     ~~~~~~~~~~~ ^                           
      |     auto                                     -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:181:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  181 |     bool updateAGCFromJSON(const std::string& json_config);
      |     ~~~~ ^                                                
      |     auto                                                   -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:182:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  182 |     bool updateSquelchFromJSON(const std::string& json_config);
      |     ~~~~ ^                                                    
      |     auto                                                       -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:188:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  188 |     bool detectTone(float* samples, size_t sample_count, float sample_rate_hz);
      |     ~~~~ ^                                                                    
      |     auto                                                                       -> bool
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:189:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  189 |     float calculateRMS(const float* samples, size_t sample_count);
      |     ~~~~~ ^                                                      
      |     auto                                                          -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:190:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  190 |     float calculatePeak(float* samples, size_t sample_count);
      |     ~~~~~ ^                                                 
      |     auto                                                     -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:200:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  200 |     float dbToLinear(float db);
      |     ~~~~~ ^                   
      |     auto                       -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:200:28: warning: parameter name 'db' is too short, expected at least 3 characters [readability-identifier-length]
  200 |     float dbToLinear(float db);
      |                            ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:201:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  201 |     float linearToDb(float linear);
      |     ~~~~~ ^                       
      |     auto                           -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:202:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  202 |     float clamp(float value, float min_val, float max_val);
      |     ~~~~~ ^                                               
      |     auto                                                   -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:211:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  211 |     float calculateAttackTime(AGCMode mode);
      |     ~~~~~ ^                                
      |     auto                                    -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:212:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  212 |     float calculateReleaseTime(AGCMode mode);
      |     ~~~~~ ^                                 
      |     auto                                     -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:215:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  215 |     float calculateSquelchThreshold(float noise_floor_db, float desired_snr_db);
      |     ~~~~~ ^                                                                    
      |     auto                                                                        -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:216:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  216 |     float calculateHysteresis(float threshold_db, float signal_variance_db);
      |     ~~~~~ ^                                                                
      |     auto                                                                    -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:219:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  219 |     float calculateAudioLevel(float* samples, size_t sample_count);
      |     ~~~~~ ^                                                       
      |     auto                                                           -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:220:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  220 |     float calculateSNR(float signal_level_db, float noise_level_db);
      |     ~~~~~ ^                                                        
      |     auto                                                            -> float
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:223:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  223 |     AGCConfig getAGCPreset(const std::string& preset_name);
      |     ~~~~~~~~~ ^                                           
      |     auto                                                   -> AGCConfig
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:224:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  224 |     SquelchConfig getSquelchPreset(const std::string& preset_name);
      |     ~~~~~~~~~~~~~ ^                                               
      |     auto                                                           -> SquelchConfig
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:227:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  227 |     std::string AGCConfigToJSON(const AGCConfig& config);
      |     ~~~~~~~~~~~ ^                                       
      |     auto                                                 -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:228:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  228 |     std::string SquelchConfigToJSON(const SquelchConfig& config);
      |     ~~~~~~~~~~~ ^                                               
      |     auto                                                         -> std::string
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:229:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  229 |     AGCConfig JSONToAGCConfig(const std::string& json);
      |     ~~~~~~~~~ ^                                       
      |     auto                                               -> AGCConfig
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:230:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  230 |     SquelchConfig JSONToSquelchConfig(const std::string& json);
      |     ~~~~~~~~~~~~~ ^                                           
      |     auto                                                       -> SquelchConfig
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:231:1: warning: namespace 'AGC_Squelch_Utils' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  231 | }
      | ^
/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/agc_squelch.h:209:11: note: namespace 'AGC_Squelch_Utils' starts here
  209 | namespace AGC_Squelch_Utils {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
