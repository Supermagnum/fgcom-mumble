<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.13.0"/>
    <errors>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;FGCom_TerrainElevationManager::isPointInTile&apos;" verbose="Unused private function: &apos;FGCom_TerrainElevationManager::isPointInTile&apos;" cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.h" line="233" column="10"/>
            <symbol>FGCom_TerrainElevationManager::isPointInTile</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;FGCom_TerrainElevationManager::submitTask&apos;" verbose="Unused private function: &apos;FGCom_TerrainElevationManager::submitTask&apos;" cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.h" line="237" column="10"/>
            <symbol>FGCom_TerrainElevationManager::submitTask</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;FGCom_TerrainElevationManager::evictOldCacheEntries&apos;" verbose="Unused private function: &apos;FGCom_TerrainElevationManager::evictOldCacheEntries&apos;" cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.h" line="240" column="10"/>
            <symbol>FGCom_TerrainElevationManager::evictOldCacheEntries</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;FGCom_TerrainObstructionAnalyzer::checkFresnelZoneClearance&apos;" verbose="Unused private function: &apos;FGCom_TerrainObstructionAnalyzer::checkFresnelZoneClearance&apos;" cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.h" line="326" column="10"/>
            <symbol>FGCom_TerrainObstructionAnalyzer::checkFresnelZoneClearance</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;FGCom_TerrainObstructionAnalyzer&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;FGCom_TerrainObstructionAnalyzer&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.h" line="297" column="5"/>
            <symbol>FGCom_TerrainObstructionAnalyzer</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;contents&apos; can be declared as pointer to const" verbose="Parameter &apos;contents&apos; can be declared as pointer to const" cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp" line="34" column="52" info="Parameter &apos;contents&apos; can be declared as pointer to const"/>
            <symbol>contents</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp" line="309" column="15"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::all_of or std::none_of algorithm instead of a raw loop." verbose="Consider using std::all_of or std::none_of algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp" line="822" column="5"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;NoiseFloorData::noise_breakdown&apos; is not initialized in the constructor." verbose="Member variable &apos;NoiseFloorData::noise_breakdown&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_environmental_api.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_environmental_api.cpp" line="104" column="21"/>
            <symbol>NoiseFloorData::noise_breakdown</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;timestamp&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;timestamp&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h" line="22" column="9"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;timestamp&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;timestamp&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h" line="37" column="9"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;timestamp&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;timestamp&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h" line="53" column="9"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;timestamp&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;timestamp&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h" line="69" column="9"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;last_update&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;last_update&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h" line="83" column="9"/>
            <symbol>last_update</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;timestamp&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;timestamp&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h" line="103" column="9"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;timestamp&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;timestamp&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h" line="124" column="9"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;timestamp&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;timestamp&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h" line="137" column="9"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;last_cleanup&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;last_cleanup&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp" line="18" column="5"/>
            <symbol>last_cleanup</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::all_of or std::none_of algorithm instead of a raw loop." verbose="Consider using std::all_of or std::none_of algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp" line="128" column="5"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::count_if algorithm instead of a raw loop." verbose="Consider using std::count_if algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp" line="485" column="17"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;dlat&apos; is assigned a value that is never used." verbose="Variable &apos;dlat&apos; is assigned a value that is never used." cwe="563" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.cpp" line="555" column="17"/>
            <symbol>dlat</symbol>
        </error>
        <error id="checkersReport" severity="information" msg="Active checkers: 161/592 (use --checkers-report=&lt;filename&gt; to see details)" verbose="Active checkers: 161/592 (use --checkers-report=&lt;filename&gt; to see details)"/>
    </errors>
</results>
