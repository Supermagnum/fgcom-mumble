<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.13.0"/>
    <errors>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;FGCom_TerrainElevationManager::isPointInTile&apos;" verbose="Unused private function: &apos;FGCom_TerrainElevationManager::isPointInTile&apos;" cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.h" line="233" column="10"/>
            <symbol>FGCom_TerrainElevationManager::isPointInTile</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;FGCom_TerrainElevationManager::submitTask&apos;" verbose="Unused private function: &apos;FGCom_TerrainElevationManager::submitTask&apos;" cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.h" line="237" column="10"/>
            <symbol>FGCom_TerrainElevationManager::submitTask</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;FGCom_TerrainElevationManager::evictOldCacheEntries&apos;" verbose="Unused private function: &apos;FGCom_TerrainElevationManager::evictOldCacheEntries&apos;" cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.h" line="240" column="10"/>
            <symbol>FGCom_TerrainElevationManager::evictOldCacheEntries</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;FGCom_TerrainObstructionAnalyzer::checkFresnelZoneClearance&apos;" verbose="Unused private function: &apos;FGCom_TerrainObstructionAnalyzer::checkFresnelZoneClearance&apos;" cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.h" line="326" column="10"/>
            <symbol>FGCom_TerrainObstructionAnalyzer::checkFresnelZoneClearance</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;FGCom_TerrainObstructionAnalyzer&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;FGCom_TerrainObstructionAnalyzer&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.h" line="297" column="5"/>
            <symbol>FGCom_TerrainObstructionAnalyzer</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;contents&apos; can be declared as pointer to const" verbose="Parameter &apos;contents&apos; can be declared as pointer to const" cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp" line="34" column="52" info="Parameter &apos;contents&apos; can be declared as pointer to const"/>
            <symbol>contents</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp" line="309" column="15"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::all_of or std::none_of algorithm instead of a raw loop." verbose="Consider using std::all_of or std::none_of algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/terrain_elevation.cpp" line="822" column="5"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;frequency&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;frequency&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="65" column="9"/>
            <symbol>frequency</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;dialedFRQ&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;dialedFRQ&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="66" column="9"/>
            <symbol>dialedFRQ</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;antenna_type&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;antenna_type&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="81" column="9"/>
            <symbol>antenna_type</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;frequency_band&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;frequency_band&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="82" column="9"/>
            <symbol>frequency_band</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;band&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;band&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="101" column="9"/>
            <symbol>band</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;mode&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;mode&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="102" column="9"/>
            <symbol>mode</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;grid_locator&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;grid_locator&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="103" column="9"/>
            <symbol>grid_locator</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;type&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;type&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_ground_system.h" line="41" column="9"/>
            <symbol>type</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;material&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;material&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_ground_system.h" line="49" column="9"/>
            <symbol>material</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;notes&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;notes&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_ground_system.h" line="50" column="9"/>
            <symbol>notes</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;antenna_name&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;antenna_name&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_ground_system.h" line="68" column="9"/>
            <symbol>antenna_name</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;polarization&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;polarization&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_ground_system.h" line="70" column="9"/>
            <symbol>polarization</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;antenna_type&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;antenna_type&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_ground_system.h" line="89" column="9"/>
            <symbol>antenna_type</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;lclRadio&apos; should be passed by const reference." verbose="Parameter &apos;lclRadio&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp" line="402" column="68" info="Function parameter &apos;lclRadio&apos; should be passed by const reference."/>
            <symbol>lclRadio</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp" line="224" column="22"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp" line="227" column="22"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_vhf.cpp" line="230" column="22"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_uhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_uhf.cpp" line="209" column="17" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="161" column="25" info="Virtual function in base class"/>
            <symbol>getType</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;isCompatible&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;isCompatible&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_uhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_uhf.cpp" line="211" column="10" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="256" column="18" info="Virtual function in base class"/>
            <symbol>isCompatible</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;processAudioSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;processAudioSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_uhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_uhf.cpp" line="216" column="18" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="217" column="18" info="Virtual function in base class"/>
            <symbol>processAudioSamples</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSignal&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSignal&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_uhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_uhf.cpp" line="266" column="28" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="176" column="36" info="Virtual function in base class"/>
            <symbol>getSignal</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;conv_chan2freq&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;conv_chan2freq&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_uhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_uhf.cpp" line="335" column="17" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="185" column="25" info="Virtual function in base class"/>
            <symbol>conv_chan2freq</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;conv_freq2chan&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;conv_freq2chan&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_uhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_uhf.cpp" line="339" column="17" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="194" column="25" info="Virtual function in base class"/>
            <symbol>conv_freq2chan</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getFrqMatch&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getFrqMatch&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_uhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_uhf.cpp" line="344" column="11" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="208" column="19" info="Virtual function in base class"/>
            <symbol>getFrqMatch</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;frequency_mhz&apos; shadows outer variable" verbose="Local variable &apos;frequency_mhz&apos; shadows outer variable" cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_uhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_uhf.cpp" line="296" column="20" info="Shadow variable"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_uhf.cpp" line="283" column="16" info="Shadowed declaration"/>
            <symbol>frequency_mhz</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;lclRadio&apos; should be passed by const reference." verbose="Parameter &apos;lclRadio&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_uhf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_uhf.cpp" line="222" column="139" info="Function parameter &apos;lclRadio&apos; should be passed by const reference."/>
            <symbol>lclRadio</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;timestamp&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;timestamp&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/solar_data.h" line="46" column="9"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getType&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.cpp" line="154" column="17" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="161" column="25" info="Virtual function in base class"/>
            <symbol>getType</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;isCompatible&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;isCompatible&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.cpp" line="156" column="10" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="256" column="18" info="Virtual function in base class"/>
            <symbol>isCompatible</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSignal&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSignal&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.cpp" line="162" column="28" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="176" column="36" info="Virtual function in base class"/>
            <symbol>getSignal</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;conv_chan2freq&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;conv_chan2freq&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.cpp" line="205" column="17" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="185" column="25" info="Virtual function in base class"/>
            <symbol>conv_chan2freq</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;conv_freq2chan&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;conv_freq2chan&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.cpp" line="209" column="17" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="194" column="25" info="Virtual function in base class"/>
            <symbol>conv_freq2chan</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getFrqMatch&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getFrqMatch&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.cpp" line="214" column="11" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="208" column="19" info="Virtual function in base class"/>
            <symbol>getFrqMatch</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;processAudioSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;processAudioSamples&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.cpp" line="252" column="10" info="Function in derived class"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model.h" line="217" column="18" info="Virtual function in base class"/>
            <symbol>processAudioSamples</symbol>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;signal.quality&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;signal.quality&apos; is reassigned a value before the old one has been used." cwe="563" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.cpp" line="170" column="24" info="signal.quality is overwritten"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.cpp" line="164" column="24" info="signal.quality is assigned"/>
            <symbol>signal.quality</symbol>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;power_manager&apos; can be declared as reference to const" verbose="Variable &apos;power_manager&apos; can be declared as reference to const" cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/radio_model_hf.cpp" line="47" column="15" info="Variable &apos;power_manager&apos; can be declared as reference to const"/>
            <symbol>power_manager</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;FGCom_AntennaConfig::splitString&apos;" verbose="Unused private function: &apos;FGCom_AntennaConfig::splitString&apos;" cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_ground_system.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_ground_system.h" line="228" column="37"/>
            <symbol>FGCom_AntennaConfig::splitString</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_ground_system.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_ground_system.cpp" line="229" column="17"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_ground_system.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_ground_system.cpp" line="433" column="18"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;timestamp&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;timestamp&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_orientation_calculator.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h" line="22" column="9"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;timestamp&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;timestamp&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_orientation_calculator.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h" line="37" column="9"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;timestamp&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;timestamp&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_orientation_calculator.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h" line="53" column="9"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;timestamp&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;timestamp&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_orientation_calculator.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h" line="69" column="9"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;last_update&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;last_update&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_orientation_calculator.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h" line="83" column="9"/>
            <symbol>last_update</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;timestamp&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;timestamp&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_orientation_calculator.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h" line="103" column="9"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;timestamp&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;timestamp&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_orientation_calculator.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h" line="124" column="9"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;timestamp&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;timestamp&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_orientation_calculator.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/vehicle_dynamics.h" line="137" column="9"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;timestamp&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;timestamp&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_orientation_calculator.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_orientation_calculator.h" line="23" column="9"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Return value &apos;g_antenna_orientation_calculator-&gt;initialize()&apos; is always true" verbose="Return value &apos;g_antenna_orientation_calculator-&gt;initialize()&apos; is always true" cwe="571" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_orientation_calculator.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_orientation_calculator.cpp" line="472" column="56" info="Return value &apos;g_antenna_orientation_calculator-&gt;initialize()&apos; is always true"/>
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_orientation_calculator.cpp" line="472" column="56" info="Calling function &apos;initialize&apos; returns 1"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_orientation_calculator.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_orientation_calculator.cpp" line="140" column="17"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_orientation_calculator.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/antenna_orientation_calculator.cpp" line="329" column="15"/>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;FGCom_PatternInterpolation::linearInterpolate&apos;" verbose="Unused private function: &apos;FGCom_PatternInterpolation::linearInterpolate&apos;" cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.h" line="136" column="12"/>
            <symbol>FGCom_PatternInterpolation::linearInterpolate</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;FGCom_PatternInterpolation::calculatePatternStats&apos;" verbose="Unused private function: &apos;FGCom_PatternInterpolation::calculatePatternStats&apos;" cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.h" line="159" column="18"/>
            <symbol>FGCom_PatternInterpolation::calculatePatternStats</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;p&apos; can be declared as pointer to const" verbose="Variable &apos;p&apos; can be declared as pointer to const" cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.cpp" line="144" column="16" info="Variable &apos;p&apos; can be declared as pointer to const"/>
            <symbol>p</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;p&apos; can be declared as pointer to const" verbose="Variable &apos;p&apos; can be declared as pointer to const" cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.cpp" line="190" column="16" info="Variable &apos;p&apos; can be declared as pointer to const"/>
            <symbol>p</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.cpp" line="317" column="23"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.cpp" line="331" column="25"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.cpp" line="347" column="18"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.cpp" line="360" column="18"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.cpp" line="373" column="20"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::all_of or std::none_of algorithm instead of a raw loop." verbose="Consider using std::all_of or std::none_of algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.cpp" line="544" column="5"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.cpp">
            <location file="/home/haaken/github-projects/fgcom-mumble/client/mumble-plugin/lib/pattern_interpolation.cpp" line="578" column="18"/>
        </error>
        <error id="checkersReport" severity="information" msg="Active checkers: 161/592 (use --checkers-report=&lt;filename&gt; to see details)" verbose="Active checkers: 161/592 (use --checkers-report=&lt;filename&gt; to see details)"/>
    </errors>
</results>
